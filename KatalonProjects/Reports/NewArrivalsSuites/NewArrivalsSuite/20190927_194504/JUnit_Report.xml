<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite" time="546" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite" tests="1" failures="0" errors="0" time="546" timestamp="2019-09-27 19:45:08" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20190927_194504"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20190927_194504\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="501e61fab243c3b3e30686b59f6abfc9"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrival/CCOrders" classname="Test Cases/NewArrival/CCOrders" status="PASSED">
         <system-out><![CDATA[2019-09-27 19:45:08 - [TEST_CASE][PASSED] - Test Cases/NewArrival/CCOrders: Test Cases/NewArrival/CCOrders

2019-09-27 19:45:08 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-09-27 19:45:08 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-09-27 19:45:08 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-09-27 19:45:09 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:45:09 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:45:09 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:45:09 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-09-27 19:45:13 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:45:13 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:45:14 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:45:14 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:45:14 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:45:14 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:45:15 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:45:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:45:16 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:45:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:45:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:45:17 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:45:17 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:45:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:45:19 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:45:19 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:45:19 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:45:19 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:45:19 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:45:19 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:45:21 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:45:21 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:45:22 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:45:22 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:45:22 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:45:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:45:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:45:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:45:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:45:26 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:45:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:45:26 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:45:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:45:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:45:27 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:45:37 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:45:37 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:45:37 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:45:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:45:37 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:45:37 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:45:38 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:45:38 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:45:38 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:45:38 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:45:38 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:45:38 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:45:38 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:45:41 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:45:41 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:45:48 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:45:48 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:45:49 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:45:49 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:45:50 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:45:50 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:45:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:45:50 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:45:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:45:50 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:45:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:45:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:45:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:45:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:45:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:45:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:45:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:45:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:46:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:46:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:46:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:46:06 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:46:06 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:46:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:46:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:46:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:46:10 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:46:11 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:46:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:46:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:46:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:46:13 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:46:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:46:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:46:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:46:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:46:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:46:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:46:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:46:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:46:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:46:16 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:46:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:46:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:46:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:46:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:46:23 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:46:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:46:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:46:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:46:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:46:27 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:46:27 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:46:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:46:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:46:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:46:29 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:46:29 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:46:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:46:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:46:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:46:31 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:46:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:46:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:46:33 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:46:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:46:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:46:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:46:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:46:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:46:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:46:35 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:46:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:46:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:46:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:46:41 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:46:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:46:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:46:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:46:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:46:44 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:46:44 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:46:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:46:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:46:45 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:46:45 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:46:45 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:46:45 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:46:48 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:46:48 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:46:48 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:46:48 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:46:48 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:46:48 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:46:48 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:46:50 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:46:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:46:50 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:46:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:46:50 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:46:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:46:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:46:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:46:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:46:55 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:46:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:46:55 - [MESSAGE][PASSED] - Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:46:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:46:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:46:56 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:47:06 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:47:06 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:47:06 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:47:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:47:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:47:06 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:47:06 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:47:06 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:47:06 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:47:06 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:47:06 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:47:07 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:47:07 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:47:09 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:47:09 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:47:16 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:47:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:47:17 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:47:17 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:47:18 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:47:18 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:47:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:47:19 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:47:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:47:19 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:47:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:47:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:47:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:47:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:47:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:47:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:47:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:47:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:47:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:47:35 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:47:35 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:47:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:47:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:47:39 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:47:39 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:47:39 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:47:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:47:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:47:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:47:41 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:47:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:47:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:47:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:47:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:47:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:47:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:47:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:47:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:47:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:47:44 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:47:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:47:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:47:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:47:50 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:47:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:47:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:47:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:47:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:47:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:47:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:47:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:47:56 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:47:56 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:47:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:48:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:48:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:48:00 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:48:00 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:48:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:48:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:48:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:48:02 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:48:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:48:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:48:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:48:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:48:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:48:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:48:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:48:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:48:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:48:05 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:48:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:48:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:48:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:48:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:48:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:48:11 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:48:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:48:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:48:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:48:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:48:14 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:48:14 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:48:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:48:15 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:48:15 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:48:15 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:48:16 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:48:16 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:48:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:48:18 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:48:18 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:48:18 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:48:18 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:48:18 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:48:18 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:48:20 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:48:20 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:48:20 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:48:20 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:48:20 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:48:20 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:48:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:48:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:48:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:48:24 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:48:24 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:48:24 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:48:24 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:48:24 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:48:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:48:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:48:25 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:48:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:48:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:48:25 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:48:35 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:48:35 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:48:35 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:48:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:48:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:48:35 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:48:35 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:48:36 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:48:36 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:48:36 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:48:36 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:48:36 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:48:36 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:48:38 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:48:38 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:48:46 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:48:46 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:48:47 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:48:47 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:48:48 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:48:48 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:48:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:48:48 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:48:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:48:48 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:48:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:48:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:48:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:48:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:48:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:48:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:48:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:48:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:48:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:48:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:49:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:49:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:49:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:49:06 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:49:06 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:49:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:49:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:49:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:49:10 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:49:10 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:49:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:49:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:49:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:49:12 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:49:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:49:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:49:14 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:49:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:49:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:49:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:49:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:49:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:49:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:49:16 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:49:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:49:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:49:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:49:22 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:49:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:49:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:49:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:49:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:49:28 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:49:28 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:49:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:49:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:49:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:49:30 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:49:30 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:49:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:49:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:49:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:49:32 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:49:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:49:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:49:34 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:49:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:49:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:49:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:49:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:49:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:49:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:49:36 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:49:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:49:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:49:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:49:42 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:49:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:49:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:49:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:49:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:49:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:49:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:49:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:49:45 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:49:45 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:49:46 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:49:46 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:49:48 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:49:48 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:49:48 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:49:48 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:49:48 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:49:48 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:49:48 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:49:50 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:49:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:49:50 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:49:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:49:51 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:49:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:49:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:49:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:49:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:49:56 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:49:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:49:56 - [MESSAGE][PASSED] - Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:49:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:49:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:49:57 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:50:07 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:50:07 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:50:07 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:50:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:50:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:50:07 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:50:07 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:50:07 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:50:07 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:50:07 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:50:07 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:50:08 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:50:08 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:50:10 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:50:10 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:50:17 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:50:17 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:50:18 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:50:18 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:50:19 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:50:19 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:50:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:50:19 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:50:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:50:19 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:50:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:50:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:50:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:50:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:50:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:50:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:50:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:50:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:50:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:50:36 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:50:36 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:50:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:50:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:50:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:50:41 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:50:41 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:50:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:50:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:50:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:50:43 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:50:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:50:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:50:45 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:50:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:50:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:50:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:50:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:50:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:50:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:50:46 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:50:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:50:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:50:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:50:52 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:50:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:50:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:50:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:50:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:50:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:50:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:50:57 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:50:58 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:50:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:51:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:51:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:51:00 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:51:00 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:51:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:51:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:51:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:51:02 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:51:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:51:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:51:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:51:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:51:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:51:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:51:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:51:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:51:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:51:05 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:51:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:51:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:51:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:51:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:51:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:51:11 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:51:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:51:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:51:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:51:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:51:14 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:51:14 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:51:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:51:15 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:51:15 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:51:15 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:51:15 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:51:15 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:51:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:51:18 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:51:18 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:51:18 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:51:18 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:51:18 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:51:18 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:51:20 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:51:20 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:51:20 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:51:20 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:51:20 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:51:20 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:51:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:51:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:51:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:51:25 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:51:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:51:25 - [MESSAGE][PASSED] - Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:51:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:51:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:51:26 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:51:36 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:51:36 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:51:36 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:51:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:51:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:51:36 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:51:36 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:51:36 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:51:36 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:51:36 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:51:36 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:51:37 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:51:37 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:51:39 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:51:39 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:51:46 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:51:46 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:51:47 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:51:47 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:51:48 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:51:48 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:51:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:51:48 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:51:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:51:49 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:51:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:51:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:51:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:51:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:51:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:51:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:51:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:51:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:51:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:51:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:52:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:52:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:52:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:52:06 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:52:06 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:52:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:52:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:52:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:52:10 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:52:10 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:52:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:52:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:52:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:52:12 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:52:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:52:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:52:14 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:52:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:52:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:52:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:52:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:52:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:52:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:52:16 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:52:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:52:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:52:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:52:22 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:52:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:52:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:52:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:52:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:52:28 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:52:28 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:52:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:52:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:52:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:52:30 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:52:30 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:52:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:52:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:52:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:52:32 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:52:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:52:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:52:34 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:52:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:52:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:52:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:52:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:52:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:52:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:52:35 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:52:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:52:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:52:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:52:41 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:52:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:52:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:52:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:52:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:52:44 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-09-27 19:52:44 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - println(row): null

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-09-27 19:52:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:52:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-09-27 19:52:45 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:52:45 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:52:45 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:52:45 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:52:48 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:52:48 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-09-27 19:52:48 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-09-27 19:52:48 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-09-27 19:52:48 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-09-27 19:52:48 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-09-27 19:52:48 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:52:50 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-09-27 19:52:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:52:50 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-09-27 19:52:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:52:50 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-09-27 19:52:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:52:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-09-27 19:52:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:52:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-09-27 19:52:54 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:52:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:52:54 - [MESSAGE][PASSED] - Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-09-27 19:52:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:52:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-09-27 19:52:55 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-09-27 19:53:05 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-09-27 19:53:05 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-09-27 19:53:05 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-09-27 19:53:05 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-09-27 19:53:05 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:53:05 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-09-27 19:53:05 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-09-27 19:53:05 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-09-27 19:53:05 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-09-27 19:53:05 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-09-27 19:53:05 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-09-27 19:53:06 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-09-27 19:53:06 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-09-27 19:53:08 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-09-27 19:53:08 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:53:15 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-09-27 19:53:15 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-09-27 19:53:16 - [MESSAGE][PASSED] - Current window maximized

2019-09-27 19:53:16 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:53:17 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-09-27 19:53:17 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:53:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:53:17 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-09-27 19:53:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:53:18 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-09-27 19:53:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:53:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:53:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:53:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-09-27 19:53:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-09-27 19:53:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:53:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-09-27 19:53:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:53:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:53:35 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:53:35 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:53:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:53:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:53:39 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:53:39 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:53:39 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:53:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:53:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:53:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:53:41 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:53:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:53:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:53:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:53:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:53:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:53:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:53:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:53:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:53:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:53:45 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:53:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:53:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:53:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:53:51 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:53:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:53:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:53:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:53:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:53:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:53:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-09-27 19:53:55 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:53:55 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-09-27 19:53:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:53:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-09-27 19:53:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-09-27 19:53:59 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-09-27 19:53:59 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-09-27 19:53:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:54:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:54:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:54:01 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-09-27 19:54:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-09-27 19:54:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-09-27 19:54:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:54:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3869 Cozy Cowl'

2019-09-27 19:54:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-09-27 19:54:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-09-27 19:54:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:54:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-09-27 19:54:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-09-27 19:54:04 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-09-27 19:54:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:54:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - s2 = " ": null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - println(prod_message): null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-09-27 19:54:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:54:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - break: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:54:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:54:10 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:54:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-09-27 19:54:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-09-27 19:54:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-09-27 19:54:13 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-09-27 19:45:08 - [TEST_SUITE][PASSED] - NewArrivalsSuite: Test Cases/NewArrival/CCOrders]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
