<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite" time="1505" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite" tests="1" failures="0" errors="0" time="1505" timestamp="2019-10-04 13:16:13" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_131610"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_131610\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="efc3f9253f2c93bae71a4528b9276084"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrival/BOShowOrder" classname="Test Cases/NewArrival/BOShowOrder" status="PASSED">
         <system-out><![CDATA[2019-10-04 13:16:13 - [TEST_CASE][PASSED] - Test Cases/NewArrival/BOShowOrder: Test Cases/NewArrival/BOShowOrder

2019-10-04 13:16:13 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-04 13:16:13 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-04 13:16:13 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-04 13:16:14 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:16:14 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:16:14 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:16:14 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-04 13:16:17 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:16:17 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:16:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:16:18 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:16:19 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:16:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:16:20 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:16:20 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:16:20 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:16:21 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:16:21 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:16:23 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:16:23 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:16:23 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:16:23 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:16:23 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:16:23 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:16:23 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:16:25 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:16:25 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:16:25 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:16:25 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:16:26 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:16:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:16:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:16:29 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:16:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:16:30 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:16:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:16:30 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:16:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:16:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:16:31 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:16:41 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:16:41 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:16:41 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:16:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:16:41 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:16:41 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:16:41 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:16:42 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:16:42 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:16:42 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:16:42 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:16:44 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:16:44 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:16:51 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:16:51 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:16:52 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:16:52 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:16:52 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:16:53 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:16:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:16:53 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:16:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:17:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:17:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:17:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:17:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:17:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:17:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:17:07 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:17:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:17:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:17:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:17:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:17:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:17:10 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:17:15 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:17:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:17:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:17:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:17:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:17:20 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:17:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:17:20 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:17:20 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:17:20 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:17:21 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:17:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:17:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:17:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:17:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:17:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:17:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:17:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:17:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:17:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:17:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:17:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:17:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:17:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:17:28 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:17:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:17:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:17:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:17:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:17:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:17:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:17:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:39 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:17:39 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-04 13:17:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:17:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:17:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:17:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:17:46 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:17:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:17:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:17:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:17:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:17:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:17:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:17:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:17:50 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:17:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:17:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:17:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:17:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:17:56 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:17:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:17:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:17:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:17:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:17:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:17:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:17:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:17:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:17:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:17:59 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:17:59 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:03 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:05 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:08 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:12 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:14 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:16 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:24 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:26 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:27 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:27 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:31 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:33 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:35 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:36 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:42 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:51 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:18:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:18:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:18:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:18:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:18:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:18:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:18:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:18:55 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:18:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:18:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:18:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:18:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:01 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:19:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:19:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:19:04 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:19:04 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:19:08 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:19:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:19:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:10 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:12 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:19:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:19:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:19:13 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:19:13 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:19:17 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:19:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:19:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:19 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:19:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:19:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:19:22 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:19:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:19:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:19:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:19:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:29 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:19:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:19:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:19:31 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:19:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:19:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:19:32 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:19:32 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:19:32 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:19:32 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:19:32 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:19:32 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:19:33 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:19:33 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:19:35 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:19:35 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:19:35 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:19:35 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:19:35 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:19:35 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:19:35 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:19:37 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:19:37 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:19:38 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:19:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:19:38 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:19:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:19:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:19:42 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:19:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:19:42 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:19:42 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:19:42 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:19:42 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:19:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:19:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:19:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:19:43 - [MESSAGE][PASSED] - Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:19:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:19:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:19:44 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:19:54 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:19:54 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:19:54 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:19:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:19:54 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:19:54 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:19:54 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:19:54 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:19:55 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:19:55 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:19:57 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:19:57 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:20:04 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:20:04 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:20:05 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:20:05 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:20:05 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:20:05 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:20:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:20:05 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:20:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:20:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:20:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:20:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:20:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:20:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:20:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:20:19 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:20:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:20:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:20:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:20:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:20:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:20:22 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:20:27 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:20:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:20:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:20:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:20:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:20:32 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:20:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:20:33 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:20:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:20:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:20:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:20:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:20:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:20:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:20:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:20:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:20:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:20:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:20:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:20:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:20:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:20:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:20:42 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:20:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:20:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:20:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:20:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:20:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:20:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:20:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:20:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:20:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:20:53 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-04 13:20:53 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:20:57 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:20:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:20:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:20:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:20:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:20:59 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:20:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:01 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:21:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:21:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:03 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:03 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:07 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:09 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:11 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:12 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:12 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:16 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:18 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:20 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:21 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:25 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:28 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:31 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:31 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:35 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:37 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:39 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:40 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:46 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:50 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:21:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:21:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:21:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:56 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:21:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:21:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:21:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:21:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:21:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:21:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:21:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:21:59 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:21:59 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:22:03 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:22:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:22:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:05 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:22:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:22:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:22:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:22:08 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:22:12 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:22:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:22:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:15 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:22:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:22:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:22:18 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:22:18 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:22:22 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:22:22 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:22:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:24 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:26 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:22:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:22:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:22:27 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:22:27 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:22:31 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:22:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:22:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:33 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:35 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:22:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:22:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:22:37 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:22:37 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:22:41 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:22:41 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:22:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:43 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:22:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:22:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:22:45 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:22:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:22:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:22:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:22:46 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:22:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:22:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:22:47 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:22:47 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:22:47 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:22:47 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:22:47 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:22:49 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:22:49 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:22:49 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:22:49 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:22:50 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:22:50 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:22:50 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:22:51 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:22:51 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:22:52 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:22:52 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:22:52 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:22:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:22:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:22:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:22:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:22:55 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:22:55 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:22:55 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:22:55 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:22:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:22:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:22:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:22:56 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:22:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:22:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:22:56 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:23:06 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:23:06 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:23:06 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:23:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:23:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:23:07 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:23:07 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:23:07 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:23:07 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:23:07 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:23:07 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:23:10 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:23:10 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:23:16 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:23:16 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:23:18 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:23:18 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:23:18 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:23:18 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:23:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:23:18 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:23:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:23:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:23:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:23:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:23:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:23:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:23:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:23:33 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:23:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:23:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:23:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:23:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:23:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:23:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:23:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:23:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:23:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:23:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:23:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:23:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:23:46 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:23:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:23:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:23:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:23:47 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:23:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:23:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:23:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:23:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:23:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:23:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:23:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:23:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:23:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:23:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:23:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:23:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:23:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:23:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:23:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:24:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:24:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:24:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:24:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:24:04 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 13:24:04 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:24:08 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:24:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:24:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:11 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:13 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:24:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:24:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:24:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:24:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:24:14 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:24:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:24:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:24:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:24:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:24:21 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:24:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:24 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:24:28 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:24:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:24:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:30 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:32 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:24:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:24:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:24:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:24:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:24:33 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:24:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:24:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:24:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:24:39 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:24:39 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:24:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:24:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:24:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:24:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:49 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:24:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:24:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:24:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:24:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:24:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:24:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:24:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:24:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:24:52 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:24:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:24:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:24:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:24:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:24:58 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:24:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:02 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:25:06 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:25:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:25:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:08 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:10 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:25:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:25:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:25:11 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:25:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:25:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:25:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:25:17 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:25:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:20 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:25:24 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:25:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:25:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:27 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:29 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:25:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:25:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:25:30 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:25:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:25:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:25:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:25:36 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:25:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:39 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:25:43 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:25:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:25:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:45 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:45 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:25:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:25:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:25:47 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:25:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:25:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:25:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:25:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:25:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:25:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:25:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:25:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:25:55 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:25:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:25:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:25:58 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:26:02 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:26:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:26:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:04 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:26:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:26:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:26:08 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:26:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:26:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:26:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:26:14 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:26:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:26:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:26:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:26:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:23 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:26:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:26:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:26:26 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:26:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:26:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:26:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:26:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:26:33 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:26:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:26:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:26:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:26:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:42 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:26:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:26:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:26:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:26:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:26:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:26:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:26:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:26:45 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:26:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:26:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:26:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:26:51 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:26:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:26:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:26:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:26:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:26:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:26:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:26:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:01 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:27:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:27:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:27:04 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:27:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:27:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:27:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:27:10 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:27:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:27:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:14 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:27:18 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:27:18 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:27:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:20 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:20 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:22 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:27:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:27:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:27:23 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:27:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:27:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:27:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:27:29 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:27:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:27:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:27:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:27:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:39 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:27:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:27:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:27:41 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:27:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:27:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:27:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:27:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:27:42 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:27:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:27:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:27:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:27:48 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:27:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:27:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:27:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:27:51 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:27:51 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:27:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:27:52 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:27:52 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:27:52 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:27:52 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:27:52 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:27:55 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:27:55 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:27:55 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:27:55 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:27:55 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:27:55 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:27:55 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:27:57 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:27:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:27:57 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:27:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:27:57 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:27:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:28:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:28:01 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:28:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:28:01 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:28:01 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:28:01 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:28:01 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:28:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:28:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:28:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:28:02 - [MESSAGE][PASSED] - Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:28:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:28:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:28:02 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:28:12 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:28:12 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:28:12 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:28:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:28:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:28:13 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:28:13 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:28:13 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:28:13 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:28:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:28:13 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:28:16 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:28:16 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:28:22 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:28:22 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:28:23 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:28:23 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:28:23 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:28:24 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:28:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:28:24 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:28:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:28:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:28:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:28:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:28:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:28:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:28:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:28:39 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:28:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:28:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:28:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:28:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:28:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:28:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:28:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:28:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:28:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:28:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:28:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:28:52 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:28:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:28:53 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:28:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:28:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:28:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:28:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:28:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:28:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:28:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:28:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:28:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:28:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:29:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:29:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:29:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:29:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:29:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:29:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:29:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:29:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:29:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:29:11 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-04 13:29:11 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:29:15 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:29:15 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:29:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:17 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:19 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:29:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-10-04 13:29:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:29:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:29:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:29:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:29:21 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:29:25 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:29:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:29:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:27 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:29 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:29:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:29:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:29:30 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:29:30 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:29:34 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:29:34 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:29:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:37 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:39 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:29:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:29:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:29:40 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:29:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:29:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:29:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:29:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:46 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:29:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:29:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:29:49 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:29:49 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:29:53 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:29:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:29:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:55 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:29:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:29:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:29:57 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:29:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:29:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:29:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:29:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:29:59 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:29:59 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:03 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:05 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:08 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:12 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:14 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:16 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:23 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:27 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:27 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:31 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:33 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:35 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:36 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:42 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:52 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:30:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:30:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:30:54 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:30:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:30:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:30:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:30:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:30:55 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:30:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:30:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:30:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:30:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:31:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:31:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:31:01 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:31:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:31:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:31:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:31:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:31:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:31:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:31:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase("No matching result found")): null

2019-10-04 13:31:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:31:04 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:31:04 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:31:05 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:31:05 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:31:05 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:31:05 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:31:05 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:31:05 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:31:05 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:31:05 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:31:05 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:31:05 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:31:08 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:31:08 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:31:08 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:31:08 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:31:08 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:31:08 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:31:08 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:31:10 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:31:10 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:31:10 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:31:10 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:31:10 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:31:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:31:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:31:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:31:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:31:14 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:31:14 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:31:14 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:31:14 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:31:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:31:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:31:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:31:15 - [MESSAGE][PASSED] - Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:31:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:31:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:31:15 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:31:25 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:31:25 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:31:25 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:31:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:31:25 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:31:26 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:31:26 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:31:26 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:31:26 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:31:26 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:31:26 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:31:29 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:31:29 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:31:37 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:31:37 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:31:38 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:31:38 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:31:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:31:38 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:31:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:31:38 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:31:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:31:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:31:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:31:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:31:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:31:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:31:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:31:53 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:31:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:31:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:31:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:31:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:31:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:31:56 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:32:01 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:32:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:32:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:32:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:06 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:32:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:32:07 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:32:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:32:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:32:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:32:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:32:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:32:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:32:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:32:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:32:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:32:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:32:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:32:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:32:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:32:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:32:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:32:25 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 13:32:25 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:32:29 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:32:29 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:32:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:32:32 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:32:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:34 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:32:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:32:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:32:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:32:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:32:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:32:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:32:35 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:32:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:32:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:32:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:32:41 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:32:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:32:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:32:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:32:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:32:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:32:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:32:51 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:32:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:32:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:32:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:32:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:32:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:32:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:32:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:32:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:32:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:32:54 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:32:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:32:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:32:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:33:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:33:00 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:33:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:04 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:33:08 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:33:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:33:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:10 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:12 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:33:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:33:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:33:13 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:33:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:33:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:33:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:33:19 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:33:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:33:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:33:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:33:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:29 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:31 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:33:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:33:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:33:32 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:33:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:33:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:33:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:33:38 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:33:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:41 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:33:45 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:33:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:33:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:47 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:33:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:33:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:33:49 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:33:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:33:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:33:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:33:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:33:51 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:33:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:33:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:33:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:33:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:33:57 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:33:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:00 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:34:04 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:34:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:34:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:06 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:08 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:34:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:34:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:34:09 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:34:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:34:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:34:15 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:34:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:34:16 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:34:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:19 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:34:23 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:34:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:34:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:25 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:27 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:34:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:34:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:34:28 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:34:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:34:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:34:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:34:34 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:34:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:38 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:34:42 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:34:42 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:34:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:44 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:34:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:34:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:34:46 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:34:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:34:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:34:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:34:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:34:47 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:34:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:34:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:34:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:34:53 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:34:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:34:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:34:56 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:35:00 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:35:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:35:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:02 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:35:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:35:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:35:06 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:35:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:35:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:35:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:35:12 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:35:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:15 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:35:19 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:35:19 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:35:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:21 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:23 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:35:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:35:24 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:35:25 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:35:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:35:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:35:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:35:31 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:35:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:34 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:35:38 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:35:38 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:35:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:40 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:40 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:42 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:35:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:35:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:35:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:35:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:35:43 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:35:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:35:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:35:49 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:35:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:35:50 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:35:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:35:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:35:53 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:35:57 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:35:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:35:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:35:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:35:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:59 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:35:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:36:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:36:01 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:36:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:36:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:36:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:36:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:36:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:36:02 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:36:02 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:36:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:36:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:36:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:36:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:36:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:36:08 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:36:08 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:36:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:36:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:36:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:36:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:36:12 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 13:36:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:36:12 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 13:36:12 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:36:12 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:36:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:36:13 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:36:15 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:36:15 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 13:36:15 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 13:36:15 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 13:36:15 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 13:36:15 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 13:36:15 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:36:17 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 13:36:17 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:36:17 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 13:36:17 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:36:17 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 13:36:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:36:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:36:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 13:36:21 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:36:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 13:36:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:36:22 - [MESSAGE][PASSED] - Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 13:36:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:36:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 13:36:22 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 13:36:32 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 13:36:32 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 13:36:32 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 13:36:32 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 13:36:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:36:32 - [TEST_CASE][PASSED] - Test Cases/NewArrival/createAPhysicalShow_IMHostess: Test Cases/NewArrival/createAPhysicalShow_IMHostess

2019-10-04 13:36:32 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:36:32 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:36:32 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:36:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:36:33 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 13:36:33 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 13:36:33 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 13:36:33 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 13:36:33 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 13:36:33 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 13:36:33 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 13:36:33 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 13:36:36 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 13:36:36 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:36:42 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-04 13:36:42 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:36:43 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 13:36:43 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:36:43 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:36:44 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 13:36:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:36:44 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 13:36:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:36:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 13:36:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:36:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:36:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 13:36:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:00 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:37:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-10-04 13:37:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:37:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-10-04 13:37:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:37:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-10-04 13:37:03 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 13:37:08 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 13:37:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:37:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-10-04 13:37:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:37:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - year = findTestData("virtualShowData").getValue("vsyear", 1): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - month = findTestData("virtualShowData").getValue("vsmonth", 1): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - day = findTestData("virtualShowData").getValue("vsday", 1): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - pastdate = findTestData("virtualShowData").getValue("pastdate", 1): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - xpath = UtilityMethods.concat("//td[@data-month='" + month - 1 + "' and @data-year='" + year + "']/a[contains(text(), '" + day + "')]"): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - dateObj = new com.kms.katalon.core.testobject.TestObject(td_month_year_day): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - dateObj.addProperty("xpath", EQUALS, xpath): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - monthBound = 12: null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - dateObjList = findWebElements(dateObj, 5): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - while (dateObjList.size() == 0 && monthBound > 0): null

2019-10-04 13:37:13 - [TEST_STEP][PASSED] - click(dateObj): Object: 'td_month_year_day' is clicked on

2019-10-04 13:37:14 - [MESSAGE][PASSED] - Object: 'td_month_year_day' is clicked on

2019-10-04 13:37:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:37:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-10-04 13:37:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:37:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-10-04 13:37:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:37:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-10-04 13:37:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:17 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:37:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-10-04 13:37:17 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:37:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-10-04 13:37:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/createAPhysicalShow_IMHostess' successfully

2019-10-04 13:37:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:37:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-10-04 13:37:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:37:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-10-04 13:37:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:37:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-10-04 13:37:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":BOShow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 13:37:32 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 13:37:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:37:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:37:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:37:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:37:38 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:37:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:37:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 13:37:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:37:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:37:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:37:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:37:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:37:42 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:37:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:37:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:37:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:37:48 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:37:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:37:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:37:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:37:51 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:37:55 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:37:55 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:37:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:37:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:37:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:37:58 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:37:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:00 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:38:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:38:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:38:01 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:38:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:38:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:38:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:38:07 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:38:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:10 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:38:14 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:38:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:38:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:16 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:16 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:18 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:38:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:38:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:38:19 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:38:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:38:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:38:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:38:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:38:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:38:26 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:38:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:29 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:38:33 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:38:33 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:38:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:35 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:37 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:38:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:38:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:38:38 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:38:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:38:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:38:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:38:44 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:38:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:38:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:38:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:38:48 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:38:52 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:38:52 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:38:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:54 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:38:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:38:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:38:56 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:38:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:38:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:38:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:38:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:38:57 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:38:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:39:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:39:03 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:39:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:06 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:39:10 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:39:10 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:39:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:13 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:39:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:39:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:39:16 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:39:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:39:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:39:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:39:22 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:39:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:25 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:39:29 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:39:29 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:39:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:31 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:33 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:39:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:39:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:39:35 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:39:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:39:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:39:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:39:41 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:39:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:44 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:39:48 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:39:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:39:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:50 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:39:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:39:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:39:52 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:39:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:39:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:39:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:39:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:39:53 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:39:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:39:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:39:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:39:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:40:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:40:00 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:40:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:03 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:40:07 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:40:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:40:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:09 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:11 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:40:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:40:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:40:12 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:40:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:40:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:40:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:40:18 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:40:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:40:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:40:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:40:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:28 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:40:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:40:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:40:31 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:40:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:40:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:40:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:40:37 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:40:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:40:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:40:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:40:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:47 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:40:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:40:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:40:49 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:40:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:40:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:40:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:40:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:40:50 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:40:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:40:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:40:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:40:56 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:40:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:40:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:40:59 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 13:41:03 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 13:41:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 13:41:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:41:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:41:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:41:05 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 13:41:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 13:41:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 13:41:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:41:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 13:41:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 13:41:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 13:41:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:41:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 13:41:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 13:41:09 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 13:41:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:41:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 13:41:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:41:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - break: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:41:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:41:15 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:41:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 13:41:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 13:41:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 13:41:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-04 13:16:13 - [TEST_SUITE][PASSED] - NewArrivalsSuite: Test Cases/NewArrival/BOShowOrder]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
