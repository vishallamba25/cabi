<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite" time="2974" tests="0" failures="1" errors="0">
   <testsuite name="NewArrivalsSuite" tests="0" failures="1" errors="0" time="2974" timestamp="2019-10-04 18:01:48" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_180145"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_180145\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_180145\\1570195054372.png"/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="a4060598a4ab2e92518af173a7297e81"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrival/CCOrders" classname="Test Cases/NewArrival/CCOrders" status="FAILED">
         <failure type="FAILED" message="Test Cases/NewArrival/CCOrders FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
"/>
         <system-out><![CDATA[2019-10-04 18:01:49 - [TEST_CASE][FAILED] - Test Cases/NewArrival/CCOrders: Test Cases/NewArrival/CCOrders FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:01:49 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-04 18:01:49 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-04 18:01:49 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-04 18:01:49 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:01:50 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:01:50 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:01:50 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-04 18:01:53 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:01:53 - [TEST_STEP][FAILED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:01:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:01:54 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:01:55 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:01:55 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:01:55 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:01:55 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:01:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:01:56 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:01:56 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:01:56 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:01:57 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:01:57 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:01:59 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:01:59 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:01:59 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:01:59 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:01:59 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:01:59 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:02:00 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:02:02 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:02:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:02:02 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:02:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:02:02 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:02:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:02:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:02:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:02:07 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:02:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:02:07 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:02:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:02:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:02:08 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:02:18 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:02:18 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:02:18 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:02:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:02:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:02:18 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:02:18 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:02:19 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:02:19 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:02:19 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:02:19 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:02:19 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:02:19 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:02:21 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:02:21 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:02:28 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:02:28 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:02:29 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:02:29 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:02:31 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:02:31 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:02:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:02:31 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:02:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:02:31 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:02:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:02:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:02:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:02:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:02:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:02:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:02:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:02:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:02:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:02:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:02:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:02:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:02:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:02:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:02:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:02:48 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:02:48 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:02:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:02:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:02:53 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:02:53 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:02:57 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:02:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:02:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:02:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:02:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:00 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:02 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:03:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:03:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:03:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:03:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:03:03 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:03:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:03:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:03:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:03:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:03:10 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:03:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:13 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:03:17 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:03:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:03:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:19 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:03:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:03:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:03:22 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:03:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:03:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:03:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:03:28 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:03:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:31 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:03:35 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:03:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:03:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:38 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:03:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:03:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:03:41 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:03:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:03:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:03:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:03:47 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:03:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:03:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:03:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:03:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:03:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:03:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:56 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:03:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:03:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:03:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:03:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:03:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:03:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:03:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:03:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:03:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:04:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:04:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:04:03 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:04:03 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:04:03 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:04:03 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:04:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:04:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:04:06 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:04:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:09 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:04:13 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:04:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:04:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:15 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:04:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:04:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:04:18 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:04:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:04:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:04:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:04:24 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:04:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:04:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:28 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:04:32 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:04:32 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:04:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:34 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:36 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:04:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:04:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:04:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:04:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:04:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:04:43 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:04:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:46 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:04:50 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:04:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:04:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:52 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:52 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:04:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:04:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:04:54 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:04:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:04:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:04:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:04:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:04:56 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:04:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:04:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:04:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:05:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:05:02 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:05:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:05 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:05:09 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:05:09 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:05:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:11 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:13 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:05:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:05:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:05:14 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:05:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:05:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:05:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:05:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:05:21 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:05:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:24 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:05:28 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:05:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:05:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:30 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:32 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:05:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:05:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:05:33 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:05:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:05:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:05:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:05:39 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:39 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:05:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:05:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:05:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:05:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:49 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:05:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:05:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:05:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:05:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:05:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:05:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:05:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:05:52 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:05:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:05:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:05:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:05:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:05:58 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:05:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:01 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:06:05 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:06:05 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:06:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:07 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:09 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:06:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:06:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:06:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:06:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:06:10 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:06:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:13 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:06:13 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:06:13 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:06:14 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:06:14 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:06:14 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:06:14 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:06:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:06:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:06:17 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:06:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:20 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:06:24 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:06:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:06:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:26 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:28 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:06:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:06:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:06:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:06:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:06:29 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:06:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:06:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:06:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:06:35 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:06:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:06:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:06:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:06:41 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:06:41 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:06:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:06:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:06:43 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:06:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:06:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:06:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:06:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:49 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:06:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:06:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:06:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:06:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:06:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:06:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:06:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:06:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:06:53 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:06:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:06:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:06:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:06:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:06:59 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:06:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:02 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:07:06 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:07:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:07:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:08 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:10 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:07:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:07:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:07:12 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:07:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:07:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:07:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:07:18 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:07:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:21 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:07:25 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:07:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:07:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:27 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:29 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:07:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:07:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:07:30 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:07:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:07:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:07:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:07:36 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:07:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:07:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:07:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:07:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:46 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:07:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:07:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:07:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:07:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:07:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:07:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:07:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:07:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:07:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:07:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:07:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:07:55 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:07:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:07:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:07:58 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:08:02 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:08:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:08:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:04 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3861 Victoria Blouse'

2019-10-04 18:08:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3861 Victoria Blouse'

2019-10-04 18:08:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:08:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:08:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:08:07 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:08:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:08:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:08:13 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:08:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:08:14 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:08:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:08:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:08:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:08:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:23 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:08:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:08:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:08:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:08:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:08:26 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:08:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:08:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:08:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:08:32 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:08:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:35 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:08:39 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:08:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:08:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:42 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:08:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:08:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:08:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:08:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:08:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:08:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:08:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:08:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:08:45 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:08:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:08:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:08:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:08:51 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:08:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:08:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:08:54 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:08:58 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:08:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:08:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:00 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:02 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:09:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:09:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:09:03 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:09:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:09:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:09:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:09:09 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:09:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:09:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:13 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:09:17 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:09:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:09:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:19 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:09:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:09:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:09:22 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:09:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:09:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:09:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:09:28 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:09:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:31 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:09:35 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:09:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:09:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:37 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:39 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:09:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:09:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:09:41 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:09:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:09:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:09:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:09:47 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:09:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:09:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:09:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:09:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:09:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:09:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:56 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:09:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:09:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:09:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:09:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:09:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:09:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:09:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:09:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:09:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:10:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:10:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:10:05 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:10:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:10:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:08 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:10:12 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:10:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:10:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:10:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:10:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:10:15 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:10:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:10:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:10:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:10:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:10:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:10:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:10:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:10:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:10:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:10:18 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:10:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:10:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:10:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:10:24 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:10:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:10:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:10:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:10:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:10:27 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:10:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:10:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:10:28 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:10:28 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:10:28 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:10:28 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:10:28 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:10:30 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:10:30 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:10:30 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:10:30 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:10:30 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:10:30 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:10:30 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:10:32 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:10:32 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:10:33 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:10:33 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:10:33 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:10:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:10:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:10:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:10:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:10:38 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:10:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:10:38 - [MESSAGE][PASSED] - Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:10:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:10:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:10:39 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:10:49 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:10:49 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:10:49 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:10:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:10:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:10:49 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:10:49 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:10:49 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:10:49 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:10:49 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:10:49 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:10:50 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:10:50 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:10:52 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:10:52 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:10:59 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:10:59 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:11:00 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:11:00 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:11:01 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:11:01 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:11:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:11:01 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:11:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:11:01 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:11:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:11:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:11:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:11:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:11:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:11:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:11:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:11:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:11:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:11:20 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:11:20 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:11:20 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:11:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:11:24 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:11:24 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:11:28 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:11:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:11:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:11:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:11:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:11:31 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:11:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:11:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:11:33 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:11:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:11:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:11:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:11:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:11:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:11:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:11:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:11:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:11:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:11:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:11:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:11:41 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:11:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:11:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:44 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:11:48 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:11:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:11:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:11:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:11:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:11:50 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:11:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:11:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:11:52 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:11:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:11:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:11:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:11:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:11:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:11:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:11:53 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:11:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:11:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:11:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:11:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:11:59 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:11:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:11:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:02 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:12:06 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:12:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:12:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:08 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:10 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:12:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:12:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:12:11 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:12:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:14 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:12:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:12:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:12:18 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:12:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:21 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:12:25 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:12:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:12:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:27 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:29 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:12:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:12:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:12:30 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:12:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:12:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:12:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:12:36 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:12:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:39 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:12:43 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:12:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:12:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:45 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:46 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:12:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:12:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:12:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:12:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:12:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:12:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:12:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:12:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:12:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:12:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:12:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:12:55 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:12:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:12:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:12:58 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:13:02 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:13:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:13:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:04 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:13:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:13:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:13:07 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:13:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:13:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:13:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:13:13 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:13:13 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:13:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:13:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:13:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:13:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:23 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:13:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:13:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:13:26 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:13:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:13:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:13:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:13:32 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:13:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:35 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:13:39 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:13:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:13:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:41 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:13:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:13:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:13:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:13:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:13:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:13:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:13:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:13:44 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:13:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:13:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:50 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:13:50 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:13:50 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:13:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:13:51 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:13:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:13:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:13:54 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:13:58 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:13:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:13:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:00 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:02 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:14:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:14:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:14:03 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:14:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:14:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:14:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:14:09 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:14:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:12 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:14:16 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:14:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:14:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:18 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:20 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:14:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:14:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:14:22 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:14:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:14:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:14:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:14:28 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:14:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:31 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:14:35 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:14:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:14:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:37 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:39 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:14:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:14:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:14:40 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:14:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:14:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:14:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:14:46 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:14:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:14:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:14:49 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:14:53 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:14:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:14:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:56 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:14:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:14:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:14:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:14:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:14:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:14:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:14:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:14:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:14:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:15:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:15:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:15:05 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:15:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:15:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:15:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:15:10 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:15:11 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:15:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:15:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:15:15 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:15:15 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:15:19 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:15:19 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:15:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:15:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:15:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:21 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:15:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:15:23 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:15:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:15:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:15:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:15:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:15:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:15:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:15:25 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:15:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:15:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:15:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:15:31 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:15:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:35 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:15:39 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:15:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:15:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:15:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:15:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:41 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:15:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:15:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:15:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:15:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:15:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:15:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:15:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:15:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:15:44 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:15:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:15:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:15:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:15:50 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:15:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:15:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:15:53 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:15:57 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:15:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:15:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:15:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:15:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:59 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:15:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:01 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:16:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:16:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:02 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:16:02 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:16:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:16:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:16:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:16:08 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:16:09 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:16:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:12 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:16:16 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:16:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:16:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:18 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:20 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:16:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:16:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:16:21 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:16:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:16:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:16:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:16:27 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:16:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:30 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:16:34 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:16:34 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:16:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:36 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:38 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:16:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:16:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:39 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:16:39 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:16:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:42 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:16:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:16:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:16:46 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:16:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:16:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:16:49 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:16:53 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:16:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:16:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:55 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:16:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:16:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:16:57 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:16:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:16:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:16:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:16:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:16:58 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:16:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:17:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:17:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:17:04 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:17:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:07 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:17:11 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:17:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:17:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:13 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:17:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:17:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:17:17 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:17:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:17:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:17:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:17:23 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:17:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:26 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:17:30 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:17:30 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:17:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:32 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:34 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:17:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:17:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:17:35 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:17:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:17:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:17:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:17:41 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:17:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:17:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:17:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:17:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:17:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:51 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:17:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:17:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:17:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:17:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:17:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:17:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:17:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:17:54 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:17:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:17:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:17:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:18:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:18:00 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:18:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:03 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:18:07 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:18:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:18:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:09 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:11 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:18:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:18:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:18:12 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:18:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:18:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:18:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:18:19 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:18:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:18:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:18:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:18:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:28 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:18:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:18:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:18:31 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:18:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:18:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:18:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:18:37 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:18:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:18:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:18:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:18:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:46 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:18:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:18:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:18:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:18:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:18:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:18:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:18:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:18:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:18:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:18:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:18:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:18:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:18:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:18:56 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:18:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:18:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:18:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:18:59 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:18:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:18:59 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:18:59 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:18:59 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:19:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:19:00 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:19:02 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:19:02 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:19:02 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:19:02 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:19:02 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:19:02 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:19:02 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:19:04 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:19:04 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:19:04 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:19:04 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:19:04 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:19:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:19:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:19:08 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:19:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:19:09 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:19:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:19:09 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:19:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:19:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:19:10 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:19:20 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:19:20 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:19:20 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:19:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:19:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:19:20 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:19:20 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:19:20 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:19:20 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:19:20 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:19:20 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:19:21 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:19:21 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:19:23 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:19:23 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:19:30 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:19:30 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:19:31 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:19:31 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:19:32 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:19:32 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:19:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:19:32 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:19:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:19:32 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:19:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:19:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:19:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:19:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:19:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:19:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:19:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:19:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:19:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:19:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:19:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:19:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:19:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:19:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:19:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:19:50 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:19:51 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:19:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:19:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:19:55 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:19:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:19:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:19:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:19:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:01 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:20:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:20:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:20:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:20:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:20:05 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:20:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:20:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:20:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:20:11 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:20:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:14 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:20:18 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:20:18 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:20:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:20 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:20 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:22 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:20:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:20:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:20:23 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:20:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:20:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:20:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:20:29 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:20:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:20:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:20:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:20:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:39 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:41 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:20:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:20:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:20:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:20:42 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:20:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:20:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:20:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:20:48 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:20:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:20:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:20:51 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:20:55 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:20:55 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:20:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:57 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:20:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:20:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:20:59 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:20:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:21:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:21:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:21:00 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:21:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:21:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:21:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:21:06 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:21:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:09 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:21:13 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:21:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:21:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:16 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:18 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:21:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:21:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:21:19 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:21:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:21:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:21:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:21:25 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:21:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:28 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:21:32 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:21:32 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:21:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:34 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:36 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:21:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:21:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:21:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:21:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:21:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:21:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:21:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:21:44 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:21:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:47 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:21:51 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:21:51 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:21:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:53 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:21:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:21:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:21:55 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:21:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:21:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:21:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:21:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:21:56 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:21:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:21:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:21:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:22:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:22:02 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:22:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:05 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:22:09 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:22:09 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:22:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:12 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:14 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:22:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:22:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:22:15 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:22:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:22:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:22:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:22:21 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:22:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:24 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:22:28 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:22:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:22:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:30 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:32 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:22:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:22:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:22:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:22:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:22:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:22:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:22:40 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:22:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:22:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:22:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:22:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:49 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:22:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:22:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:22:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:22:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:22:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:22:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:22:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:22:53 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:22:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:22:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:22:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:22:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:22:59 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:22:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:02 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:23:06 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:23:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:23:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:08 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:10 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:23:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:23:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:23:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:23:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:23:11 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:23:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:23:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:23:17 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:23:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:23:18 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:23:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:23:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:21 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:23:25 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:23:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:23:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:27 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:29 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:23:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:23:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:23:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:23:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:23:30 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:23:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:23:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:23:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:23:36 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:23:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:23:36 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:23:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:23:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:23:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:23:42 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:23:42 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:23:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:23:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:23:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:23:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:23:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:23:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:23:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:23:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:51 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:23:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:23:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:23:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:23:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:23:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:23:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:23:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:23:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:23:55 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:23:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:23:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:23:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:24:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:24:01 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:24:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:04 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:24:08 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:24:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:24:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:10 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:12 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:24:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:24:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:24:13 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:24:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:24:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:24:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:24:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:24:20 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:24:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:23 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:24:27 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:24:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:24:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:29 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:29 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:31 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:24:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:24:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:24:32 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:24:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:24:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:24:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:24:38 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:24:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:41 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:24:45 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:24:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:24:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:48 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:24:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:24:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:24:50 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:24:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:24:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:24:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:24:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:24:51 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:24:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:24:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:24:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:24:57 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:24:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:00 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:25:04 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:25:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:25:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:06 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:08 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:25:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:25:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:25:09 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:25:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:25:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:25:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:25:15 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:25:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:19 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:25:23 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:25:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:25:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:25 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:27 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:25:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:25:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:25:28 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:25:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:25:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:25:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:25:34 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:25:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:37 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:25:41 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:25:41 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:25:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:43 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:25:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:25:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:25:45 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:25:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:25:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:25:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:25:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:25:46 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:25:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:25:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:25:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:25:52 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:25:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:25:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:25:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:25:56 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:26:00 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:26:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:26:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:02 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:26:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:26:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:26:05 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:26:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:26:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:26:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:26:11 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:26:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:14 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:26:18 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:26:18 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:26:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:20 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:20 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:22 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:26:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:26:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:26:23 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:26:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:26 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:26:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:26:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:26:27 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:26:27 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:26:27 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:26:27 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:26:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:26:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:26:30 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:26:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:33 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:26:37 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:26:37 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:26:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:39 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:41 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:26:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:26:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:26:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:26:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:26:42 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:26:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:26:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:26:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:26:48 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:26:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:26:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:26:51 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:26:55 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:26:55 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:26:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:26:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:26:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:58 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:26:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:27:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:27:00 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:27:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:27:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:27:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:27:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:27:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:27:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:27:01 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:27:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:27:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:27:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:27:07 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:27:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:27:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:10 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:27:14 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:27:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:27:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:27:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:27:16 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:27:16 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:27:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:27:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:27:18 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:27:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:27:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:27:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:27:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:27:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:27:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:27:19 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:27:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:27:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:27:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:27:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:27:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:27:26 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:27:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:27:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:27:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:27:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:27:29 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:27:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:27:29 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:27:29 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:27:29 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:27:30 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:27:30 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:27:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:27:32 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:27:32 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:27:32 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:27:32 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:27:32 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:27:32 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:27:34 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:27:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:27:34 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:27:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:27:34 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:27:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:27:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:27:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:27:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:27:39 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:27:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:27:39 - [MESSAGE][PASSED] - Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:27:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:27:39 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:27:49 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:27:49 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:27:49 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:27:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:27:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:27:49 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:27:50 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:27:50 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:27:50 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:27:50 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:27:50 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:27:50 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:27:50 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:27:52 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:27:52 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:27:59 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:27:59 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:28:00 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:28:00 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:28:01 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:28:01 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:28:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:28:02 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:28:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:28:02 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:28:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:28:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:28:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:28:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:28:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:28:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:28:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:28:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:28:18 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:28:18 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:28:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:28:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:28:22 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:28:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:28:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:28:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:28:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:28:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:28:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:28:28 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:28:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:28:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:28:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:28:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:28:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:28:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:28:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:28:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:28:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:28:31 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:28:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:34 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:28:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:28:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:28:38 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:28:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:28:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:41 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:28:45 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:28:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:28:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:28:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:28:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:28:47 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:28:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:28:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:28:49 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:28:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:28:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:28:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:28:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:28:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:28:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:28:50 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:28:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:28:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:28:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:28:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:28:56 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:28:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:28:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:00 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:29:04 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:29:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:29:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:06 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:08 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:29:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:29:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:29:09 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:29:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:29:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:29:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:29:15 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:29:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:18 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:29:22 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:29:22 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:29:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:24 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:26 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:29:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:29:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:29:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:29:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:29:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:29:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:29:34 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:29:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:37 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:29:41 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:29:41 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:29:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:43 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:29:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:29:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:29:45 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:29:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:29:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:29:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:29:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:29:46 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:29:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:29:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:29:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:29:52 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:29:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:29:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:29:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:29:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:29:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:29:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:01 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:30:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:30:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:30:05 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:30:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:30:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:30:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:30:11 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:30:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:14 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:30:18 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:30:18 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:30:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:20 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:20 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:22 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:30:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:30:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:30:23 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:30:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:30:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:30:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:30:29 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:30:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:30:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:30:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:30:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:38 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:30:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:30:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:30:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:30:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:30:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:30:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:30:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:30:47 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:30:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:30:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:30:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:30:53 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:30:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:30:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:30:56 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:31:00 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:31:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:31:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:02 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:31:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:31:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:31:10 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:31:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:31:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:31:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:31:16 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:31:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:31:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:20 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:31:24 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:31:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:31:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:26 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:28 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:31:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:31:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:31:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:31:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:31:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:31:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:31:40 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:31:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:31:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:31:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:31:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:31:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:31:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:31:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:49 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:31:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:31:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:31:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:31:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:31:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:31:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:31:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:31:57 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:31:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:32:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:32:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:32:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:32:04 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:32:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:32:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:07 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:32:11 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:32:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:32:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:32:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:32:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:32:13 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:32:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:32:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:32:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:32:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:32:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:32:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:32:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:32:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:32:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:32:21 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:32:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:32:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:32:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:32:27 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:32:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:32:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:32:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:32:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:32:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:32:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:32:38 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:32:38 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:32:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:32:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:32:45 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:32:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:32:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:32:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:32:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:32:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:32:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:32:51 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:32:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:32:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:32:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:32:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:32:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:32:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:32:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:32:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:32:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:32:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:32:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:33:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:33:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:33:03 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:33:03 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:33:03 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:33:03 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:33:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:33:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:33:06 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:33:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:09 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:33:13 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:33:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:33:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:33:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:33:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:33:15 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:33:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:33:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:33:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:33:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:33:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:33:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:33:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:33:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:33:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:33:23 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:33:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:33:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:33:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:33:29 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:33:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:33:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:33:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:33:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:33:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:33:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:33:38 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:33:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:33:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:33:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:33:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:33:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:33:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:33:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:33:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:33:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:33:47 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:33:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:33:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:33:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:33:53 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:33:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:33:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:33:56 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:34:00 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:34:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:34:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:02 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:04 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:34:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:34:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:34:10 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:34:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:34:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:34:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:34:16 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:34:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:34:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:34:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:20 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:34:24 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:34:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:34:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:26 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:28 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:34:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:34:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:34:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:34:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:34:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:34:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:34:40 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:34:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:34:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:34:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:34:43 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:34:47 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:34:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:34:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:49 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:34:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:34:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:34:51 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:34:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:34:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:34:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:34:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:34:57 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:34:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:00 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:35:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:35:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:35:04 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:35:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:07 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:35:11 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:35:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:35:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:13 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3864 Snap Blouse'

2019-10-04 18:35:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3864 Snap Blouse'

2019-10-04 18:35:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:35:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:35:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:35:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:35:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:35:16 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:35:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:35:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:35:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:35:22 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:35:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:25 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:35:29 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:35:29 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:35:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:31 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:33 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:35:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:35:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:35:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:35:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:35:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:35:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:35:40 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:35:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:35:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:35:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:35:46 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:35:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:35:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:35:49 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:35:53 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:35:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:35:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:55 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:35:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:35:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:35:57 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:35:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:35:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:35:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:35:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:36:03 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:36:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:36:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:36:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:36:09 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:36:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:12 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:36:16 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:36:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:36:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:36:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:36:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:36:19 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:36:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:36:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:36:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:36:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:36:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:36:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:36:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:36:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:36:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:36:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:36:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:36:33 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:36:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:36:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:36:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:36:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:36:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:36:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:36:42 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:36:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:36:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:36:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:36:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:36:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:36:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:36:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:36:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:36:50 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:36:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:36:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:36:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:36:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:36:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:36:57 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:36:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:37:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:37:00 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:37:04 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:37:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:37:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:37:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:37:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:37:06 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:37:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:37:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:37:08 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:37:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:37:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:37:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:37:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:37:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:37:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:37:14 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:37:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:37:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:37:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:37:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:37:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:37:20 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:37:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:37:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:37:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:37:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:37:23 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:37:23 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:37:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:37:24 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:37:24 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:37:24 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:37:24 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:37:24 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:37:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:37:26 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:37:26 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:37:26 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:37:26 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:37:26 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:37:26 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:37:28 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:37:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:37:28 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:37:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:37:29 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:37:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:37:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:37:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:37:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:37:33 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:37:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:37:33 - [MESSAGE][PASSED] - Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:37:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:37:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:37:34 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:37:44 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:37:44 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:37:44 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:37:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:37:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:37:44 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:37:44 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:37:44 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:37:44 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:37:44 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:37:44 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:37:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:37:44 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:37:47 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:37:47 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:37:54 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:37:54 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:37:55 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:37:55 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:37:56 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:37:56 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:37:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:37:56 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:37:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:37:56 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:37:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:37:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:37:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:38:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:38:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:38:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:38:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:38:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:38:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:38:13 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:38:13 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:38:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:38:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:38:17 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:38:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:38:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:38:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:38:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:38:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:38:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:38:23 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:38:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:38:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:38:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:38:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:38:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:38:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:38:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:38:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:38:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:38:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:38:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:38:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:38:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:38:33 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:38:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:38:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:38:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:38:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:38:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:38:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:38:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:38:42 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:38:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:38:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:38:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:38:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:38:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:38:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:38:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:38:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:38:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:38:45 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:38:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:38:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:38:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:38:52 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:38:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:38:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:38:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:38:55 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:38:59 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:38:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:38:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:01 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:39:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:39:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:39:04 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:39:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:39:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:39:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:39:10 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:39:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:13 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:39:17 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:39:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:39:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:19 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:39:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:39:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:39:22 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:39:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:25 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:39:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:39:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:39:29 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:39:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:39:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:39:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:39:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:38 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:39:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:39:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:39:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:39:41 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:39:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:39:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:39:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:39:47 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:39:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:39:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:39:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:39:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:39:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:39:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:56 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:39:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:39:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:39:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:39:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:39:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:39:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:40:00 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:40:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:40:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:40:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:40:06 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:40:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:09 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:40:13 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:40:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:40:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:15 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:40:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:40:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:40:18 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:40:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:40:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:40:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:40:24 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:40:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:27 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:40:31 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:40:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:40:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:33 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:35 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:40:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:40:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:40:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:40:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:40:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:40:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:40:43 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:40:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:46 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:40:50 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:40:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:40:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:52 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:52 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:40:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:40:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:40:54 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:40:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:40:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:40:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:40:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:40:55 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:40:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:40:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:40:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:41:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:41:01 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:41:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:04 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:41:08 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:41:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:41:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:11 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:13 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:41:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:41:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:41:14 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:41:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:41:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:41:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:41:20 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:41:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:23 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:41:27 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:41:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:41:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:29 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:29 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:31 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:41:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:41:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:41:32 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:41:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:41:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:41:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:41:38 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:41:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:41 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:41:45 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:41:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:41:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:48 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:41:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:41:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:41:50 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:41:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:41:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:41:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:41:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:41:51 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:41:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:41:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:41:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:41:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:41:57 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:41:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:42:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:42:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:42:01 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:42:01 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:42:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:42:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:42:03 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:42:03 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:42:07 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:42:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:42:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:09 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:11 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:42:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:42:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:42:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:42:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:42:12 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:42:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:42:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:42:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:42:18 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:42:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:42:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:22 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:42:26 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:42:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:42:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:28 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3846 Windchill Wrap'

2019-10-04 18:42:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3846 Windchill Wrap'

2019-10-04 18:42:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:42:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:42:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:42:31 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:42:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:42:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:42:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:42:37 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:42:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:40 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:42:44 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:42:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:42:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:46 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:42:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:42:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:42:48 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:42:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:42:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:42:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:42:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:42:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:42:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:42:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:42:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:42:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:42:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:42:56 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:42:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:42:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:42:59 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:43:03 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:43:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:43:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:05 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:43:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:43:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:43:08 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:43:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:43:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:43:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:43:14 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:43:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:17 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:43:21 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:43:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:43:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:23 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:43:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:43:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:43:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:43:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:43:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:43:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:43:33 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:43:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:36 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:43:40 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:43:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:43:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:42 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:42 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:43:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:43:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:43:44 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:43:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:43:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:43:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:43:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:43:45 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:43:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:43:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:43:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:43:51 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:43:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:43:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:43:54 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:43:58 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:43:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:43:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:01 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:03 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:44:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:44:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:44:04 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:44:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:44:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:44:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:44:10 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:44:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:13 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:44:17 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:44:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:44:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:19 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:44:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:44:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:44:22 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:44:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:44:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:44:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:44:28 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:44:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:32 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:44:36 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:44:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:44:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:38 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:40 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:44:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:44:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:44:41 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:44:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:44:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:44:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:44:47 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:44:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:44:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:44:50 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:44:54 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:44:54 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:44:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:56 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:44:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:44:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:44:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:44:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:44:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:44:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:44:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:44:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:44:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:45:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:45:05 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:45:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:45:06 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:45:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:09 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:45:13 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:45:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:45:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:45:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:45:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:45:15 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:45:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:45:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:45:17 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:45:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:45:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:45:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:45:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:45:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:45:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:45:18 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:45:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:45:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:45:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:45:24 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:45:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:27 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:45:31 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:45:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:45:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:45:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:45:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:45:33 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:45:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:45:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:45:35 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:45:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:45:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:45:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:45:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:45:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:45:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:45:36 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:45:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:45:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:42 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:45:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:45:43 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:45:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:45:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:45:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:45:46 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 18:45:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:45:46 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 18:45:46 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:45:46 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:45:47 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:45:47 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:45:49 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:45:49 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 18:45:49 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 18:45:49 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 18:45:49 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 18:45:49 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 18:45:49 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:45:51 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 18:45:51 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:45:51 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 18:45:51 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:45:51 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 18:45:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:45:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 18:45:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:45:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 18:45:56 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:45:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:45:56 - [MESSAGE][PASSED] - Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 18:45:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:45:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 18:45:57 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 18:46:07 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 18:46:07 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 18:46:07 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 18:46:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 18:46:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/cabiCentralLogin"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:46:07 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/cabiCentralLogin: Test Cases/TestCaseUtilities/cabiCentralLogin

2019-10-04 18:46:07 - [TEST_STEP][PASSED] - CCURL = findTestData("envtData").getValue("CCURL", 1): null

2019-10-04 18:46:07 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-10-04 18:46:07 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-10-04 18:46:07 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 18:46:07 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 18:46:07 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 18:46:07 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 18:46:09 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 18:46:09 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:46:16 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/cabicentral/control/main' successfully

2019-10-04 18:46:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-10-04 18:46:17 - [MESSAGE][PASSED] - Current window maximized

2019-10-04 18:46:17 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:46:19 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:46:19 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:46:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:46:19 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-10-04 18:46:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:46:19 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-10-04 18:46:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:46:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:46:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:46:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-10-04 18:46:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:46:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:46:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/cabiCentralLogin' successfully

2019-10-04 18:46:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:46:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:46:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:46:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-10-04 18:46:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:46:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:46:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:46:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:46:37 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:46:38 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:46:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:46:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:46:42 - [TEST_STEP][FAILED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], CONTINUE_ON_FAILURE): Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)

2019-10-04 18:46:42 - [TEST_CASE][FAILED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:46:42 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:46:42 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:46:42 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:46:42 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:46:42 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:46:42 - [TEST_STEP][FAILED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:46:42 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:46:46 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:46:46 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:46:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:46:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:46:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:46:48 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:46:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:46:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:46:50 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:46:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:46:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:46:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:46:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:46:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:46:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:46:52 - [TEST_STEP][FAILED] - else: for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:46:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:46:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:46:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:46:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:46:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): Unable to find the element located by 'By.xpath: //select[@name='colorSelect']/option
'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:47:03 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //select[@name='colorSelect']/option
'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$0.00'

2019-10-04 18:47:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$0.00'

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:47:03 - [TEST_STEP][FAILED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)

2019-10-04 18:47:03 - [MESSAGE][FAILED] - Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:47:03 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:47:03 - [TEST_STEP][FAILED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:47:34 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //select[@name = 'sizeSelect']//./option'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 18:47:34 - [MESSAGE][FAILED] - Unable to get text of object 'Object Repository/Page_cabi Order Items/Size' (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to get text of object 'Object Repository/Page_cabi Order Items/Size'
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword.getText(GetTextKeyword.groovy:88)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword.execute(GetTextKeyword.groovy:67)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.getText(WebUiBuiltInKeywords.groovy:888)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$getText$5.call(Unknown Source)
	at productVerifyShort.run(productVerifyShort:125)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.webui.exception.WebElementNotFoundException: Web element with id: 'Object Repository/Page_cabi Order Items/Size' located by 'By.xpath: //select[@name = 'sizeSelect']//./option' not found
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.findWebElement(WebUiCommonHelper.java:1097)
	at com.kms.katalon.core.webui.keyword.internal.WebUIAbstractKeyword.findWebElement(WebUIAbstractKeyword.groovy:27)
	at com.kms.katalon.core.webui.keyword.internal.WebUIAbstractKeyword.findWebElement(WebUIAbstractKeyword.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword$_getText_closure1.doCall(GetTextKeyword.groovy:78)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword$_getText_closure1.call(GetTextKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword.getText(GetTextKeyword.groovy:88)
	at com.kms.katalon.core.webui.keyword.builtin.GetTextKeyword.execute(GetTextKeyword.groovy:67)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.getText(WebUiBuiltInKeywords.groovy:888)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$getText$5.call(Unknown Source)
	at Script1556545283548.run(Script1556545283548.groovy:125)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at Script1561624214612.run(Script1561624214612.groovy:40)
	... 13 more
)
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite\\20191004_180145\\1570195054372.png]]

2019-10-04 18:47:34 - [MESSAGE][FAILED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:47:34 - [MESSAGE][FAILED] - Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)

2019-10-04 18:47:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:47:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-10-04 18:47:37 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:47:37 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-10-04 18:47:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:47:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-10-04 18:47:39 - [TEST_STEP][FAILED] - callTestCase(findTestCase("NewArrival/productVerifyShort"), ["available":CCRetail], CONTINUE_ON_FAILURE): for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more


2019-10-04 18:47:39 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerifyShort: Test Cases/NewArrival/productVerifyShort

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-10-04 18:47:39 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:47:43 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:47:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:47:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:47:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:47:45 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:47:45 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:47:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:47:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:47:47 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:47:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '3843 Dressed-Up Shrug'

2019-10-04 18:47:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:47:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:47:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:47:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:47:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:47:49 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:47:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:47:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:47:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:47:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:47:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$99.00'

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:47:55 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:47:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:47:55 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:47:58 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:47:58 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:48:02 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:48:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:48:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:04 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:48:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:48:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:48:07 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:48:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:48:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:48:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$139.00'

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:48:13 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:48:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:16 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:48:20 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:48:20 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:48:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:22 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:23 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:48:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:48:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:48:26 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:48:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:48:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:48:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$169.00'

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:48:32 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:48:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:35 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:48:39 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:48:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:48:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:41 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:48:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:48:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:48:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:48:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:48:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:48:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:48:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:48:44 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:48:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:48:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:48:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:48:50 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:48:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:48:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:48:54 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:48:58 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:48:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:48:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:00 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:02 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:49:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:49:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:49:03 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:49:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:49:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:49:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:49:09 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:49:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:12 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:49:16 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:49:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:49:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:18 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:20 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:49:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:49:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:49:21 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:49:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:49:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:49:27 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:49:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$84.00'

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:49:28 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:49:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:31 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:49:35 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:49:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:49:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:37 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:39 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:49:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:49:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:49:40 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:49:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:49:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:49:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$79.00'

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:49:46 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:49:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:49:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:49:49 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:49:53 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:49:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:49:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:55 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:49:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:49:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:49:57 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:49:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:49:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:49:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:49:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:49:58 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:49:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:01 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:50:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:50:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$89.00'

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:50:05 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:50:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:08 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:50:12 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:50:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:50:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:14 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:16 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:50:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:50:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:50:17 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:50:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:50:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:50:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$94.00'

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:50:23 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:50:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:26 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:50:30 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:50:30 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:50:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:32 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:34 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:50:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:50:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:50:36 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:50:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:50:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:50:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$109.00'

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:50:42 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:50:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:45 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:50:49 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:50:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:50:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:51 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:50:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:50:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:50:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:50:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:50:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:50:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:50:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:50:54 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:50:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:50:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:50:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:51:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:51:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:51:00 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:51:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:51:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:51:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:51:03 - [TEST_STEP][PASSED] - delay(4): Delayed 4 second(s)

2019-10-04 18:51:07 - [MESSAGE][PASSED] - Delayed 4 second(s)

2019-10-04 18:51:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 18:51:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:51:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:51:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:51:10 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-10-04 18:51:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 18:51:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 18:51:12 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:51:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: ''

2019-10-04 18:51:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-04 18:51:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-04 18:51:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:51:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-10-04 18:51:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 18:51:13 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-10-04 18:51:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:51:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - s2 = " ": null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - prod_message = UtilityMethods.splitStyle(prod_message): null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - println(prod_message): null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - sa.assertTrue(prod_message.equalsIgnoreCase(expectedStyleDescription)): null

2019-10-04 18:51:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:51:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - break: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:51:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$159.00'

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:51:19 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:51:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getAttribute("value")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 18:51:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 18:51:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 18:51:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerifyShort' successfully

2019-10-04 18:51:22 - [MESSAGE][FAILED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]) FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more]]></system-out>
         <system-err><![CDATA[2019-10-04 18:01:49 - [TEST_CASE][FAILED] - Test Cases/NewArrival/CCOrders: Test Cases/NewArrival/CCOrders FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-04 18:01:48 - [TEST_SUITE][FAILED] - NewArrivalsSuite: Test Cases/NewArrival/CCOrders FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more]]></system-out>
      <system-err><![CDATA[2019-10-04 18:01:48 - [TEST_SUITE][FAILED] - NewArrivalsSuite: Test Cases/NewArrival/CCOrders FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/NewArrival/productVerifyShort' (Root cause: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
Caused by: com.kms.katalon.core.exception.StepFailedException: Call Test Case 'Test Cases/NewArrival/productVerifyShort' failed
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 18 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text '0' and expected text '99' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at CCOrders.run(CCOrders:40)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1570192305763.run(TempTestSuite1570192305763.groovy:35)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:37)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerifyShort.run(productVerifyShort:111)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual text '0' and expected text '99' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	... 34 more]]></system-err>
   </testsuite>
</testsuites>
