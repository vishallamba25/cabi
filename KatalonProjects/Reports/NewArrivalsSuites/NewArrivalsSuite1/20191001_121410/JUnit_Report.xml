<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite1" time="162" tests="0" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite1" tests="0" failures="0" errors="0" time="162" timestamp="2019-10-01 12:14:13" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite1">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191001_121410"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191001_121410\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png"/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="4266d8e07c11fa6147f8c9ce1e2134a4"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal1" classname="Test Cases/NA_Timezone_Separated/BOPersonal1" status="INCOMPLETE">
         <system-out><![CDATA[2019-10-01 12:14:13 - [TEST_CASE][INCOMPLETE] - Test Cases/NA_Timezone_Separated/BOPersonal1: null

2019-10-01 12:14:14 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:14:14 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:14:14 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:14:14 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:14:14 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:14:14 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:14:14 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-01 12:14:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:14:18 - [TEST_STEP][INCOMPLETE] - for ([timeRow = 1, timeRow <= 1, (timeRow++)]): null

2019-10-01 12:14:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:14:18 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:14:18 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:14:18 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:14:20 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:14:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:14:21 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:14:21 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:14:21 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:14:22 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:14:22 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:14:24 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:14:24 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:14:24 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:14:24 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:14:24 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:14:24 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:14:24 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:14:26 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:14:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:14:26 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:14:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:14:27 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:14:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:14:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:14:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:14:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:14:31 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:14:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:14:31 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:14:31 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:14:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:14:32 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:14:42 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:14:42 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:14:42 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:14:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:14:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:14:42 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:14:42 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:14:42 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:14:42 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:14:42 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:14:42 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:14:43 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:14:43 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:14:45 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:14:45 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:14:52 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:14:52 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:14:53 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:14:53 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:14:53 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:14:53 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:14:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:14:53 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:14:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:15:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:15:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:15:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:15:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:15:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:15:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:15:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:15:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:15:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:15:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:15:10 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:15:10 - [TEST_STEP][INCOMPLETE] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): null

2019-10-01 12:15:10 - [TEST_CASE][INCOMPLETE] - Test Cases/NewArrival/productVerify: null

2019-10-01 12:15:11 - [TEST_STEP][INCOMPLETE] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:11 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:11 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:13 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:13 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:15:15 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:15:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png]]

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:15:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:15:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:24 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:26 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:26 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:15:28 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:15:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:28 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:15:33 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:15:33 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:15:33 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:15:33 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:15:34 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png]]

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:15:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:15:34 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:15:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:15:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:15:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:37 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:39 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:39 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:15:41 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:15:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:41 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:15:46 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:15:46 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png]]

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:15:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:15:46 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:15:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:15:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:15:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:51 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:51 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:15:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:15:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:15:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:15:53 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:15:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:15:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:15:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:15:58 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:15:58 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:15:58 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:15:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png]]

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:15:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:15:59 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:15:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:16:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:01 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:04 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:04 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:16:06 - [TEST_STEP][FAILED] - else: null

2019-10-01 12:16:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:06 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:16:11 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:16:11 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png]]

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:16:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:16:11 - [TEST_STEP][FAILED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Unable to verify match between actual text '89' and expected text '69' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '89' and expected text '69' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:11 - [MESSAGE][FAILED] - Unable to verify match between actual text '89' and expected text '69' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '89' and expected text '69' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:16:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:16 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:16 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:16:18 - [TEST_STEP][FAILED] - else: null

2019-10-01 12:16:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:18 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:16:23 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:16:23 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:16:23 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:16:23 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:16:24 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png]]

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:16:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:16:24 - [TEST_STEP][FAILED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Unable to verify match between actual text '84' and expected text '89' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '84' and expected text '89' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:24 - [MESSAGE][FAILED] - Unable to verify match between actual text '84' and expected text '89' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '84' and expected text '89' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:16:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:16:26 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:16:27 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:16:27 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:16:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:27 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:27 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:29 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:29 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:16:31 - [TEST_STEP][FAILED] - else: null

2019-10-01 12:16:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:16:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:16:36 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png]]

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:16:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:16:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:16:37 - [TEST_STEP][FAILED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Unable to verify match between actual text '79' and expected text '84' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '79' and expected text '84' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:37 - [MESSAGE][FAILED] - Unable to verify match between actual text '79' and expected text '84' using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual text '79' and expected text '84' are not matched using regular expression
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.doCall(VerifyMatchKeyword.groovy:57)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword$_verifyMatch_closure1.call(VerifyMatchKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at productVerify.run(productVerify:94)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at BOPersonal1.run(BOPersonal1:34)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:342)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:333)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:312)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:304)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:238)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1569912250021.run(TempTestSuite1569912250021.groovy:35)
)

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:16:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:39 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:41 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:41 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:16:43 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:16:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:44 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png]]

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:16:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:16:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:52 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:52 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:52 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:16:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:54 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:54 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:16:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:16:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:16:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:16:56 - [TEST_STEP][INCOMPLETE] - else: null

2019-10-01 12:16:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:16:56 - [TEST_STEP][INCOMPLETE] - delay(5): null]]></system-out>
         <system-err><![CDATA[2019-10-01 12:14:13 - [TEST_CASE][INCOMPLETE] - Test Cases/NA_Timezone_Separated/BOPersonal1: null]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-01 12:14:13 - [TEST_SUITE][INCOMPLETE] - NewArrivalsSuite1: null]]></system-out>
      <system-err><![CDATA[2019-10-01 12:14:13 - [TEST_SUITE][INCOMPLETE] - NewArrivalsSuite1: null]]></system-err>
   </testsuite>
</testsuites>
