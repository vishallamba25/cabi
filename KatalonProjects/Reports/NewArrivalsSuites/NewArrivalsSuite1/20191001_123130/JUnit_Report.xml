<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite1" time="1050" tests="6" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite1" tests="6" failures="0" errors="0" time="1050" timestamp="2019-10-01 12:31:34" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite1">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191001_123130"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191001_123130\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png"/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="cdf3cef76e209855c9f5f1d2df359c69"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal1" classname="Test Cases/NA_Timezone_Separated/BOPersonal1" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:31:34 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal1: Test Cases/NA_Timezone_Separated/BOPersonal1

2019-10-01 12:31:34 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:31:34 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:31:34 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:31:34 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:31:35 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:31:35 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:31:35 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-01 12:31:38 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:31:38 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= 1, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:31:38 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:31:38 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:31:39 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:31:39 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:31:40 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:31:40 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:31:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:31:41 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:31:41 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:31:41 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:31:42 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:31:42 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:31:44 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:31:44 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:31:44 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:31:44 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:31:44 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:31:44 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:31:44 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:31:46 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:31:46 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:31:47 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:31:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:31:47 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:31:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:31:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:31:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:31:51 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:31:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:31:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:31:52 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:31:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:31:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:31:52 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:32:02 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:32:02 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:32:02 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:32:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:32:02 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:32:02 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:32:03 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:32:03 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:32:03 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:32:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:32:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:32:03 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:32:03 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:32:06 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:32:06 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:32:12 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:32:12 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:32:13 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:32:13 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:32:13 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:32:14 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:32:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:32:14 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:32:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:32:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:32:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:32:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:32:28 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:32:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:32:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:32:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:32:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:32:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:32:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:32:32 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:32:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:32:32 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:33 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:33 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:35 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:32:36 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:32:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:32:38 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:32:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:32:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:32:38 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png]]

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:32:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:32:43 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:32:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:46 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:48 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:32:48 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:32:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:32:50 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:32:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:32:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:32:50 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:32:55 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:32:55 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:32:55 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:32:55 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:32:56 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png]]

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:32:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:32:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:32:56 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:32:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:32:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:32:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:32:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:32:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:32:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:32:58 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:59 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:32:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:01 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:01 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:33:03 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:33:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:03 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:33:08 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:33:08 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png]]

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:33:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:33:08 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:33:08 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:33:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:11 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:13 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:13 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:33:15 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:33:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:15 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:33:20 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:33:20 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:33:20 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:33:20 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:33:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png]]

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:33:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:33:21 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:33:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:25 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:25 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:33:27 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:33:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:33:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:33:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:33:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:33:33 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png]]

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:33:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:33:33 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:33:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:33:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:33:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:36 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:38 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:38 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:33:40 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:33:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:40 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:33:45 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:33:45 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png]]

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:33:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:33:45 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:33:45 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:33:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:48 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:33:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:50 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:50 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:33:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:33:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:33:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:33:52 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:33:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:33:52 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:33:57 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:33:57 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:33:57 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:33:57 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:33:58 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png]]

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:33:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:33:58 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:33:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:34:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:34:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:01 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:01 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:03 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:03 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:34:05 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:34:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:05 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:34:10 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:34:10 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png]]

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:10 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:34:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:34:10 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:34:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:34:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:13 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:15 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:15 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:34:17 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:34:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:34:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:34:22 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:34:22 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:34:22 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:34:23 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png]]

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:34:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:34:23 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:34:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:25 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:27 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:27 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:34:29 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:34:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:30 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png]]

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:34:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:34:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:38 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:38 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:40 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:40 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:34:42 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:34:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:34:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:34:47 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:34:47 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:34:47 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:34:48 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png]]

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:34:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:34:48 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:34:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:34:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:52 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:52 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:34:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:34:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:34:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:34:54 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:34:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:34:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png]]

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:35:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:35:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:35:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:35:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:35:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:35:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:35:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:35:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal2" classname="Test Cases/NA_Timezone_Separated/BOPersonal2" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:35:03 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal2: Test Cases/NA_Timezone_Separated/BOPersonal2

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:35:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:35:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:35:04 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:35:04 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:35:06 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - for ([timeRow = 2, timeRow <= 2, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:35:06 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:35:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:35:06 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:35:06 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:35:06 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:35:07 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:35:07 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:35:09 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:35:09 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:35:09 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:35:09 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:35:09 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:35:09 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:35:09 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:35:11 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:35:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:35:11 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:35:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:35:11 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:35:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:35:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:35:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:35:15 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:35:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:35:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:35:16 - [MESSAGE][PASSED] - Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:35:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:35:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:35:16 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:35:26 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:35:26 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:35:26 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:35:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:35:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:35:26 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:35:26 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:35:26 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:35:26 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:35:26 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:35:26 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:35:27 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:35:27 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:35:29 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:35:29 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:35:36 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:35:36 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:35:37 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:35:37 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:35:37 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:35:37 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:35:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:35:37 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:35:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:35:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:35:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:35:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:35:48 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:35:48 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:35:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:35:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:35:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:35:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:35:51 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:35:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:52 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:52 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:52 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:35:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:35:54 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:35:54 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:35:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:35:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:35:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:35:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:35:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:35:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:58 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:58 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:35:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:01 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:01 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:05 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:05 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:05 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:07 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:07 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:11 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:11 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:13 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:13 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:18 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:18 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:20 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:20 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:24 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:26 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:26 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:30 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:30 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:32 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:32 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:37 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:39 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:39 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:43 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:43 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:45 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:45 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:49 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:51 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:51 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:36:55 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:36:56 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:36:56 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:36:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:56 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:56 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:56 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:36:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:36:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:36:58 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:58 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:36:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:37:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:37:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:37:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:02 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:37:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:37:04 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:37:04 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:37:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:37:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:37:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:37:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:37:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal3" classname="Test Cases/NA_Timezone_Separated/BOPersonal3" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:37:08 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal3: Test Cases/NA_Timezone_Separated/BOPersonal3

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:37:08 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:37:08 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:37:09 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:37:09 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:37:11 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - for ([timeRow = 3, timeRow <= 3, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:37:11 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:37:11 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:37:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:37:12 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:37:12 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:37:12 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:37:12 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:37:12 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:37:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:37:14 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:37:14 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:37:14 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:37:14 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:37:14 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:37:14 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:37:16 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:37:16 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:37:16 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:37:16 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:37:17 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:37:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:37:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:37:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:37:21 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:37:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:37:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:37:22 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:37:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:37:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:37:22 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:37:32 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:37:32 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:37:32 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:37:32 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:37:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:37:32 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:37:32 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:37:32 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:37:32 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:37:32 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:37:32 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:37:33 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:37:33 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:37:35 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:37:35 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:37:42 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:37:42 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:37:43 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:37:43 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:37:43 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:37:43 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:37:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:37:43 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:37:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:37:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:37:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:37:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:37:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:37:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:37:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:37:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:37:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:37:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:37:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:37:58 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:37:58 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:37:59 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:59 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:37:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:01 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:02 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:38:04 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:38:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:04 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png]]

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:38:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:38:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:12 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:14 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:14 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:38:16 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:38:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:38:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:38:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png]]

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:38:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:38:21 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:38:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:38:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:26 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:26 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:38:28 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:38:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:28 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:38:33 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:38:33 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:38:33 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:38:33 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:38:34 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png]]

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:38:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:38:34 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:38:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:38:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:36 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:39 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:39 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:38:41 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:38:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:41 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png]]

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:38:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:38:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:38:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:49 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:38:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:51 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:51 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:38:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:38:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:38:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:38:53 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:38:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:38:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png]]

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:38:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:00 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:01 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:01 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:03 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:03 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:39:05 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:39:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:05 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png]]

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:39:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:13 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:15 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:15 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:39:17 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:39:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:39:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:39:22 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png]]

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:39:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:39:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:39:23 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:39:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:25 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:27 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:27 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:39:29 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:39:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:29 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:39:34 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:39:34 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:39:34 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:39:34 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:39:35 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png]]

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:39:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:39:35 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:39:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:39 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:39 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:39:41 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:39:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png]]

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:39:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:39:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:51 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:52 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:39:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:39:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:39:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:39:54 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:39:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:39:54 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png]]

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:39:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:40:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:40:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:02 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:02 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:04 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:40:04 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:40:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:40:06 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:40:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:40:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:40:06 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png]]

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:40:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:40:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:13 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:40:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:40:13 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:14 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:40:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:16 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:40:16 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:40:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:40:18 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:40:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:40:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:40:18 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png]]

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:40:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:40:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:40:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:40:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:40:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:40:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal4" classname="Test Cases/NA_Timezone_Separated/BOPersonal4" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:40:26 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal4: Test Cases/NA_Timezone_Separated/BOPersonal4

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:40:26 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:40:26 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:40:26 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:40:26 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:40:29 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - for ([timeRow = 4, timeRow <= 4, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:40:29 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:40:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:40:29 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:40:29 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:40:29 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:40:30 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:40:30 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:40:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:40:32 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:40:32 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:40:32 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:40:32 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:40:32 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:40:32 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:40:34 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:40:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:40:34 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:40:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:40:34 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:40:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:40:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:40:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:40:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:40:38 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:40:38 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:40:38 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:40:39 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:40:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:40:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:40:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:40:39 - [MESSAGE][PASSED] - Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:40:39 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:40:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:40:39 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:40:49 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:40:49 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:40:49 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:40:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:40:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:40:49 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:40:49 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:40:49 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:40:50 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:40:50 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:40:50 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:40:50 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:40:50 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:40:52 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:40:52 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:40:59 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:40:59 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:41:00 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:41:00 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:41:00 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:41:00 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:41:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:41:00 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:41:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:41:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:41:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:41:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:41:11 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:41:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:41:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:41:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:41:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:41:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:41:14 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:15 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:15 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:15 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:17 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:17 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:21 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:23 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:23 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:28 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:28 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:28 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:30 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:30 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:34 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:34 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:36 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:36 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:40 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:40 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:42 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:42 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:47 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:47 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:47 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:49 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:49 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:53 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:53 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:55 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:55 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:41:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:41:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:59 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:41:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:01 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:01 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:05 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:42:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:06 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:06 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:06 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:08 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:08 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:12 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:14 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:14 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:18 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:18 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:20 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:20 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:42:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:42:25 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:42:25 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:42:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:25 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:25 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:42:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:27 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:27 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:42:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:42:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-01 12:42:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal5" classname="Test Cases/NA_Timezone_Separated/BOPersonal5" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:42:31 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal5: Test Cases/NA_Timezone_Separated/BOPersonal5

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:42:31 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:42:31 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:42:32 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:42:32 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:42:34 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - for ([timeRow = 5, timeRow <= 5, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:42:34 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:42:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:42:34 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:42:34 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:42:34 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:42:35 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:42:35 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:42:37 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:42:37 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:42:37 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:42:37 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:42:37 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:42:37 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:42:37 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:42:39 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:42:39 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:42:39 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:42:39 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:42:39 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:42:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:42:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:42:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:42:44 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:42:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:42:44 - [MESSAGE][PASSED] - Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:42:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:42:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:42:45 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:42:55 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:42:55 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:42:55 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:42:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:42:55 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:42:55 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:42:55 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:42:55 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:42:55 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:42:55 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:42:55 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:42:56 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:42:56 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:42:58 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:42:58 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:43:05 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:43:05 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:43:06 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:43:06 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:43:06 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:43:06 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:43:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:43:06 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:43:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:43:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:43:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:43:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:43:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:43:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:43:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:43:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:43:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:43:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:43:22 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:43:22 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:23 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:25 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:25 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:43:27 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:43:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:43:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:43:32 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png]]

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:43:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:43:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:43:33 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:43:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:35 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:37 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:37 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:39 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:43:39 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:43:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:39 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:43:44 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:43:44 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:43:44 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:43:44 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:43:45 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png]]

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:43:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:43:45 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:43:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:47 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:49 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:49 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:43:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:43:51 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:43:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:43:52 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png]]

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:43:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:43:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:43:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:59 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:43:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:00 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:02 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:02 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:44:04 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:44:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:04 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png]]

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:44:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:44:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:44:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:12 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:14 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:14 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:44:16 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:44:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png]]

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:44:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:44:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:24 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:26 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:26 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:44:28 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:44:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:28 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:44:33 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:44:33 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png]]

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:44:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:44:33 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:44:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:44:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:38 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:38 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:44:40 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:44:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:40 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:44:45 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:44:45 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:44:45 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:44:45 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:44:45 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png]]

2019-10-01 12:44:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:44:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:44:46 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:44:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:48 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:44:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:50 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:50 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:44:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:44:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:44:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:44:52 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:44:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:44:52 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:44:57 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:44:57 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:44:57 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:44:57 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:44:58 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png]]

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:44:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:44:58 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:44:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:00 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:02 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:02 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:45:04 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:45:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:04 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:45:09 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:45:09 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:45:09 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:45:09 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:45:10 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png]]

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:10 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:45:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:45:10 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:45:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:14 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:14 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:45:16 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:45:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png]]

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:45:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:45:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:45:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:25 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:25 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:27 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:27 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:45:29 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:45:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:29 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png]]

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:45:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:45:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:45:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:37 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:45:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:39 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:39 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:45:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:45:41 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:45:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:45:41 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png]]

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:45:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:45:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:45:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:45:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:45:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:45:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BOPersonal6" classname="Test Cases/NA_Timezone_Separated/BOPersonal6" status="PASSED">
         <system-out><![CDATA[2019-10-01 12:45:49 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BOPersonal6: Test Cases/NA_Timezone_Separated/BOPersonal6

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-01 12:45:49 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:45:49 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:45:49 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:45:49 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:45:52 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - for ([timeRow = 6, timeRow <= 6, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:45:52 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - println(row): null

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:45:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:45:52 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-01 12:45:52 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:45:52 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:45:53 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:45:53 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:45:55 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:45:55 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-01 12:45:55 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-01 12:45:55 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-01 12:45:55 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-01 12:45:55 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-01 12:45:55 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:45:57 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-01 12:45:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:45:57 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-01 12:45:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:45:57 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-01 12:45:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:46:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-01 12:46:01 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:46:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-01 12:46:01 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-01 12:46:01 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-01 12:46:01 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-01 12:46:01 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-01 12:46:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:46:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-01 12:46:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:46:02 - [MESSAGE][PASSED] - Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-01 12:46:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:46:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-01 12:46:02 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-01 12:46:12 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-01 12:46:12 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-01 12:46:12 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-01 12:46:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-01 12:46:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:46:12 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-01 12:46:12 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-01 12:46:12 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-01 12:46:12 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-01 12:46:12 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-01 12:46:12 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-01 12:46:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-01 12:46:13 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-01 12:46:15 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-01 12:46:15 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:46:22 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-01 12:46:22 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:46:23 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-01 12:46:23 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:46:23 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:46:23 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-01 12:46:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:46:23 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-01 12:46:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:46:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-01 12:46:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-01 12:46:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-01 12:46:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-01 12:46:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:46:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-01 12:46:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:46:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-10-01 12:46:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:46:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-01 12:46:37 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:46:37 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:38 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:38 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:38 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:46:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:46:40 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:46:40 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:46:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:46:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:46:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:46:42 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:46:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:46:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:46:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3843 image.png]]

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:46:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:46:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:46:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:46:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:46:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:46:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:46:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:46:49 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:46:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:50 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:46:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:46:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:46:52 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:46:52 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:46:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:46:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:46:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:46:54 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:46:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:46:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:46:54 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3846 image.png]]

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:46:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:46:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:47:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:02 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:04 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:04 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:47:06 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:47:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:06 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:47:11 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:47:11 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:47:11 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:47:11 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:47:12 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3850 image.png]]

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:47:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:47:12 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:47:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:16 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:16 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:47:18 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:47:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:19 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3857 image.png]]

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:47:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:26 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:28 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:29 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:47:31 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:47:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3861 image.png]]

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:47:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:47:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:38 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:38 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:39 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:41 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:41 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:47:43 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:47:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:43 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3863 image.png]]

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:47:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:47:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:47:50 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:47:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:51 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:51 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:47:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:53 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:53 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:47:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:47:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:47:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:47:55 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:47:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:47:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3864 image.png]]

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:48:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:48:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:03 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:03 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:05 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:05 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:48:07 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:48:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:48:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:48:12 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3865 image.png]]

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:48:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:48:12 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:48:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:48:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:15 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:17 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:17 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:48:19 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:48:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:19 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:48:24 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:48:24 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:48:24 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:48:24 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:48:24 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3869 image.png]]

2019-10-01 12:48:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:48:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:48:25 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:48:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:27 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:29 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:29 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:48:31 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:48:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:48:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:48:36 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:48:36 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:48:36 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:48:37 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3870 image.png]]

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:48:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:48:37 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:48:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:39 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:41 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:41 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:48:43 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:48:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:43 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:48:48 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:48:48 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:48:48 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:48:48 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:48:49 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3871 image.png]]

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:48:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:48:49 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:48:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), styleid_data): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:51 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-01 12:48:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:53 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:53 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-01 12:48:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:48:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:48:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-01 12:48:55 - [TEST_STEP][PASSED] - else: null

2019-10-01 12:48:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-01 12:48:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-01 12:49:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-01 12:49:00 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-01 12:49:00 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-01 12:49:00 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-01 12:49:01 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BOPersonal_3875 image.png]]

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:49:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - break: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:49:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:49:01 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:49:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-01 12:49:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-01 12:49:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-01 12:49:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:49:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-01 12:49:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:49:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-01 12:49:03 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:49:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-01 12:49:03 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-01 12:49:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-01 12:31:34 - [TEST_SUITE][PASSED] - NewArrivalsSuite1: Test Cases/NA_Timezone_Separated/BOPersonal6]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
