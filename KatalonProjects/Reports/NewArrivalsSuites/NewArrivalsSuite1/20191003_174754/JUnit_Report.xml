<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite1" time="1316" tests="6" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite1" tests="6" failures="0" errors="0" time="1316" timestamp="2019-10-03 17:47:56" hostname="user - 10.0.102.244" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite1">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191003_174754"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191003_174754\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png"/>
         <property name="hostName" value="user - 10.0.102.244"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="10.0.102.244"/>
         <property name="sessionId" value="718b5eaceb3dd1a188bcd1c2adddaa33"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail1" classname="Test Cases/NA_Timezone_Separated/BORetail1" status="PASSED">
         <system-out><![CDATA[2019-10-03 17:47:57 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail1: Test Cases/NA_Timezone_Separated/BORetail1

2019-10-03 17:47:57 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 17:47:57 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 17:47:57 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 17:47:57 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:47:57 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:47:57 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:47:57 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-03 17:48:01 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= 1, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:48:01 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 17:48:01 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 17:48:02 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:48:02 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 17:48:02 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 17:48:02 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 17:48:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:48:03 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 17:48:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:48:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:48:04 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:48:04 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:48:06 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:48:06 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 17:48:06 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 17:48:06 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 17:48:06 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 17:48:06 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 17:48:06 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:48:08 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:48:08 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:48:08 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:48:08 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:48:09 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:48:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:48:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:48:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 17:48:13 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:48:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:48:13 - [MESSAGE][PASSED] - Text ' 10/16/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:48:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:48:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:48:14 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 17:48:24 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 17:48:24 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 17:48:24 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 17:48:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:48:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:48:24 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 17:48:24 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 17:48:24 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 17:48:24 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 17:48:24 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:48:24 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:48:25 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:48:25 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:48:27 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:48:27 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:48:34 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:48:34 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:48:35 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:48:35 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:48:35 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:48:35 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:48:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:48:35 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:48:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:48:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:48:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:48:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:48:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:48:46 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:48:46 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 17:48:46 - [TEST_STEP][PASSED] - AshowOrders = findWebElement(findTestObject("Page_cabi Home/a_retail_purchases"), 30): null

2019-10-03 17:48:46 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(AshowOrders)): Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:48:50 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:48:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:48:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:48:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:53 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:48:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:48:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:55 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:56 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:48:56 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:49:01 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:49:01 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 17:49:01 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:49:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:49:01 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:49:06 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:49:06 - [TEST_STEP][PASSED] - println(executor.executeScript("return arguments[0].value;", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5))): null

2019-10-03 17:49:06 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 17:49:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Retail Store/span_next_1")): Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:49:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:49:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:49:10 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 17:49:13 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:13 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:15 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:17 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:18 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:18 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 17:49:21 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:25 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:25 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:25 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 17:49:28 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:28 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:32 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:32 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:32 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:35 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 17:49:36 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 17:49:36 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:40 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:40 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:40 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 17:49:43 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:43 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:47 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:47 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:47 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 17:49:50 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:49:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:49:54 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:49:54 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:49:54 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:49:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:49:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:49:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:49:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:49:57 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 17:49:58 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:58 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:49:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:02 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:02 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:02 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:50:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 17:50:05 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:05 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:09 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:09 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:09 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:50:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 17:50:12 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:16 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:16 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:16 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:50:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 17:50:20 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:20 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:24 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:24 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:24 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:50:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 17:50:27 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:27 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:31 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:31 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:31 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:50:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 17:50:34 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:34 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:50:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:50:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:50:38 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:50:38 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:50:38 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:50:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:50:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail2" classname="Test Cases/NA_Timezone_Separated/BORetail2" status="PASSED">
         <system-out><![CDATA[2019-10-03 17:50:39 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail2: Test Cases/NA_Timezone_Separated/BORetail2

2019-10-03 17:50:39 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 17:50:39 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 17:50:39 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 17:50:39 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:50:39 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:50:39 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:50:39 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:50:42 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - for ([timeRow = 2, timeRow <= 2, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:50:42 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 17:50:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:50:42 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 17:50:42 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:50:42 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:50:43 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:50:43 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:50:45 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:50:45 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 17:50:45 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 17:50:45 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 17:50:45 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 17:50:45 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 17:50:45 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:50:47 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:50:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:50:47 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:50:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:50:47 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:50:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:50:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:50:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:50:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 17:50:52 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:50:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:50:52 - [MESSAGE][PASSED] - Text ' 10/24/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:50:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:50:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:50:53 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 17:51:03 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 17:51:03 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 17:51:03 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 17:51:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:51:03 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:51:03 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 17:51:03 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 17:51:03 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 17:51:03 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 17:51:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:51:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:51:04 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:51:04 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:51:06 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:51:06 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:51:12 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:51:12 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:51:13 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:51:13 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:51:13 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:51:13 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:51:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:51:14 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:51:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:51:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:51:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:51:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:51:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:51:25 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:51:25 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 17:51:25 - [TEST_STEP][PASSED] - AshowOrders = findWebElement(findTestObject("Page_cabi Home/a_retail_purchases"), 30): null

2019-10-03 17:51:25 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(AshowOrders)): Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:51:30 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:51:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:51:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:51:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 17:51:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:34 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:51:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:51:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:36 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:51:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:51:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:51:41 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 17:51:41 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:51:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:51:41 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:51:46 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:51:46 - [TEST_STEP][PASSED] - println(executor.executeScript("return arguments[0].value;", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5))): null

2019-10-03 17:51:47 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 17:51:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Retail Store/span_next_1")): Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:51:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:51:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:51:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:51:50 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:51:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:51:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 17:51:53 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:51:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:51:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:51:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:51:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:51:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:51:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:51:57 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:51:57 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:51:57 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:51:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:51:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:51:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 17:52:00 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 17:52:00 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:01 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:05 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:05 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:05 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:05 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 17:52:08 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:08 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:12 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:12 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:12 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 17:52:15 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:15 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:19 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:19 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:19 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:19 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:19 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 17:52:22 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:22 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:26 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:26 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:26 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 17:52:30 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:34 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:34 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:34 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 17:52:37 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:39 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:41 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:41 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:41 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 17:52:44 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:44 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:48 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:48 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:48 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 17:52:52 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:52 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:52:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:52:56 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:52:56 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:52:56 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:52:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:52:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:52:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 17:52:59 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:52:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:03 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:53:03 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:53:03 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:53:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:53:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 17:53:06 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:53:06 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:53:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:10 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:53:10 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:53:10 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:53:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:53:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 17:53:14 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:53:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:53:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:53:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:53:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail3" classname="Test Cases/NA_Timezone_Separated/BORetail3" status="PASSED">
         <system-out><![CDATA[2019-10-03 17:53:18 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail3: Test Cases/NA_Timezone_Separated/BORetail3

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 17:53:18 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:53:18 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:53:19 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:53:19 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:53:21 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - for ([timeRow = 3, timeRow <= 3, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:53:21 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 17:53:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:53:21 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 17:53:21 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:53:21 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:53:22 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:53:22 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:53:24 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:53:24 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 17:53:24 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 17:53:24 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 17:53:24 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 17:53:24 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 17:53:24 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:53:26 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:53:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:53:26 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:53:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:53:26 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:53:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:53:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:53:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 17:53:30 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:53:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:53:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:53:31 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:53:31 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:53:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:53:31 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 17:53:41 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 17:53:41 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 17:53:41 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 17:53:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:53:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:53:41 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 17:53:41 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 17:53:41 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 17:53:41 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 17:53:41 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:53:41 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:53:42 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:53:42 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:53:44 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:53:44 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:53:51 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:53:51 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:53:52 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:53:52 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:53:52 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:53:53 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:53:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:53:53 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:53:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:54:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:54:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:54:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:54:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:54:06 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:54:06 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 17:54:06 - [TEST_STEP][PASSED] - AshowOrders = findWebElement(findTestObject("Page_cabi Home/a_retail_purchases"), 30): null

2019-10-03 17:54:06 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(AshowOrders)): Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:54:10 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-03 17:54:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:54:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:54:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:54:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:54:13 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 17:54:13 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 17:54:13 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 17:54:13 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:14 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:54:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:54:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:16 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:17 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:54:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:54:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:54:22 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 17:54:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:54:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:54:22 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:54:27 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:54:27 - [TEST_STEP][PASSED] - println(executor.executeScript("return arguments[0].value;", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5))): null

2019-10-03 17:54:27 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 17:54:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Retail Store/span_next_1")): Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:54:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-03 17:54:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:54:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:54:30 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-03 17:54:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:54:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 17:54:33 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:54:33 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:54:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:54:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:54:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:54:35 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:54:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:54:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:54:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:54:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:54:40 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:54:40 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:54:40 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:54:41 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png]]

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:54:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 17:54:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 17:54:41 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:54:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:54:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:54:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:54:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:54:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:54:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:54:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:54:43 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 17:54:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 17:54:43 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:54:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:54:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:54:46 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 17:54:47 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 17:54:47 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:54:47 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:54:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:54:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:54:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:54:49 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:54:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:54:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:54:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:54:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:54:58 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:54:58 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:54:58 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:54:58 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png]]

2019-10-03 17:54:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:54:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:54:58 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 17:54:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 17:54:59 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:54:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:54:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:01 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 17:55:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 17:55:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:55:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:55:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 17:55:04 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:04 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:55:06 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:55:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:12 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:55:17 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:55:17 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png]]

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:55:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 17:55:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 17:55:18 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:55:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:20 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 17:55:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 17:55:20 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:55:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:55:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 17:55:23 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:55:25 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:55:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:29 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png]]

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:55:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 17:55:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 17:55:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:55:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:55:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 17:55:40 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:40 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:55:42 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:55:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:55:46 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png]]

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:55:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:53 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:55:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:53 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:55:53 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:55:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:55:53 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:55:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:55:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 17:55:57 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:57 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:55:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:55:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:55:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:55:59 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:55:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:03 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:56:08 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:56:08 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png]]

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:56:08 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 17:56:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 17:56:09 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:56:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:11 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:56:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:56:11 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:56:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:56:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 17:56:14 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:56:16 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:56:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:20 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png]]

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:56:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:27 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 17:56:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 17:56:28 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:56:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:56:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 17:56:31 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:31 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:56:33 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:56:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:37 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png]]

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:56:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:56:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:56:44 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:56:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 17:56:44 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:56:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:56:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 17:56:48 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:48 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:56:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:56:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:56:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:56:50 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:56:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:56:54 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png]]

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:56:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:57:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:02 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 17:57:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 17:57:02 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:57:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:57:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 17:57:05 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:05 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:57:07 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:57:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:12 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:57:17 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:57:17 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png]]

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 17:57:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:57:17 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 17:57:18 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:57:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:20 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 17:57:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 17:57:20 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:57:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:57:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 17:57:23 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:57:25 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:57:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:29 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:57:34 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:57:34 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:57:34 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:57:34 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:57:35 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png]]

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 17:57:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 17:57:35 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:57:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:37 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 17:57:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 17:57:37 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:57:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:57:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 17:57:40 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:40 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:57:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 17:57:42 - [TEST_STEP][PASSED] - else: null

2019-10-03 17:57:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 17:57:46 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:57:51 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:57:51 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 17:57:51 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 17:57:51 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 17:57:52 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png]]

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - break: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 17:57:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 17:57:52 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 17:57:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:57:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 17:57:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 17:57:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail4" classname="Test Cases/NA_Timezone_Separated/BORetail4" status="PASSED">
         <system-out><![CDATA[2019-10-03 17:57:54 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail4: Test Cases/NA_Timezone_Separated/BORetail4

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 17:57:54 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:57:54 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:57:55 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:57:55 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:57:57 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - for ([timeRow = 4, timeRow <= 4, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:57:57 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 17:57:57 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 17:57:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:57:58 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 17:57:58 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:57:58 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:57:58 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:57:58 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:58:00 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:58:00 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 17:58:00 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 17:58:00 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 17:58:00 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 17:58:00 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 17:58:00 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:58:02 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 17:58:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:58:03 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 17:58:03 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:58:03 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 17:58:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:58:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 17:58:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:58:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 17:58:07 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:58:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:58:07 - [MESSAGE][PASSED] - Text ' 11/05/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 17:58:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:58:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 17:58:08 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 17:58:18 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 17:58:18 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 17:58:18 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 17:58:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 17:58:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:58:18 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 17:58:18 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 17:58:18 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 17:58:18 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 17:58:18 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 17:58:18 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 17:58:18 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 17:58:18 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 17:58:20 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 17:58:20 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:58:27 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 17:58:27 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:58:28 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:58:28 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:58:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:58:28 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 17:58:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:58:28 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 17:58:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:58:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 17:58:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:58:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:58:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 17:58:41 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:58:41 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 17:58:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 17:58:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 17:58:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-03 17:58:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-03 17:58:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 17:58:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 17:58:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:58:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:58:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:56 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:58:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:58:58 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:59 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 17:58:59 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:59:04 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:59:04 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 17:59:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:59:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 17:59:04 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 17:59:09 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 17:59:09 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 17:59:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 17:59:12 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 17:59:12 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 17:59:16 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:16 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:20 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:59:20 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:59:20 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:59:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 17:59:23 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:27 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): Unable to find the element located by 'By.xpath: //div[@id='search-result-container']/div/span/strong'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:59:32 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //div[@id='search-result-container']/div/span/strong'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 17:59:32 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:59:32 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:59:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:37 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 17:59:38 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 17:59:38 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:38 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:42 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:59:42 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:59:42 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:59:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 17:59:45 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:45 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:49 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:59:49 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:59:49 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:59:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 17:59:52 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:52 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 17:59:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 17:59:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 17:59:56 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 17:59:56 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 17:59:56 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 17:59:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 17:59:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 17:59:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 17:59:59 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 18:00:00 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 18:00:00 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:00 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:02 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:04 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:04 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:04 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:04 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:04 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 18:00:07 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:07 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:11 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:11 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:11 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 18:00:14 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:18 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:18 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:18 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 18:00:21 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 18:00:21 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:22 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:26 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:26 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:26 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 18:00:29 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:29 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:33 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:33 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:33 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 18:00:36 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:40 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:40 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:40 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:00:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 18:00:43 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:43 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:00:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:00:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - println(noResultMessages.size()): null

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - sa.assertTrue(noResultMessages.size() > 0): null

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-10-03 18:00:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail5" classname="Test Cases/NA_Timezone_Separated/BORetail5" status="PASSED">
         <system-out><![CDATA[2019-10-03 18:00:47 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail5: Test Cases/NA_Timezone_Separated/BORetail5

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 18:00:47 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 18:00:48 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:00:48 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:00:48 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:00:48 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:00:51 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - for ([timeRow = 5, timeRow <= 5, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 18:00:51 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 18:00:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 18:00:51 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 18:00:51 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:00:51 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:00:52 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:00:52 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:00:54 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:00:54 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 18:00:54 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 18:00:54 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 18:00:54 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 18:00:54 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 18:00:54 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 18:00:56 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 18:00:56 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 18:00:56 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 18:00:56 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 18:00:56 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 18:00:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 18:01:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 18:01:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 18:01:00 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 18:01:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 18:01:00 - [MESSAGE][PASSED] - Text ' 11/06/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 18:01:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 18:01:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 18:01:01 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 18:01:11 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 18:01:11 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 18:01:11 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 18:01:11 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 18:01:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 18:01:11 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 18:01:11 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 18:01:11 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 18:01:11 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 18:01:11 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:01:11 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:01:12 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:01:12 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:01:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:01:14 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 18:01:21 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 18:01:21 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 18:01:22 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 18:01:22 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:01:22 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 18:01:22 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 18:01:22 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 18:01:23 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 18:01:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:01:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:01:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:01:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:01:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 18:01:36 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 18:01:36 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 18:01:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 18:01:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 18:01:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-03 18:01:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-03 18:01:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 18:01:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 18:01:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:01:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 18:01:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 18:01:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:47 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:01:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:01:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:49 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:01:49 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:01:54 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:01:54 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 18:01:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 18:01:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 18:01:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:02:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:02:00 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 18:02:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:02:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 18:02:03 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-03 18:02:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:02:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 18:02:06 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:06 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:02:08 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:02:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:08 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:02:13 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:02:13 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png]]

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 18:02:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 18:02:13 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:02:13 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:02:14 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:16 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:16 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 18:02:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 18:02:16 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:02:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:02:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 18:02:19 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:19 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:02:21 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:02:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:25 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:02:30 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:02:30 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:02:30 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:02:30 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:02:31 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png]]

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 18:02:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 18:02:31 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:02:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:33 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 18:02:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 18:02:33 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:02:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:02:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 18:02:36 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:36 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:02:38 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:02:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:02:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:02:47 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:02:47 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:02:47 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:02:48 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png]]

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 18:02:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 18:02:48 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:02:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:02:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:02:50 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:02:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:02:50 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:02:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:02:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 18:02:53 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:02:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:02:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:02:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:02:55 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:02:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:02:59 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:03:04 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:03:04 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png]]

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:04 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:03:04 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:03:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:03:05 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:03:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:07 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:03:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:03:07 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:03:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:03:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 18:03:10 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:10 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:03:12 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:03:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:14 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:03:19 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:03:19 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:03:19 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:03:19 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:03:20 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png]]

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:03:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:03:20 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:03:20 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:22 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:22 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:22 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:22 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:03:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:03:22 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:03:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:03:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 18:03:25 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:25 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:03:27 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:03:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:03:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:03:36 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:03:36 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:03:36 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:03:37 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png]]

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:03:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:03:37 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:03:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:39 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:03:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:03:39 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:03:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:03:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 18:03:42 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:42 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:03:44 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:03:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:03:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:03:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:03:53 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png]]

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:53 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:03:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 18:03:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 18:03:54 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:03:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:03:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:03:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:03:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:03:56 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 18:03:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 18:03:56 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:03:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:03:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 18:03:59 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:03:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:04:01 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:04:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:05 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:04:10 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:04:10 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png]]

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:10 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:04:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:04:10 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:04:10 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:04:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:13 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:04:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:04:13 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:04:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:04:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 18:04:16 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:16 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:04:18 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:04:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:22 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png]]

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:04:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:29 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:29 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:29 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:04:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:04:29 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:04:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:04:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:04:32 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 18:04:33 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 18:04:33 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:33 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:04:35 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:04:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:38 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:04:43 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:04:43 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:04:43 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:04:43 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:04:44 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png]]

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 18:04:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 18:04:44 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:04:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:04:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:04:46 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 18:04:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 18:04:46 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:04:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:04:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 18:04:49 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:04:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:04:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:04:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:04:51 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:04:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:04:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:05:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:05:00 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:05:00 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:05:00 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:05:01 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png]]

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:05:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 18:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 18:05:01 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:05:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:05:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:05:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:05:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:05:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:05:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:05:03 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:05:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:05:03 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:05:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:05:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 18:05:06 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:05:06 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:05:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:05:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:05:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:05:08 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:05:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:05:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:05:12 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:05:17 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:05:17 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:05:17 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:05:17 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:05:18 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png]]

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:05:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 18:05:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 18:05:18 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:05:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:05:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:05:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:05:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:05:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 18:05:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:05:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail6" classname="Test Cases/NA_Timezone_Separated/BORetail6" status="PASSED">
         <system-out><![CDATA[2019-10-03 18:05:20 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail6: Test Cases/NA_Timezone_Separated/BORetail6

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-03 18:05:20 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:05:20 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:05:21 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:05:21 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:05:23 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - for ([timeRow = 6, timeRow <= 6, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 18:05:23 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - println(row): null

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-03 18:05:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 18:05:23 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-03 18:05:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:05:23 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:05:24 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:05:24 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:05:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:05:26 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-03 18:05:26 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-03 18:05:26 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-03 18:05:26 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-03 18:05:26 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-03 18:05:26 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 18:05:28 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-03 18:05:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 18:05:28 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-03 18:05:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 18:05:28 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-03 18:05:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 18:05:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-03 18:05:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 18:05:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-03 18:05:32 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-03 18:05:32 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-03 18:05:32 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-03 18:05:33 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-03 18:05:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 18:05:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-03 18:05:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 18:05:33 - [MESSAGE][PASSED] - Text ' 11/20/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-03 18:05:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 18:05:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-03 18:05:33 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-03 18:05:43 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-03 18:05:43 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-03 18:05:43 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-03 18:05:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-03 18:05:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 18:05:43 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-03 18:05:43 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-03 18:05:43 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-03 18:05:43 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-03 18:05:43 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-03 18:05:43 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-03 18:05:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-03 18:05:44 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-03 18:05:46 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-03 18:05:46 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 18:05:53 - [MESSAGE][PASSED] - Navigate to 'https://test4.cliotest.com/backoffice/control/main' successfully

2019-10-03 18:05:53 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 18:05:54 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-03 18:05:54 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:05:54 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 18:05:54 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-03 18:05:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 18:05:54 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-03 18:05:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:06:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-03 18:06:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:06:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:06:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-03 18:06:06 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 18:06:06 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-03 18:06:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 18:06:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-10-03 18:06:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-10-03 18:06:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-10-03 18:06:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 18:06:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-10-03 18:06:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:06:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:06:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 18:06:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-03 18:06:14 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-03 18:06:14 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-03 18:06:14 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-03 18:06:14 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - space = " ": null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:15 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:06:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:06:17 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:17 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:17 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:17 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-03 18:06:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:06:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:06:22 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-03 18:06:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 18:06:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-03 18:06:23 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:06:28 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:06:28 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-03 18:06:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:06:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-03 18:06:31 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-03 18:06:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:06:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-03 18:06:34 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:06:34 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:06:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:06:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:06:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:06:36 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:06:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:06:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:06:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:06:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:06:41 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png]]

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:06:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:06:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 18:06:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 18:06:42 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:06:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:06:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:06:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:06:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:06:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:06:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:06:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:06:44 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 18:06:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-03 18:06:44 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:06:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:06:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-03 18:06:47 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:06:47 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:06:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:06:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:06:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:06:49 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:06:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:06:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:06:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:06:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:06:58 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:06:58 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:06:58 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:06:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png]]

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:06:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 18:06:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 18:06:59 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:06:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:06:59 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:01 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:01 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 18:07:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-03 18:07:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:07:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:07:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-03 18:07:04 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:04 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:07:06 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:07:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:10 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:07:15 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:07:15 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:07:15 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:07:15 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:07:16 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png]]

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 18:07:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $169.00'

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 18:07:16 - [MESSAGE][PASSED] - Actual text '169' and expected text '169' are matched  using regular expression

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:07:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:18 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:07:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:07:18 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:07:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:07:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-03 18:07:21 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:07:23 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:07:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png]]

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:07:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:34 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:07:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:07:35 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:07:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:07:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-03 18:07:38 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:38 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:07:40 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:07:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:07:44 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png]]

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:07:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:07:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:07:51 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:07:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:07:51 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:07:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:07:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-03 18:07:55 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:55 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:07:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:07:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:07:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:07:57 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:07:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:01 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png]]

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $84.00'

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Actual text '84' and expected text '84' are matched  using regular expression

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:08:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:09 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:08:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:08:09 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:08:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:08:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-03 18:08:12 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:08:14 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:08:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:18 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png]]

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $79.00'

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Actual text '79' and expected text '79' are matched  using regular expression

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:08:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:25 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 18:08:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-03 18:08:25 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:08:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:08:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-03 18:08:28 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-03 18:08:28 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:29 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:08:31 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:08:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png]]

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:08:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:42 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:08:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-03 18:08:42 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:08:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:08:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-03 18:08:45 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-03 18:08:45 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:46 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:08:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:08:48 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:08:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:08:51 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:08:56 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:08:56 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:08:56 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:08:56 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:08:56 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png]]

2019-10-03 18:08:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 18:08:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $94.00'

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 18:08:57 - [MESSAGE][PASSED] - Actual text '94' and expected text '94' are matched  using regular expression

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:08:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:08:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:08:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:08:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:08:59 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:08:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-03 18:08:59 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:08:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:09:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-03 18:09:02 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:09:04 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:09:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:10 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:09:15 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:09:15 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:09:15 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:09:15 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:09:15 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png]]

2019-10-03 18:09:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 18:09:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 18:09:16 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:09:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:18 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 18:09:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-03 18:09:18 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:09:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:09:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-03 18:09:21 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:09:23 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:09:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:09:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:09:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:09:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:09:32 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:09:32 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png]]

2019-10-03 18:09:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 18:09:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 18:09:33 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:09:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:35 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:09:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-03 18:09:35 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:09:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-03 18:09:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-03 18:09:38 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:38 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-03 18:09:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-03 18:09:40 - [TEST_STEP][PASSED] - else: null

2019-10-03 18:09:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-03 18:09:44 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-03 18:09:49 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-03 18:09:49 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png]]

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-03 18:09:49 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - break: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 18:09:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $159.00'

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 18:09:50 - [MESSAGE][PASSED] - Actual text '159' and expected text '159' are matched  using regular expression

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-03 18:09:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-03 18:09:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-03 18:09:52 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-03 18:09:52 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-03 18:09:52 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 18:09:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-03 18:09:52 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-03 18:09:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-03 17:47:56 - [TEST_SUITE][PASSED] - NewArrivalsSuite1: Test Cases/NA_Timezone_Separated/BORetail6]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
