<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalsSuite1" time="360" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalsSuite1" tests="1" failures="0" errors="0" time="360" timestamp="2019-10-04 16:15:47" hostname="user - 172.16.231.44" id="Test Suites/NewArrivalsSuites/NewArrivalsSuite1">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191004_161541"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\Reports\\NewArrivalsSuites\\NewArrivalsSuite1\\20191004_161541\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png, C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png"/>
         <property name="hostName" value="user - 172.16.231.44"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 77.0.3865.90"/>
         <property name="hostAddress" value="172.16.231.44"/>
         <property name="sessionId" value="b14623f6bfaeb8d8ed3a0b7dd0894253"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NA_Timezone_Separated/BORetail3" classname="Test Cases/NA_Timezone_Separated/BORetail3" status="PASSED">
         <system-out><![CDATA[2019-10-04 16:15:48 - [TEST_CASE][PASSED] - Test Cases/NA_Timezone_Separated/BORetail3: Test Cases/NA_Timezone_Separated/BORetail3

2019-10-04 16:15:48 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-10-04 16:15:48 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-10-04 16:15:48 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-10-04 16:15:48 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 16:15:49 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 16:15:49 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 16:15:49 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-10-04 16:15:53 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 16:15:53 - [TEST_STEP][PASSED] - driver = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:15:53 - [TEST_STEP][PASSED] - executor = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:15:53 - [TEST_STEP][PASSED] - for ([timeRow = 3, timeRow <= 3, (timeRow++)]): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-04 16:15:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/populateTimeGlobalVars"), ["row":timeRow], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 16:15:53 - [TEST_CASE][PASSED] - Test Cases/NewArrival/populateTimeGlobalVars: Test Cases/NewArrival/populateTimeGlobalVars

2019-10-04 16:15:54 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-10-04 16:15:54 - [TEST_STEP][PASSED] - clockServerTarget = UtilityMethods.getTestData("envtData", "clockServerTarget", 1): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-10-04 16:15:57 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - println(row): null

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - println(BOPersonal): null

2019-10-04 16:15:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/populateTimeGlobalVars' successfully

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/setTimezone"), ["ofbizURL":"", "ofbizuser":"", "ofbizpass":"", "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget, "clockServerTarget":clockServerTarget], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 16:15:58 - [TEST_CASE][PASSED] - Test Cases/NewArrival/setTimezone: Test Cases/NewArrival/setTimezone

2019-10-04 16:15:58 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 16:15:58 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 16:15:59 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 16:15:59 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 16:16:01 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 16:16:01 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-10-04 16:16:01 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-10-04 16:16:01 - [TEST_STEP][PASSED] - ofbizURL = findTestData("envtData").getValue("ofbizURL", 1): null

2019-10-04 16:16:02 - [TEST_STEP][PASSED] - ofbizuser = findTestData("credData").getValue("ofbizuser", 1): null

2019-10-04 16:16:02 - [TEST_STEP][PASSED] - ofbizpass = findTestData("credData").getValue("ofbizpass", 1): null

2019-10-04 16:16:02 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 16:16:03 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-10-04 16:16:03 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 16:16:04 - [MESSAGE][PASSED] - Text 'automation' is set on object 'Object Repository/Page_/input_Username_username'

2019-10-04 16:16:04 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 16:16:04 - [MESSAGE][PASSED] - Text 'cabiautomation' is set on object 'Object Repository/Page_/input_Password_password'

2019-10-04 16:16:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 16:16:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-10-04 16:16:08 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 16:16:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-10-04 16:16:09 - [TEST_STEP][PASSED] - cst = UtilityMethods.createTestObject("select_target", "//select[@name='Target']/option[contains(text(), '", clockServerTarget, "')]"): null

2019-10-04 16:16:09 - [TEST_STEP][PASSED] - println(clockServerTarget): null

2019-10-04 16:16:09 - [TEST_STEP][PASSED] - click(cst): Object: 'select_target' is clicked on

2019-10-04 16:16:09 - [MESSAGE][PASSED] - Object: 'select_target' is clicked on

2019-10-04 16:16:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 16:16:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-10-04 16:16:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 16:16:10 - [MESSAGE][PASSED] - Text ' 11/01/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-10-04 16:16:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 16:16:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-10-04 16:16:10 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-10-04 16:16:20 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-10-04 16:16:20 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-10-04 16:16:20 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-10-04 16:16:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/setTimezone' successfully

2019-10-04 16:16:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TestCaseUtilities/backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 16:16:21 - [TEST_CASE][PASSED] - Test Cases/TestCaseUtilities/backOfficeLogin: Test Cases/TestCaseUtilities/backOfficeLogin

2019-10-04 16:16:21 - [TEST_STEP][PASSED] - BOURL = findTestData("envtData").getValue("BOURL", 1): null

2019-10-04 16:16:21 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-10-04 16:16:21 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-10-04 16:16:21 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-10-04 16:16:21 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-10-04 16:16:22 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-10-04 16:16:22 - [MESSAGE][INFO] - User set preference: ['args', '[--use-fake-ui-for-media-stream, --start-maximized]']

2019-10-04 16:16:25 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-10-04 16:16:25 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test4ca.cliotest.com/backoffice/control/main' successfully

2019-10-04 16:16:32 - [MESSAGE][PASSED] - Navigate to 'https://test4ca.cliotest.com/backoffice/control/main' successfully

2019-10-04 16:16:32 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 16:16:33 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-10-04 16:16:33 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 16:16:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text 'ca1402' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 16:16:34 - [MESSAGE][PASSED] - Text 'ca1402' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-10-04 16:16:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 16:16:34 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-10-04 16:16:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 16:16:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-10-04 16:16:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 16:16:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 16:16:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TestCaseUtilities/backOfficeLogin' successfully

2019-10-04 16:16:47 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-04 16:16:47 - [TEST_STEP][PASSED] - executor = driver: null

2019-10-04 16:16:47 - [TEST_STEP][PASSED] - AshowOrders = findWebElement(findTestObject("Page_cabi Home/a_retail_purchases"), 30): null

2019-10-04 16:16:47 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(AshowOrders)): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:16:52 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:16:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 16:16:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 16:16:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/existingCustomer")): Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-04 16:16:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/existingCustomer' is clicked on

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - contactNumber = 1: null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - firstName = findTestData("contactData").getValue("firstName", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - lastName = findTestData("contactData").getValue("lastName", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - email = findTestData("contactData").getValue("email", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - address1 = findTestData("contactData").getValue("address1", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - city = findTestData("contactData").getValue("city", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - state = findTestData("contactData").getValue("state", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - zip = findTestData("contactData").getValue("zip", contactNumber): null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - existingCustFName = firstName: null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - existingCustLName = lastName: null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - space = " ": null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - existingCust = $existingCustFName$space$existingCustLName: null

2019-10-04 16:16:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), existingCust): Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:16:57 - [MESSAGE][PASSED] - Text 'ahostess-test1 abc' is set on object 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:16:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:16:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:16:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ARROW_DOWN)): Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:16:59 - [MESSAGE][PASSED] - Keys 'DOWN + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:16:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Home/input_existing_guest"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:17:00 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Home/input_existing_guest'

2019-10-04 16:17:00 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:05 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:05 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address"), 5)): null

2019-10-04 16:17:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_same_shipping_address")): Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-04 16:17:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_same_shipping_address' is clicked on

2019-10-04 16:17:05 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:10 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:10 - [TEST_STEP][PASSED] - println(executor.executeScript("return arguments[0].value;", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5))): null

2019-10-04 16:17:10 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", findWebElement(findTestObject("Page_cabi Retail Store/span_next_1"), 5)): null

2019-10-04 16:17:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Retail Store/span_next_1")): Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-04 16:17:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_next_1' is clicked on

2019-10-04 16:17:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-10-04 16:17:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-10-04 16:17:13 - [TEST_STEP][PASSED] - callTestCase(findTestCase("NewArrival/productVerify"), ["available":BORetail, "storeType":"BORetail"], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/NewArrival/productVerify' successfully

2019-10-04 16:17:13 - [TEST_CASE][PASSED] - Test Cases/NewArrival/productVerify: Test Cases/NewArrival/productVerify

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - sa = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - styleid_data = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - by = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - styleWe = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - to = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-10-04 16:17:14 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-10-04 16:17:15 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:20 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3843' is set on object ''

2019-10-04 16:17:20 - [MESSAGE][PASSED] - Text '3843' is set on object ''

2019-10-04 16:17:20 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:17:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:17:21 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:26 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:26 - [MESSAGE][PASSED] - Text '3843' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:26 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:17:26 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:17:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:17:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:17:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:17:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:17:32 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:17:33 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3843 image.png]]

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:17:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-04 16:17:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:17:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 16:17:34 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:17:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:17:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:17:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:17:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:17:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:17:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:17:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:17:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-04 16:17:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Do not steam or iron faux fur.'

2019-10-04 16:17:36 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:17:37 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:42 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3846' is set on object ''

2019-10-04 16:17:42 - [MESSAGE][PASSED] - Text '3846' is set on object ''

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:17:42 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:17:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:47 - [MESSAGE][PASSED] - Text '3846' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:47 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:48 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:17:48 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:17:48 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:17:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:17:48 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:17:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:17:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:17:49 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:17:54 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:17:54 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:17:54 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:17:54 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:17:55 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3846 image.png]]

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:17:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $179.00'

2019-10-04 16:17:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $179.00'

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '179' and expected text '179' are matched  using regular expression

2019-10-04 16:17:55 - [MESSAGE][PASSED] - Actual text '179' and expected text '179' are matched  using regular expression

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:17:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("Long")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("5")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("XS/S")): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange5, sizeRangeSplit): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println("XS/S"): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:17:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:17:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:17:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:17:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:17:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:17:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:17:58 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-04 16:17:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Dry clean for best results. Can be machine washed in a mesh bag in cold water on the delicate cycle. Only non-chlorine bleach. Lay flat to dry. Steam iron only if needed.'

2019-10-04 16:17:58 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:17:58 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:03 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3850' is set on object ''

2019-10-04 16:18:03 - [MESSAGE][PASSED] - Text '3850' is set on object ''

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:03 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:03 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:08 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:09 - [MESSAGE][PASSED] - Text '3850' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:09 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:09 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:09 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:09 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:18:09 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:18:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:10 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:15 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:15 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:18:15 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:18:15 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:18:16 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3850 image.png]]

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $209.00'

2019-10-04 16:18:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $209.00'

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '209' and expected text '209' are matched  using regular expression

2019-10-04 16:18:16 - [MESSAGE][PASSED] - Actual text '209' and expected text '209' are matched  using regular expression

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:18:16 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:18:18 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:18:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:18:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:18:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:18:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:18:18 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-04 16:18:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water, on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-04 16:18:19 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:18:19 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:24 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3857' is set on object ''

2019-10-04 16:18:24 - [MESSAGE][PASSED] - Text '3857' is set on object ''

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:24 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:29 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:29 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:29 - [MESSAGE][PASSED] - Text '3857' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:29 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:30 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:30 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:18:30 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:18:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:36 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:18:36 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:18:36 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:18:36 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3857 image.png]]

2019-10-04 16:18:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $104.00'

2019-10-04 16:18:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $104.00'

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '104' and expected text '104' are matched  using regular expression

2019-10-04 16:18:37 - [MESSAGE][PASSED] - Actual text '104' and expected text '104' are matched  using regular expression

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:18:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:18:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:18:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:18:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:18:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:18:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:18:39 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-04 16:18:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-04 16:18:40 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:18:40 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:45 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3861' is set on object ''

2019-10-04 16:18:45 - [MESSAGE][PASSED] - Text '3861' is set on object ''

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:45 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:18:45 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:50 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:50 - [MESSAGE][PASSED] - Text '3861' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:50 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:51 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:18:51 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:51 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:18:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:18:51 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:18:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:18:52 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:18:57 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:18:57 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:18:57 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:18:57 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:18:57 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3861 image.png]]

2019-10-04 16:18:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:18:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-04 16:18:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 16:18:58 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:18:58 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:19:00 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:19:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:00 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:19:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:19:01 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:19:01 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:06 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3863' is set on object ''

2019-10-04 16:19:06 - [MESSAGE][PASSED] - Text '3863' is set on object ''

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:06 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:06 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:11 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:12 - [MESSAGE][PASSED] - Text '3863' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:12 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:12 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:19:12 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:19:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:13 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:18 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:18 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:19:18 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:19:18 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:19:18 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3863 image.png]]

2019-10-04 16:19:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:19:19 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $104.00'

2019-10-04 16:19:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $104.00'

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '104' and expected text '104' are matched  using regular expression

2019-10-04 16:19:19 - [MESSAGE][PASSED] - Actual text '104' and expected text '104' are matched  using regular expression

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:19:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:19:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:19:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:19:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:21 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:19:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:19:21 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:19:22 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:27 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3864' is set on object ''

2019-10-04 16:19:27 - [MESSAGE][PASSED] - Text '3864' is set on object ''

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:27 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:32 - [MESSAGE][PASSED] - Text '3864' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:32 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:32 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:32 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:33 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:19:33 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:19:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:34 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:39 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:19:39 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3864 image.png]]

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:19:39 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:19:39 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-04 16:19:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $99.00'

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 16:19:40 - [MESSAGE][PASSED] - Actual text '99' and expected text '99' are matched  using regular expression

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:19:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:19:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:19:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:19:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:19:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:19:42 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-04 16:19:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Cool iron on the reverse side if needed. Can be dry cleaned.'

2019-10-04 16:19:42 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:19:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:19:47 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3865' is set on object ''

2019-10-04 16:19:48 - [MESSAGE][PASSED] - Text '3865' is set on object ''

2019-10-04 16:19:48 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:48 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:19:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:19:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:53 - [MESSAGE][PASSED] - Text '3865' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:53 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:19:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:19:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:20:00 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3865 image.png]]

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:20:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-04 16:20:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $109.00'

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 16:20:01 - [MESSAGE][PASSED] - Actual text '109' and expected text '109' are matched  using regular expression

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:20:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:20:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:20:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:03 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:20:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash with like colors in cold water on the delicate cycle. Only non-chlorine bleach if needed. Lay flat to dry. Warm iron if needed.'

2019-10-04 16:20:03 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:20:03 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:08 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:20:08 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3869' is set on object ''

2019-10-04 16:20:09 - [MESSAGE][PASSED] - Text '3869' is set on object ''

2019-10-04 16:20:09 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:09 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:09 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:14 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:14 - [MESSAGE][PASSED] - Text '3869' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:14 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:20:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:20:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3869 image.png]]

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $114.00'

2019-10-04 16:20:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $114.00'

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '114' and expected text '114' are matched  using regular expression

2019-10-04 16:20:21 - [MESSAGE][PASSED] - Actual text '114' and expected text '114' are matched  using regular expression

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:20:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:20:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:20:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:20:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-04 16:20:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-10-04 16:20:24 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:20:24 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:29 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3870' is set on object ''

2019-10-04 16:20:29 - [MESSAGE][PASSED] - Text '3870' is set on object ''

2019-10-04 16:20:29 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:30 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:35 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:35 - [MESSAGE][PASSED] - Text '3870' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:35 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:35 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:20:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:41 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:20:41 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:20:41 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:20:42 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3870 image.png]]

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-04 16:20:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $139.00'

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 16:20:42 - [MESSAGE][PASSED] - Actual text '139' and expected text '139' are matched  using regular expression

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:20:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:20:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:20:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:20:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:20:45 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-04 16:20:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-10-04 16:20:45 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:20:45 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:50 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3871' is set on object ''

2019-10-04 16:20:50 - [MESSAGE][PASSED] - Text '3871' is set on object ''

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:20:50 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:20:55 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:20:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:56 - [MESSAGE][PASSED] - Text '3871' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:56 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:56 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:20:56 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:56 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:20:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:20:56 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:20:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:20:57 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:21:02 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:21:02 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:21:02 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:21:02 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:21:03 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3871 image.png]]

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:21:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $149.00'

2019-10-04 16:21:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $149.00'

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '149' and expected text '149' are matched  using regular expression

2019-10-04 16:21:03 - [MESSAGE][PASSED] - Actual text '149' and expected text '149' are matched  using regular expression

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:21:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:21:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:21:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:21:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:21:05 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:21:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:21:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:21:06 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-04 16:21:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be washed by hand.'

2019-10-04 16:21:06 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:21:06 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:21:11 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - sa = new org.testng.asserts.SoftAssert(): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - println("******************+++++++++++++++++++**********************************************"): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - println(styleid_data): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - by = By.xpath("//input[@name='style']"): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - styleWe = UtilityMethods.getElementByLocator(by, driver): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - to = UtilityMethods.fromElement(styleWe): null

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - setText(to, styleid_data): Text '3875' is set on object ''

2019-10-04 16:21:11 - [MESSAGE][PASSED] - Text '3875' is set on object ''

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - sendKeys(to, Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: ''

2019-10-04 16:21:11 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: ''

2019-10-04 16:21:11 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:21:16 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:21:16 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:21:16 - [MESSAGE][PASSED] - Text '3875' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:21:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:21:17 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-10-04 16:21:17 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].click()", Arrays.asList(findWebElement(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), 30))): Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:21:17 - [MESSAGE][PASSED] - Execute JavaScript 'arguments[0].click()' successfully

2019-10-04 16:21:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-10-04 16:21:17 - [TEST_STEP][PASSED] - else: null

2019-10-04 16:21:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:21:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-10-04 16:21:38 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-10-04 16:21:43 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, styleid_data): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - println(imagePath): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-10-04 16:21:43 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\KatalonProjects\\productImages\\BORetail_3875 image.png]]

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), styleid_data, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:21:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - break: null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - sa.assertTrue(colourVerified): null

2019-10-04 16:21:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $199.00'

2019-10-04 16:21:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $199.00'

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true, CONTINUE_ON_FAILURE): Actual text '199' and expected text '199' are matched  using regular expression

2019-10-04 16:21:44 - [MESSAGE][PASSED] - Actual text '199' and expected text '199' are matched  using regular expression

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRange5 = ["XS/S", "M/L"]: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:21:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - sa.assertTrue(UtilityMethods.listEquals(expectedRange, actualRange)): null

2019-10-04 16:21:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-10-04 16:21:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-10-04 16:21:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:21:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-10-04 16:21:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row), CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:21:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-10-04 16:21:46 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-04 16:21:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Do not press with flat iron. Can be dry cleaned.'

2019-10-04 16:21:46 - [TEST_STEP][PASSED] - sa.assertTrue(actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row))): null

2019-10-04 16:21:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/NewArrival/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-10-04 16:15:47 - [TEST_SUITE][PASSED] - NewArrivalsSuite1: Test Cases/NA_Timezone_Separated/BORetail3]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
