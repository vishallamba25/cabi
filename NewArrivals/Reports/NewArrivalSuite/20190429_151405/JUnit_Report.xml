<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalSuite" time="589" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalSuite" tests="1" failures="0" errors="0" time="589" timestamp="2019-04-29 15:14:09" hostname="user - 10.0.102.159" id="Test Suites/NewArrivalSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\TestAutomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190429_151405"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\TestAutomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190429_151405\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="user - 10.0.102.159"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 73.0.3683.103"/>
         <property name="hostAddress" value="10.0.102.159"/>
         <property name="sessionId" value="3115b6c818c174e9ff6861e0671570ad"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrivals" classname="Test Cases/NewArrivals" status="PASSED">
         <system-out><![CDATA[2019-04-29 15:14:09 - [TEST_CASE][PASSED] - Test Cases/NewArrivals: Test Cases/NewArrivals

2019-04-29 15:14:09 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-04-29 15:14:09 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-04-29 15:14:09 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-04-29 15:14:10 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-04-29 15:14:10 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-04-29 15:14:10 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-04-29 15:14:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-04-29 15:14:14 - [TEST_STEP][PASSED] - navigateToUrl("https://test14.cliotest.com/backoffice/control/main"): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:14:21 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:14:21 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:14:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:14:22 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-29 15:14:23 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-29 15:14:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:14:24 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-29 15:14:24 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-29 15:14:24 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-29 15:14:24 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-29 15:14:24 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-29 15:14:24 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:14:26 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:14:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:14:26 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:14:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:14:26 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:14:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:14:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:14:29 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:14:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:14:29 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:14:31 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:14:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:14:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:14:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:14:31 - [MESSAGE][PASSED] - Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:14:31 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:14:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:14:32 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-29 15:14:42 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-29 15:14:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:14:42 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:14:44 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:14:44 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-29 15:14:45 - [MESSAGE][PASSED] - Current window maximized

2019-04-29 15:14:45 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:14:50 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:14:50 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:14:50 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:14:50 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:14:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:14:51 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:14:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:15:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:15:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:15:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:15:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Personal Purchases")): Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:15:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:15:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:15:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:15:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:15:06 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-29 15:15:07 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-29 15:15:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:07 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:15:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:15:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:15:12 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:15:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:15:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:15:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:15:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:15:23 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:15:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:15:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:15:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:15:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:15:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:15:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:27 - [MESSAGE][PASSED] - Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:15:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:15:32 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:32 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:15:32 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:15:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:15:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:15:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:15:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:15:44 - [MESSAGE][PASSED] - Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:15:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:15:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:15:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:15:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:15:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:15:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:15:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:15:47 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:15:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:15:47 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:15:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:48 - [MESSAGE][PASSED] - Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:15:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:15:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:15:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:15:53 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:15:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:15:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:16:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:16:04 - [MESSAGE][PASSED] - Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:16:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:16:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:08 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:16:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:16:08 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:16:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:08 - [MESSAGE][PASSED] - Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:08 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:16:13 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:16:13 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:13 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:16:13 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:16:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:16:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:16:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:22 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:16:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:16:25 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:16:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange2, sizeRangeSplit): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println("00"): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:16:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:28 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:28 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:16:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:28 - [MESSAGE][PASSED] - Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:28 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:16:33 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:16:33 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:33 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:16:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:16:33 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:16:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:16:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:16:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:16:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:16:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:16:46 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:16:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:16:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:16:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:16:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:16:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:16:49 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:16:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:16:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:16:50 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-29 15:16:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:16:50 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-29 15:16:50 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-29 15:16:50 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-29 15:16:50 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-29 15:16:50 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-29 15:16:50 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:16:52 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:16:52 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:16:52 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:16:52 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:16:52 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:16:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:16:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:16:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:16:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:16:54 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:16:56 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:16:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:16:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:16:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:16:56 - [MESSAGE][PASSED] - Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:16:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:16:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:16:57 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-29 15:17:07 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-29 15:17:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:17:07 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:17:09 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:17:09 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-29 15:17:09 - [MESSAGE][PASSED] - Current window maximized

2019-04-29 15:17:09 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:17:14 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:17:14 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:17:14 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:17:14 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:17:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:17:14 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:17:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:17:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:17:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:17:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:17:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:17:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:17:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Personal Purchases")): Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:17:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:17:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:17:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:17:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:17:24 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-29 15:17:24 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-29 15:17:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:25 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:25 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:17:30 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:17:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:17:30 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:17:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:17:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:17:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:17:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:17:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:17:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:17:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:17:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:17:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:17:43 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:17:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:17:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:17:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:17:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:17:46 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:17:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:46 - [MESSAGE][PASSED] - Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:46 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:17:51 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:17:51 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:52 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:17:52 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:17:52 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:17:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:17:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:17:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:18:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:18:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:18:04 - [MESSAGE][PASSED] - Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:18:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:18:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:18:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:07 - [MESSAGE][PASSED] - Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:18:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:18:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:18:12 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:18:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:18:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:18:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:18:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:18:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:18:24 - [MESSAGE][PASSED] - Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:18:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:18:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:18:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:27 - [MESSAGE][PASSED] - Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:18:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:18:32 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:32 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:32 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:18:32 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:18:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:18:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:18:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:42 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:18:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:18:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:18:45 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:18:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange2, sizeRangeSplit): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println("00"): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:18:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:18:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:18:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:48 - [MESSAGE][PASSED] - Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:18:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:18:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:18:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:18:53 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:18:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:19:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:19:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:19:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:19:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:19:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:19:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:19:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:19:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:19:06 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:19:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:19:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:19:09 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-29 15:19:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:19:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:19:10 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-29 15:19:10 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-29 15:19:10 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-29 15:19:10 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-29 15:19:10 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-29 15:19:10 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:19:11 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:19:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:19:11 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:19:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:19:11 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:19:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:19:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:19:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:19:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:19:13 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:19:15 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:19:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:19:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:19:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:19:15 - [MESSAGE][PASSED] - Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:19:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:19:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:19:15 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-29 15:19:25 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-29 15:19:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:19:25 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:19:28 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:19:28 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-29 15:19:28 - [MESSAGE][PASSED] - Current window maximized

2019-04-29 15:19:28 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:19:33 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:19:33 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:19:33 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:19:33 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:19:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:19:33 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:19:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:19:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:19:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:19:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:19:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:19:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:19:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Personal Purchases")): Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:19:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:19:48 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:19:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:19:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:19:49 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-29 15:19:49 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-29 15:19:49 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:19:50 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:19:50 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:19:55 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:19:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:19:55 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:19:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:19:55 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:19:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:04 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:04 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:20:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:20:07 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:20:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:20:07 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:20:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:20:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:11 - [MESSAGE][PASSED] - Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:11 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:20:16 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:20:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:16 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:20:16 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:20:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:22 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:25 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:25 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:20:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:20:28 - [MESSAGE][PASSED] - Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:20:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:20:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:31 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:20:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:20:31 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:20:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:32 - [MESSAGE][PASSED] - Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:32 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:20:37 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:20:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:20:37 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:20:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:20:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:20:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:20:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:20:48 - [MESSAGE][PASSED] - Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:20:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:20:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:20:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:20:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:51 - [MESSAGE][PASSED] - Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:51 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:20:56 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:20:56 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:56 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:20:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:20:56 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:20:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:21:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:21:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:21:05 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:21:05 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:08 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:21:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:21:08 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:21:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:08 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange2, sizeRangeSplit): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - println("00"): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:21:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:21:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:21:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:21:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:21:12 - [MESSAGE][PASSED] - Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:21:12 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:21:17 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:21:17 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:21:17 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:21:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:21:17 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:21:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:21:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:21:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:21:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:21:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:21:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:21:29 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:21:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:21:29 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:21:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:21:33 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-29 15:21:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:21:33 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-29 15:21:33 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-29 15:21:33 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-29 15:21:33 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-29 15:21:33 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-29 15:21:33 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:21:35 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-29 15:21:35 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:21:35 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-29 15:21:35 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:21:35 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-29 15:21:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:21:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-29 15:21:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:21:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-29 15:21:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:21:39 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-29 15:21:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:21:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-29 15:21:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:21:39 - [MESSAGE][PASSED] - Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-29 15:21:39 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:21:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-29 15:21:40 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-29 15:21:50 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-29 15:21:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-29 15:21:50 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:21:52 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-29 15:21:52 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-29 15:21:52 - [MESSAGE][PASSED] - Current window maximized

2019-04-29 15:21:52 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:21:57 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-29 15:21:57 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:21:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:21:57 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-29 15:21:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:21:58 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-29 15:21:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:22:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-29 15:22:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:22:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-29 15:22:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Personal Purchases")): Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:22:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Personal Purchases' is clicked on

2019-04-29 15:22:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:22:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-29 15:22:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-29 15:22:12 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-29 15:22:12 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-29 15:22:12 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:13 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:13 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:22:18 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:22:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:18 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:22:18 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:22:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:22:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:22:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:28 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:22:28 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:22:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:22:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:22:31 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:22:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:22:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:22:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:22:34 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:22:34 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:22:34 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:22:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-29 15:22:34 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:22:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:35 - [MESSAGE][PASSED] - Text '5558' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:22:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:22:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:40 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:22:40 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:22:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:22:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:22:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:22:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:22:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:22:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $66.00'

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:22:52 - [MESSAGE][PASSED] - Actual text '66' and expected text '66' are matched  using regular expression

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:22:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:22:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:22:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:22:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:22:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:22:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:55 - [MESSAGE][PASSED] - Text '5559' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:22:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:23:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:23:00 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:00 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:23:00 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:23:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:23:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $59.00'

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:23:12 - [MESSAGE][PASSED] - Actual text '59' and expected text '59' are matched  using regular expression

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:23:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'N/A'

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - assert sizeType.equalsIgnoreCase("N/A") || sizeType.equalsIgnoreCase(sizeRangeSplit[0]): null

2019-04-29 15:23:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:15 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:23:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam iron only if needed. Can be dry cleaned.'

2019-04-29 15:23:15 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:23:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:16 - [MESSAGE][PASSED] - Text '5595' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:23:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:23:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:23:21 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:23:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:30 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:30 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:23:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:23:33 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:23:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - else if (toString().equalsIgnoreCase("00") || toString().equalsIgnoreCase("0")): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange2, sizeRangeSplit): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println("00"): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:23:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:36 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:36 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:23:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Machine wash separately, inside out, in cold water on the delicate cycle. Do not bleach. Tumble dry low, remove promptly. Warm iron if needed.'

2019-04-29 15:23:36 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:23:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:37 - [MESSAGE][PASSED] - Text '5590' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:37 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-29 15:23:42 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-29 15:23:42 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:42 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-29 15:23:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-29 15:23:42 - [TEST_STEP][PASSED] - else: null

2019-04-29 15:23:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-29 15:23:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-29 15:23:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - break: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:23:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $89.00'

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:23:54 - [MESSAGE][PASSED] - Actual text '89' and expected text '89' are matched  using regular expression

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:23:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-29 15:23:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-29 15:23:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-29 15:23:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-29 15:23:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-29 15:23:58 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:23:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Wash by hand separately with cold water. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Steam press back to shape. Can be dry cleaned.'

2019-04-29 15:23:58 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-29 15:23:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-04-29 15:14:09 - [TEST_SUITE][PASSED] - NewArrivalSuite: Test Cases/NewArrivals]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
