<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalSuite" time="442" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalSuite" tests="1" failures="0" errors="0" time="442" timestamp="2019-04-30 13:34:22" hostname="user - 10.0.102.159" id="Test Suites/NewArrivalSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\TestAutomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190430_133419"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\TestAutomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190430_133419\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="user - 10.0.102.159"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 73.0.3683.103"/>
         <property name="hostAddress" value="10.0.102.159"/>
         <property name="sessionId" value="c8ddfa6e68f02249ac79bc89a7b411a2"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrivals" classname="Test Cases/NewArrivals" status="PASSED">
         <system-out><![CDATA[2019-04-30 13:34:22 - [TEST_CASE][PASSED] - Test Cases/NewArrivals: Test Cases/NewArrivals

2019-04-30 13:34:22 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-04-30 13:34:22 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-04-30 13:34:22 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-04-30 13:34:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-04-30 13:34:23 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-04-30 13:34:23 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-04-30 13:34:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-04-30 13:34:26 - [TEST_STEP][PASSED] - navigateToUrl("https://test14.cliotest.com/backoffice/control/main"): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:34:34 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:34:34 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:34:35 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-30 13:34:35 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-30 13:34:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:34:36 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-30 13:34:36 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-30 13:34:36 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-30 13:34:36 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-30 13:34:36 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-30 13:34:36 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:34:38 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:34:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:34:38 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:34:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:34:38 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:34:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:34:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:34:41 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:34:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:34:41 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:34:43 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:34:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:34:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:34:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:34:43 - [MESSAGE][PASSED] - Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:34:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:34:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:34:44 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-30 13:34:54 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-30 13:34:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:34:54 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:34:56 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:34:56 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-30 13:34:57 - [MESSAGE][PASSED] - Current window maximized

2019-04-30 13:34:57 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:35:02 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:35:02 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:35:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:35:03 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:35:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:35:03 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:35:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:35:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:35:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:35:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:35:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:35:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:35:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:35:17 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:35:17 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:35:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:18 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:18 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:35:23 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:35:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:23 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:35:23 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:35:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:35:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:35:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:35:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:35:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:35:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:35:34 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:35:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:35:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:35:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:35:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:35:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:35:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:35:46 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:35:46 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:35:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:48 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:35:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:35:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:35:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:35:53 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-04-30 13:35:54 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-04-30 13:35:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:35:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:35:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:35:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:35:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:35:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:35:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:36:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:36:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:36:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:36:01 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:36:01 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:36:01 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:36:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:02 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:02 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:36:07 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:36:07 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:08 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:36:08 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:36:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:36:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:36:09 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-30 13:36:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:36:09 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-30 13:36:09 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-30 13:36:09 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-30 13:36:09 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-30 13:36:09 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-30 13:36:09 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:36:11 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:36:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:36:11 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:36:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:36:11 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:36:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:36:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:36:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:36:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:36:13 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:36:15 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:36:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:36:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:36:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:36:15 - [MESSAGE][PASSED] - Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:36:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:36:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:36:15 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-30 13:36:25 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-30 13:36:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:36:25 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:36:28 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:36:28 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-30 13:36:28 - [MESSAGE][PASSED] - Current window maximized

2019-04-30 13:36:28 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:36:33 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:36:33 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:36:33 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:36:33 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:36:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:36:33 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:36:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:36:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:36:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:36:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:36:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:36:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:36:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:36:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:36:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:36:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:36:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:36:45 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:36:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:36:45 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:45 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:45 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:36:50 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:36:50 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:36:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:36:50 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:36:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:36:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:36:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:37:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:37:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:37:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:37:03 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:37:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:37:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:06 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:37:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:37:07 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:37:07 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:37:07 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:37:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:37:07 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:37:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:37:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:37:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:37:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:37:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:37:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:37:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:37:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:37:15 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:37:15 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:37:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:17 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:17 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:37:22 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:37:22 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:22 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:37:22 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:37:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:37:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:37:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:31 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:37:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:37:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:37:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:37:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:37:35 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:37:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:37:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:37:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:37:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:37:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:37:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:37:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:37:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:37:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:37:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:37:47 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:37:47 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:37:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:48 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:48 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:37:53 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:37:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:54 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:37:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:37:54 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:37:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:37:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:37:56 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-30 13:37:56 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-30 13:37:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:37:57 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-30 13:37:57 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-30 13:37:57 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-30 13:37:57 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-30 13:37:57 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-30 13:37:57 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:37:59 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:37:59 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:37:59 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:37:59 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:37:59 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:37:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:38:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:38:01 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:38:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:38:01 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:38:03 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:38:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:38:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:38:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:38:04 - [MESSAGE][PASSED] - Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:38:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:38:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:38:04 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-30 13:38:14 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-30 13:38:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:38:14 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:38:16 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:38:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-30 13:38:17 - [MESSAGE][PASSED] - Current window maximized

2019-04-30 13:38:17 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:38:22 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:38:22 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:38:22 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:38:22 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:38:22 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:38:22 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:38:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:38:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:38:29 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:38:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:38:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:38:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:38:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:38:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:38:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:38:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:38:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:38:35 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:38:35 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:38:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:38:36 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:38:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:38:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:38:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:38:41 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:38:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:38:41 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:38:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:38:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:38:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:38:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:38:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:38:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:38:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:38:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:38:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:38:54 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:38:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:38:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:38:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:38:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:38:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:38:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:38:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:38:57 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:38:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:38:57 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:38:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:38:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:38:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:38:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:39:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:39:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:39:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:39:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:39:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:39:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:39:07 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:39:07 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:39:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:08 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:08 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:39:13 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:39:13 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:14 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:39:14 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:39:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:39:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:39:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:39:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:39:19 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:39:19 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:39:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:39:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:39:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:39:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:39:23 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:39:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:39:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:39:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:39:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:39:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:39:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:39:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:39:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:39:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:39:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:39:35 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:39:35 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:39:35 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:37 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:37 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:39:42 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:39:42 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:42 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:39:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:39:42 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:39:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:39:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:39:45 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-04-30 13:39:45 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-04-30 13:39:46 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-04-30 13:39:46 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-04-30 13:39:46 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-04-30 13:39:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-04-30 13:39:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:39:46 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-04-30 13:39:46 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-04-30 13:39:46 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-04-30 13:39:46 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-04-30 13:39:46 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-04-30 13:39:46 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:39:47 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-04-30 13:39:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:39:48 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-04-30 13:39:48 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:39:48 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-04-30 13:39:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:39:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-04-30 13:39:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:39:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-04-30 13:39:50 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:39:52 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-04-30 13:39:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:39:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-04-30 13:39:52 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:39:53 - [MESSAGE][PASSED] - Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-04-30 13:39:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:39:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-04-30 13:39:53 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-04-30 13:40:03 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-04-30 13:40:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-04-30 13:40:03 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:40:06 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-04-30 13:40:06 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-04-30 13:40:06 - [MESSAGE][PASSED] - Current window maximized

2019-04-30 13:40:06 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:40:11 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-04-30 13:40:11 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:40:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:40:11 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-04-30 13:40:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:40:11 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-04-30 13:40:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:40:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-04-30 13:40:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:40:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:40:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:40:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:40:24 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:40:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-04-30 13:40:29 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:40:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-04-30 13:40:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:40:29 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:40:29 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:40:29 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:40:30 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:40:30 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:40:35 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:40:35 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:40:35 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:40:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:40:35 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:40:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:40:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:40:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:40:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:40:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:40:43 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:40:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:40:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:40:46 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:40:46 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:40:46 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:40:46 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:40:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:40:47 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:40:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:40:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:40:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:40:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:40:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:40:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:41:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-04-30 13:41:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:41:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-04-30 13:41:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:41:00 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:41:00 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-04-30 13:41:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:02 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:02 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:41:07 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:41:07 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:08 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-04-30 13:41:08 - [TEST_STEP][PASSED] - else: null

2019-04-30 13:41:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_5618 Breeze Dress")): Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:41:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_5618 Breeze Dress' is clicked on

2019-04-30 13:41:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:41:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:41:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:41:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-04-30 13:41:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:41:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - break: null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:41:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-04-30 13:41:20 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:41:21 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:41:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - println("XS"): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-04-30 13:41:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:41:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-04-30 13:41:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-04-30 13:41:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-04-30 13:41:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:41:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-04-30 13:41:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:41:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-04-30 13:41:34 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-04-30 13:41:34 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-04-30 13:41:34 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:41:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:35 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-04-30 13:41:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-04-30 13:41:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:40 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-04-30 13:41:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:41:40 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-04-30 13:41:44 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-04-30 13:41:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:41:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-04-30 13:41:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-04-30 13:34:22 - [TEST_SUITE][PASSED] - NewArrivalSuite: Test Cases/NewArrivals]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
