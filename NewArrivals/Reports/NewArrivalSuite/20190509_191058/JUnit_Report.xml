<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalSuite" time="1156" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalSuite" tests="1" failures="0" errors="0" time="1156" timestamp="2019-05-09 19:11:02" hostname="user - 10.0.102.159" id="Test Suites/NewArrivalSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190509_191058"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190509_191058\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png"/>
         <property name="hostName" value="user - 10.0.102.159"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 74.0.3729.131"/>
         <property name="hostAddress" value="10.0.102.159"/>
         <property name="sessionId" value="c25d2d3091412f3abe81a4b6f006b837"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrivals" classname="Test Cases/NewArrivals" status="PASSED">
         <system-out><![CDATA[2019-05-09 19:11:02 - [TEST_CASE][PASSED] - Test Cases/NewArrivals: Test Cases/NewArrivals

2019-05-09 19:11:03 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-05-09 19:11:03 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-05-09 19:11:03 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-05-09 19:11:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:11:03 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:11:03 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-05-09 19:11:07 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:11:07 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:11:08 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:11:08 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:11:08 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:11:08 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:11:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:11:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:11:09 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:11:10 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:11:10 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:11:10 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:11:10 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:11:10 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:11:11 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:11:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:11:12 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:11:12 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:11:12 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:11:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:11:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:11:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:11:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:11:15 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:11:16 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:11:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:11:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:11:16 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:11:16 - [MESSAGE][PASSED] - Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:11:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:11:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:11:17 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:11:27 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:11:27 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:11:28 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:11:28 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:11:28 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:11:28 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:11:30 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:11:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:11:30 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:11:30 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:11:30 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:11:30 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:11:30 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:11:41 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:11:41 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:11:42 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:11:42 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:11:47 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:11:47 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:11:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:11:47 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:11:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:11:47 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:11:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:11:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:11:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:12:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:12:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:12:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:12:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:12:07 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:12:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:12:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:12:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:12:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:10 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:12:10 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:12:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:11 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:11 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:11 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:11 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:12:16 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:12:16 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:12:16 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:12:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:12:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:12:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:12:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:12:21 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:12:21 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:12:21 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:12:21 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:12:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:12:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:12:22 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:12:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:12:22 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:12:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:12:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:12:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:12:27 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:12:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:12:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:12:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:12:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:12:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:12:33 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:33 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:12:33 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:35 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:35 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:35 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:12:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:12:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:12:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:12:43 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:12:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:12:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:12:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:12:48 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:12:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:12:48 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:48 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:12:48 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:48 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:49 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:50 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:12:50 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:12:55 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:12:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:12:55 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:12:55 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:12:55 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:12:56 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:12:58 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:12:58 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:12:59 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:12:59 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:12:59 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:13:09 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:13:09 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:13:09 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:13:09 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:13:14 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:13:14 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:13:14 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:13:14 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:13:14 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:13:14 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:13:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:17 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:13:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:13:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:13:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:33 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:13:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:13:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:13:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:13:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:13:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:13:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:13:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:13:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:13:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:13:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:45 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:13:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:13:45 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:13:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:13:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:13:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:13:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:13:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:13:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:13:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:13:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:13:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:13:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:13:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:13:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:13:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:13:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:14:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:14:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:14:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:14:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:05 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:14:05 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:14:05 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:14:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:07 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:14:07 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:14:07 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:09 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:09 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-05-09 19:14:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-05-09 19:14:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:14:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:14:10 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:14:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:14:10 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:14:10 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase("No matching result found"): null

2019-05-09 19:14:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:14:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:14:11 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:14:11 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:14:11 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:14:11 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:14:11 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:14:11 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:14:12 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:14:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:14:14 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:14:21 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:14:21 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:14:22 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:14:22 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:14:27 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:14:27 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:14:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:14:27 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:14:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:14:27 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:14:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:14:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:14:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:14:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:14:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:14:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:14:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:14:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:14:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:14:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:14:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:14:43 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:14:46 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:14:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:14:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:14:47 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:14:47 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:14:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:14:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:14:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:14:52 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:14:52 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:14:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:14:54 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:14:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:14:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:14:56 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:14:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:14:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:14:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:14:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:14:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:14:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:14:58 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:14:58 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:01 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:15:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:04 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:15:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:15:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:15:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:15:09 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:15:09 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:15:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:15:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:15:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:15:11 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:15:11 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:15:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:15:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:15:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:15:13 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:15:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:15:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:15:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:15:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:15:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:15:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:15:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:15:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:15:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:15:17 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:15:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:15:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:23 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:15:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:15:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:15:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:15:28 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:15:28 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:15:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:15:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:15:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:15:32 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:15:32 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:15:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:15:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:15:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:15:34 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:15:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:15:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:15:36 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:15:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:15:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:15:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:15:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:15:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:15:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:15:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:15:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:15:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:43 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:15:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:15:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:15:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:15:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:15:47 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:15:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:15:47 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:15:47 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:15:47 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:15:47 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:15:47 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:15:47 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:15:49 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:15:49 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:15:49 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:15:49 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:15:49 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:15:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:15:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:15:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:15:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:15:52 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:15:53 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:15:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:15:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:15:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:15:53 - [MESSAGE][PASSED] - Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:15:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:15:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:15:54 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:16:04 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:16:04 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:16:04 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:16:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:16:04 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:16:04 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:16:07 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:16:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:16:07 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:16:07 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:16:07 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:16:07 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:16:07 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:16:18 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:16:18 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:16:19 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:16:19 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:16:24 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:16:24 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:16:24 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:16:24 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:16:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:16:25 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:16:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:16:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:16:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:16:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:16:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:16:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:16:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:16:40 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:16:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:16:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:16:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:16:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:16:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:16:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:16:43 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:16:43 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:16:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:16:44 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:16:44 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:16:44 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:16:44 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:16:49 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:16:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:16:49 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:16:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:16:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:16:49 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:16:54 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:16:54 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:16:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:16:54 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:16:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:16:55 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:16:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:16:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:16:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:16:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:17:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:17:00 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:17:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:17:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:17:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:17:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:17:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:17:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:17:06 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:17:06 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:17:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:07 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:07 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:07 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:17:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:17:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:17:12 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:17:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:17:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:17:13 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:17:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:17:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:17:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:17:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:17:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:17:20 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:17:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:17:20 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:17:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:17:21 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:17:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:17:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:17:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:17:21 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:17:24 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:17:24 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:17:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:17:24 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:17:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:17:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:17:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:17:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:17:29 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:17:29 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:17:29 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:30 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:30 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:17:30 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:17:35 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:17:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:17:35 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:17:35 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:17:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:17:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:17:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:17:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:17:36 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:17:36 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:17:36 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:17:36 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:17:38 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:17:38 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:17:40 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:17:40 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:17:40 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:17:48 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:17:48 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:17:48 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:17:48 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:17:54 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:17:54 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:17:54 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:17:54 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:17:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:17:54 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:17:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:17:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:17:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:18:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:18:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:18:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:13 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:18:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:18:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:18:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:18:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:18:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:18:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:18:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:18:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:18:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:18:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:18:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:18:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:18:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:18:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:18:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:18:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:18:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:18:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:18:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:18:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:18:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:18:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:18:39 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:18:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:18:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:18:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:18:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:18:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:18:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:18:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:18:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:18:45 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:18:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:18:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:18:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:18:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:18:48 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:18:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:18:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:18:50 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:18:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:18:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:18:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:18:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:18:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:18:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:18:51 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:18:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:18:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:18:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:18:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:18:57 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:18:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:18:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:19:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:19:00 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:19:00 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:19:00 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:19:00 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:19:00 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:19:00 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:19:01 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:19:03 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:19:03 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:19:11 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:19:11 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:19:12 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:19:12 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:19:17 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:19:17 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:19:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:19:17 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:19:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:19:17 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:19:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:19:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:19:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:19:29 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:32 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:32 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:19:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:19:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:19:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:19:36 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:19:37 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:19:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:19:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:19:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:19:41 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:19:41 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:19:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:19:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:19:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:19:43 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:19:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:19:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:19:45 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:19:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:19:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:19:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:19:46 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:19:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:19:46 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:19:46 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:19:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:19:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:19:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:19:52 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:19:53 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:19:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:19:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:19:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:19:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:19:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:19:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:19:58 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:19:58 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:19:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:20:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:20:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:20:00 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:20:00 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:20:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:20:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:20:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:20:03 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:20:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:20:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:20:05 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:20:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:20:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:20:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:20:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:20:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:20:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:20:06 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:20:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:20:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:20:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:20:12 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:20:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:20:12 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:15 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:20:15 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:20:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:20:18 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:20:18 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:20:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:20:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:20:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:20:21 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:20:21 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:20:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:20:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:20:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:20:23 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:20:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:20:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:20:25 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:20:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:20:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:20:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:20:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:20:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:20:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:20:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:20:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:20:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:20:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:20:33 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:20:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:20:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:20:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:20:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:20:36 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:20:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:20:36 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:20:36 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:20:36 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:20:36 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:20:36 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:20:36 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:20:38 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:20:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:20:38 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:20:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:20:38 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:20:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:20:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:20:41 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:20:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:20:41 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:20:43 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:20:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:20:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:20:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:20:43 - [MESSAGE][PASSED] - Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:20:43 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:20:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:20:44 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:20:54 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:20:54 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:20:54 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:20:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:20:54 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:20:54 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:20:56 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:20:56 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:20:56 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:20:56 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:20:57 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:20:57 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:20:57 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:21:05 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:21:05 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:21:06 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:21:06 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:21:11 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:21:11 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:21:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:21:11 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:21:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:21:11 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:21:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:21:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:21:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:21:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:21:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:21:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:21:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:21:27 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:21:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:21:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:21:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:21:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:21:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:21:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:21:30 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:21:30 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:21:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:31 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:31 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:31 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:21:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:21:36 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:21:36 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:21:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:21:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:21:36 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:21:41 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:21:41 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:21:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:21:41 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:21:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:21:42 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:21:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:21:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:21:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:21:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:21:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:21:47 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:21:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:21:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:21:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:21:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:21:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:21:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:21:53 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:21:53 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:21:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:55 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:55 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:21:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:22:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:22:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:22:00 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:22:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:22:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:22:00 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:22:05 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:22:05 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:22:05 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:22:05 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:22:05 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:22:05 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 19:22:05 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:22:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:22:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:22:06 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:22:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:22:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:22:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:22:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:22:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:22:11 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:22:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:22:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:22:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:22:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:22:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:22:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:22:16 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:22:16 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:22:17 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:22:18 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:22:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:22:18 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:22:18 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:22:23 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:22:23 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:22:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:22:23 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:22:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:22:23 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:22:24 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:22:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:22:26 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:22:27 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:22:27 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:22:27 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:22:36 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:22:36 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:22:36 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:22:36 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:22:41 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:22:41 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:22:41 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:22:41 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:22:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:22:41 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:22:41 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:22:44 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:22:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:22:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:22:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:22:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:22:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:22:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:00 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:23:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:23:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:23:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:23:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:23:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:23:02 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:23:07 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:23:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:23:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:23:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:23:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:23:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:23:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:23:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:23:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:23:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:19 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:23:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:23:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:23:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:23:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:23:24 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:23:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:23:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:23:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:23:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:23:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:23:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:23:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:23:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:23:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:23:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:23:32 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:23:32 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:23:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:23:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:23:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:23:34 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:23:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:23:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:23:36 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:23:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:23:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:23:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:23:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:23:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:23:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:23:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:23:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:23:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:23:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:23:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:23:44 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:23:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:23:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:23:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:23:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:23:47 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:23:47 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:23:47 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:23:47 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:23:47 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:23:47 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:23:47 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:23:48 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:23:50 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:23:50 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:23:57 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:23:57 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:23:58 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:23:58 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:24:03 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:24:03 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:24:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:24:03 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:24:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:24:03 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:24:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:24:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:24:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:13 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:24:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:24:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:24:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:24:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:24:21 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:24:22 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:24:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:24:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:24:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:24:26 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:24:26 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:24:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:24:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:24:28 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:24:28 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:24:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:24:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:24:30 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:24:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:24:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:24:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:24:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:24:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:24:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:24:31 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:24:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:24:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:24:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:24:37 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:24:37 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:24:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:24:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:24:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:24:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:24:43 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:24:43 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:24:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:24:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:24:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:24:45 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:24:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:24:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:24:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:24:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:24:47 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:24:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:24:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:24:49 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:24:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:24:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:24:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:24:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:24:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:24:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:24:50 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:24:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:24:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:24:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:24:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:24:56 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:24:56 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:24:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:25:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:25:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:25:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:25:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:25:02 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:25:02 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:25:02 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:25:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:25:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:25:06 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:25:06 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:25:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:25:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:25:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:25:08 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:25:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:25:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:25:10 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:25:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:25:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:25:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:25:11 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:25:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:25:11 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:25:11 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:25:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:25:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:25:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:25:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:25:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:25:17 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:25:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:25:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:25:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:25:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:25:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:25:21 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:25:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:25:21 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:25:21 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:25:21 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:25:21 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:25:21 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:25:21 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:25:23 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:25:23 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:25:23 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:25:23 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:25:23 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:25:23 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:25:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:25:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:25:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:25:26 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:25:27 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:25:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:25:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:25:27 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:25:27 - [MESSAGE][PASSED] - Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:25:27 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:25:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:25:28 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:25:38 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:25:38 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:25:39 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:25:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:25:39 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:25:39 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:25:41 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:25:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:25:41 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:25:41 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:25:41 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:25:41 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:25:41 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:25:50 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:25:50 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:25:51 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:25:51 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:25:57 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:25:57 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:25:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:25:57 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:25:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:25:57 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:25:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:26:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:26:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:26:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:26:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:26:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:26:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:26:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:26:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:26:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:26:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:26:19 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:26:19 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:26:19 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:26:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:20 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:20 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:20 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:20 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:26:25 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:26:25 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:26:25 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:26:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:26:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:26:25 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:26:30 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:26:30 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:26:30 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:26:30 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:26:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:26:31 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:26:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:26:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:26:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:26:36 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:26:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:26:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:26:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:26:42 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:26:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:26:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:26:43 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:26:43 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:26:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:44 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:44 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:44 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:26:44 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:26:49 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:26:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:26:49 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:26:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:26:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:26:50 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:26:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:26:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:26:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:27:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:27:00 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:27:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:27:01 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:27:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:27:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:27:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:27:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:27:06 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:27:06 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:27:06 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:27:07 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:27:07 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:27:07 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:27:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:27:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:27:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:27:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:27:12 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:27:12 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:27:12 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:27:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:27:15 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:27:15 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:27:16 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:27:16 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:27:16 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:27:16 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:27:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:27:17 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:27:17 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:27:17 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:27:17 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:27:17 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:27:25 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:27:25 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:27:25 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:27:25 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:27:30 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:27:30 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:27:30 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:27:30 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:27:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:27:31 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:27:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:27:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:27:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:27:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:27:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:27:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:27:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:27:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:27:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:27:52 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:27:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:27:52 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:27:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:27:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:27:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:27:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:28:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:28:00 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:28:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:28:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:28:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:28:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:28:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:28:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:28:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:28:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:28:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:28:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:28:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:28:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:28:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:28:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:28:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:28:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:28:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:28:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:28:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:28:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:28:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:28:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:28:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:28:28 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:28:28 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:28:28 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:28:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:28:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:28:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:28:30 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:28:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:28:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:28:32 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:28:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:28:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:28:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:28:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:28:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:28:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:28:33 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:28:33 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:36 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:28:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:28:39 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:28:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:28:40 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:28:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:28:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:28:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:28:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:28:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:28:43 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:28:43 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:28:43 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:28:43 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:28:43 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:28:43 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:28:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:28:46 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:28:46 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:28:53 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:28:53 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:28:54 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:28:54 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:28:59 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:28:59 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:28:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:28:59 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:28:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:28:59 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:28:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:29:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:29:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:29:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:29:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:29:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:18 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:18 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:29:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:29:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:29:22 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:29:22 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:29:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:29:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:29:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:29:24 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:29:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:29:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:29:26 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:29:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:29:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:29:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:29:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:29:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:29:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:29:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:29:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:29:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:29:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:29:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:29:34 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:29:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:29:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:29:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:39 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:39 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:29:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:29:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:29:42 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:29:42 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:29:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:29:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:29:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:29:44 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:29:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:29:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:29:46 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:29:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:29:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:29:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:29:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:29:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:29:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:29:47 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:29:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:29:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:29:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:29:53 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:29:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:29:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:29:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:29:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:29:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:29:59 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:59 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:29:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:30:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:30:03 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:30:03 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:30:03 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:30:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:30:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:30:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:30:05 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:30:05 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:30:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:30:07 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:30:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:30:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:30:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:30:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:30:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:30:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:30:08 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:30:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:30:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:30:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:30:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:30:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:30:14 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:30:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:30:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:30:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:30:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-05-09 19:11:02 - [TEST_SUITE][PASSED] - NewArrivalSuite: Test Cases/NewArrivals]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
