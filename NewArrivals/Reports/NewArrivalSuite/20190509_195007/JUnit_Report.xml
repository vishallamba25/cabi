<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalSuite" time="1144" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalSuite" tests="1" failures="0" errors="0" time="1144" timestamp="2019-05-09 19:50:13" hostname="user - 10.0.102.159" id="Test Suites/NewArrivalSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190509_195007"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190509_195007\\execution0.log"/>
         <property name="attachments" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png, C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png"/>
         <property name="hostName" value="user - 10.0.102.159"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 74.0.3729.131"/>
         <property name="hostAddress" value="10.0.102.159"/>
         <property name="sessionId" value="01668141a2fe7cf3392586955557baa1"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrivals" classname="Test Cases/NewArrivals" status="PASSED">
         <system-out><![CDATA[2019-05-09 19:50:14 - [TEST_CASE][PASSED] - Test Cases/NewArrivals: Test Cases/NewArrivals

2019-05-09 19:50:14 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-05-09 19:50:14 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-05-09 19:50:14 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-05-09 19:50:15 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:50:15 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:50:15 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-05-09 19:50:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:50:19 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:50:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:50:21 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:50:21 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:50:21 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:50:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:50:22 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:50:22 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:50:22 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:50:22 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:50:22 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:50:22 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:50:24 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:50:24 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:50:24 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:50:24 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:50:25 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:50:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:50:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:50:27 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:50:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:50:28 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:50:30 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:50:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:50:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:50:31 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:50:31 - [MESSAGE][PASSED] - Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:50:31 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:50:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:50:31 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:50:41 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:50:41 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:50:42 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:50:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:50:42 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:50:42 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:50:44 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:50:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:50:44 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:50:45 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:50:45 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:50:45 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:50:45 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:50:53 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:50:53 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:50:54 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:50:54 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:50:59 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:50:59 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:50:59 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:50:59 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:50:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:50:59 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:50:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:51:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:51:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:51:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:51:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:51:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:51:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:51:17 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:51:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:51:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:51:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:51:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:51:21 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:51:21 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:51:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:21 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:21 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:21 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:51:26 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:51:26 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:51:26 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:51:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:51:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:51:27 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:51:32 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:51:32 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:51:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:51:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:51:32 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:51:32 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:51:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:51:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:51:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:51:38 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:51:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:51:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:51:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:51:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:51:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:51:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:51:44 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:51:44 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:51:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:46 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:46 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:46 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:51:46 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:51:51 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:51:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:51:51 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:51:51 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:51:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:51:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:51:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:51:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:51:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:51:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:51:55 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:51:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:51:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:51:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:51:59 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:52:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:52:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:52:00 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:52:00 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:52:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:52:01 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:52:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:52:01 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:52:01 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:52:06 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:52:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:52:06 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:52:06 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:52:06 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:52:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:52:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:52:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:52:07 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:52:07 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:52:07 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:52:07 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:52:10 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:52:10 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:52:11 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:52:11 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:52:11 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:52:18 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:52:18 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:52:18 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:52:18 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:52:23 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:52:23 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:52:23 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:52:23 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:52:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:52:24 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:52:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:52:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:52:27 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:52:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:52:36 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:52:39 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:52:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:52:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:52:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:52:42 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:52:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:52:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:52:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:52:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:52:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:52:45 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:52:50 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:52:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:52:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:52:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:52:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:52:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:52:59 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:53:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:53:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:53:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:53:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:53:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:53:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:53:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:53:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:53:06 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:53:08 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:53:08 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:53:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:53:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:53:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:53:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:53:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:53:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:53:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:53:15 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:53:17 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:53:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:53:17 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:53:17 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:53:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:53:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:53:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:53:19 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:53:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:53:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:53:21 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-05-09 19:53:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: 'No matching result found'

2019-05-09 19:53:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:53:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:53:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:53:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase("No matching result found"): null

2019-05-09 19:53:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:53:23 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:53:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:53:23 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:53:24 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:53:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:53:26 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:53:33 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:53:33 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:53:34 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:53:34 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:53:39 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:53:39 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:53:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:53:39 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:53:39 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:53:39 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:53:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:53:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:53:42 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:53:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:53:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:53:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:53:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:53:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:53:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:53:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:53:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:53:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:53:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:53:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:53:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:53:58 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:53:58 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:53:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:02 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:02 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:54:02 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:54:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:04 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:54:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:54:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:08 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:54:08 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:54:08 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:11 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:54:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:14 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:54:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:54:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:54:20 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:54:20 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:54:20 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:22 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:54:22 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:54:22 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:24 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:24 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:26 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:54:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:54:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:54:27 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:54:27 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:30 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:54:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:33 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:54:33 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:54:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:54:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:54:39 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:54:39 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:54:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:54:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:42 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:54:42 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:54:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:44 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:54:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:54:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:54:46 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:54:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:54:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:54:48 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:54:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:54:48 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:54:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:54:51 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:54 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:54 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:54:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:54:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:54:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:54:57 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:54:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:54:57 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:54:57 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:54:57 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:54:57 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:54:57 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:54:57 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:54:59 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:54:59 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:54:59 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:54:59 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:54:59 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:54:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:55:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:55:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:55:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:55:02 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:55:04 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:55:04 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:55:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:55:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:55:04 - [MESSAGE][PASSED] - Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:55:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:55:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:55:05 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 19:55:15 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 19:55:15 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 19:55:15 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 19:55:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:55:15 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:55:15 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:55:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:55:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:55:18 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:55:18 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:55:18 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:55:18 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:55:18 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:55:26 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:55:26 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:55:27 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:55:27 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:55:32 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:55:32 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:55:32 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:55:32 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:55:32 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:55:32 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:55:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:55:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:55:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:55:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:55:46 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:55:49 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:55:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:55:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:55:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:55:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:55:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 19:55:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:55:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 19:55:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:55:52 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:55:52 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:55:52 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:55:53 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:55:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:55:53 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:55:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:55:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:55:58 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:55:58 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:55:58 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:55:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:55:58 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:56:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:03 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:56:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:56:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:56:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:56:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:56:09 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:56:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:56:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:56:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 19:56:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:56:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 19:56:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:56:15 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:56:15 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 19:56:15 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:16 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:16 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:16 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:56:21 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:56:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:56:21 - [TEST_STEP][PASSED] - else: null

2019-05-09 19:56:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:56:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 19:56:22 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:56:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:56:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:56:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:56:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:56:29 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 19:56:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:56:30 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 19:56:30 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:56:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 19:56:30 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 19:56:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:56:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:56:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 19:56:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:56:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:56:33 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:56:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 19:56:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:56:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 19:56:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:56:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 19:56:38 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:56:38 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 19:56:38 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:56:38 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:39 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:39 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:39 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 19:56:39 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:56:44 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:56:44 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 19:56:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:56:44 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 19:56:44 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:56:44 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:56:45 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:56:47 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:56:47 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:56:49 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:56:49 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 19:56:49 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:56:57 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 19:56:57 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:56:57 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:56:57 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:57:02 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:57:02 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:57:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:57:02 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 19:57:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:57:02 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 19:57:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:57:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 19:57:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 19:57:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:21 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:57:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 19:57:21 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:57:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 19:57:24 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:57:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 19:57:24 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 19:57:29 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 19:57:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:57:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 19:57:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:34 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:57:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 19:57:34 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:57:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 19:57:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:57:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 19:57:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:57:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 19:57:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:57:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 19:57:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:57:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 19:57:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:57:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 19:57:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:57:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 19:57:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:57:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 19:57:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:57:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:57:41 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:57:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 19:57:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 19:57:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:57:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:57:45 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:57:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 19:57:48 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:57:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 19:57:50 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:57:52 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:57:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:57:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 19:57:52 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:57:54 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:57:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:57:54 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:57:54 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:57:54 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:57:56 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:57:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:57:56 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:57:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:57:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:57:58 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:57:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:57:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:57:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:57:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:57:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:57:59 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:57:59 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:57:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:58:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:58:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:58:05 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:58:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:58:05 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:58:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:58:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:58:09 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 19:58:09 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 19:58:09 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 19:58:09 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 19:58:09 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 19:58:09 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 19:58:10 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 19:58:12 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 19:58:12 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:58:18 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 19:58:18 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 19:58:19 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 19:58:19 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:58:24 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 19:58:24 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:58:24 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:58:25 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 19:58:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:58:25 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 19:58:25 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:28 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:58:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 19:58:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 19:58:35 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:38 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:58:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 19:58:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:58:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:58:44 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:58:44 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:58:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:58:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:58:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:58:49 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:58:49 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:58:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:58:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:58:51 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:58:51 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:58:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:58:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:58:53 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:58:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:58:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:58:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:58:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:58:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:58:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:58:54 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:58:54 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:58:57 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:58:57 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:00 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:00 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:59:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:59:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:59:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:59:06 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:59:06 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:59:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:59:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:59:08 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:59:08 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:59:08 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:59:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:59:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:59:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:59:10 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:59:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:59:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:59:12 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:59:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:59:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:59:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:59:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:59:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:59:13 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:59:13 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:59:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:59:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:19 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:59:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:59:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:59:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 19:59:25 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:59:25 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 19:59:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:59:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 19:59:28 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:59:28 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 19:59:28 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 19:59:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:59:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:59:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:59:30 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 19:59:30 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 19:59:32 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 19:59:32 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:59:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 19:59:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 19:59:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 19:59:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:59:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 19:59:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 19:59:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 19:59:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 19:59:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - break: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:40 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 19:59:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 19:59:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 19:59:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:59:43 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 19:59:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 19:59:43 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 19:59:43 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 19:59:43 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 19:59:43 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 19:59:43 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 19:59:43 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:59:45 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 19:59:45 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:59:45 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 19:59:45 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:59:45 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 19:59:45 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:59:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 19:59:48 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:59:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 19:59:49 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:59:50 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 19:59:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:59:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 19:59:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:59:50 - [MESSAGE][PASSED] - Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 19:59:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:59:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 19:59:51 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 20:00:01 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 20:00:01 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 20:00:01 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 20:00:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 20:00:01 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:00:01 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:00:04 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:00:04 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:00:04 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 20:00:04 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:00:04 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:00:04 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:00:04 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:00:11 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:00:11 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:00:12 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:00:12 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:00:17 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:00:17 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:00:17 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:00:18 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:00:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:00:18 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:00:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:00:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:00:21 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:00:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:00:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:00:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:00:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:00:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:00:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:00:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 20:00:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 20:00:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 20:00:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 20:00:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:00:36 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:00:36 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 20:00:36 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:00:37 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:00:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:00:37 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:00:37 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:00:42 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:00:42 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:00:42 - [TEST_STEP][PASSED] - else: null

2019-05-09 20:00:42 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:00:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:00:42 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:00:47 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 20:00:47 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:00:47 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:00:47 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:00:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:00:48 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:00:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:00:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:00:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:00:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:00:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:00:53 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:00:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:00:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 20:00:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 20:00:59 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 20:00:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 20:00:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:00:59 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:00:59 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 20:00:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:02 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:02 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:02 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:02 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:01:07 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:01:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:01:07 - [TEST_STEP][PASSED] - else: null

2019-05-09 20:01:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:01:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:01:07 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:01:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:01:12 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:01:14 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:01:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:01:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:01:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:01:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:01:15 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:01:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:01:15 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 20:01:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:01:15 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:01:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:01:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:01:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:01:18 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 20:01:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 20:01:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 20:01:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 20:01:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 20:01:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 20:01:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:01:23 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:01:23 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:01:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:24 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:01:24 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:01:29 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:01:29 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:01:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 20:01:29 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 20:01:29 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:01:29 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 20:01:30 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:01:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:01:32 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:01:33 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:01:33 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:01:33 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:01:33 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:01:33 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:01:33 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 20:01:33 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:01:34 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:01:34 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:01:34 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:01:41 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:01:41 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:01:41 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:01:41 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:01:47 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:01:47 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:01:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:01:47 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:01:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:01:47 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:01:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:01:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:01:50 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:02:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:02:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:02:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:06 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:02:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:02:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 20:02:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 20:02:09 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 20:02:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 20:02:09 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:02:14 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:02:14 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 20:02:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 20:02:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 20:02:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 20:02:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 20:02:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 20:02:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 20:02:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 20:02:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 20:02:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 20:02:28 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 20:02:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:02:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:02:30 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 20:02:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 20:02:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 20:02:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 20:02:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:02:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:02:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 20:02:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 20:02:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:02:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:02:38 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:02:38 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:02:38 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:02:38 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:02:40 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:02:40 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:02:41 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:02:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:02:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:02:43 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:02:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:02:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:02:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:02:44 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:02:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:02:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:02:44 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:02:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:02:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:02:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:02:50 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:02:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:02:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:02:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:02:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:02:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 20:02:53 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 20:02:53 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 20:02:53 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 20:02:53 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 20:02:53 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:02:53 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 20:02:54 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:02:56 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:02:56 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 20:03:03 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 20:03:03 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:03:04 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:03:04 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:03:09 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:03:09 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:03:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 20:03:09 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 20:03:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 20:03:09 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 20:03:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:03:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:03:16 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:19 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 20:03:19 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:22 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 20:03:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 20:03:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:03:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:03:27 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:03:27 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:03:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:03:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:03:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:03:32 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:03:32 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:03:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:03:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:03:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:03:34 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:03:34 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:03:36 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:03:36 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:03:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:03:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:03:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:03:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:03:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:03:37 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:03:37 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:03:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:03:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:03:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:03:43 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:03:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:03:43 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:03:44 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:47 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:03:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:03:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:03:49 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:03:49 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:03:49 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:03:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:03:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:03:51 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:03:51 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:03:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:03:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:03:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:03:53 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:03:53 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:03:55 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:03:55 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:03:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:03:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:03:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:03:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:03:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:03:56 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:03:56 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:03:56 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:03:59 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:03:59 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:04:02 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:04:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:04:02 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:04:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:02 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:04:03 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:04:06 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:04:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:04:06 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:04:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:04:08 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:04:08 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:04:08 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:04:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:04:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:04:11 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:04:11 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:04:11 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:04:13 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:04:13 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:04:13 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:04:13 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:04:15 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:04:15 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:04:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:04:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:04:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:04:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:04:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:04:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:04:17 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:04:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:04:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:04:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:04:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:04:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:04:23 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:04:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:04:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:04:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:04:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 20:04:26 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BOAddon = UtilityMethods.getTestData(dataFile, "BOAddon", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-09 20:04:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 20:04:26 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-09 20:04:26 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-09 20:04:26 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-09 20:04:26 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-09 20:04:26 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-09 20:04:26 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 20:04:28 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-09 20:04:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 20:04:28 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-09 20:04:28 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 20:04:28 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-09 20:04:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 20:04:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-09 20:04:31 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 20:04:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-09 20:04:31 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 20:04:33 - [MESSAGE][PASSED] - All options with label 'test14' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-09 20:04:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 20:04:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-09 20:04:33 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 20:04:33 - [MESSAGE][PASSED] - Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-09 20:04:33 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 20:04:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-09 20:04:34 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-09 20:04:44 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-09 20:04:44 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2019-05-09 20:04:44 - [MESSAGE][PASSED] - Browser is closed

2019-05-09 20:04:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-09 20:04:44 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:04:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:04:46 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:04:46 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:04:47 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 20:04:47 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:04:47 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:04:47 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:04:47 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:04:56 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:04:56 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:04:57 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:04:57 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:05:02 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:05:02 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:05:02 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:05:02 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:05:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:05:02 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:05:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:05:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:05:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:05:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:05:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:05:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:05:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:05:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:05:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:05:20 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_personal_purchases")): Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 20:05:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_personal_purchases' is clicked on

2019-05-09 20:05:23 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Personal Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 20:05:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Personal Store/span_Continue to Order' is clicked on

2019-05-09 20:05:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOPersonal, "storeType":"BOPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:05:23 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:05:23 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 20:05:23 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:24 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:24 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:24 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:05:29 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:05:29 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:05:29 - [TEST_STEP][PASSED] - else: null

2019-05-09 20:05:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:05:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:05:29 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:05:34 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:05:34 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 20:05:34 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 20:05:34 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 20:05:34 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 20:05:35 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BOPersonal_5618 image.png]]

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:05:35 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:05:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:05:35 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:05:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:05:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:05:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:05:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:05:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:05:40 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:05:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:05:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_retail_purchases")): Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 20:05:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_retail_purchases' is clicked on

2019-05-09 20:05:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Retail Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 20:05:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Retail Store/span_Continue to Order' is clicked on

2019-05-09 20:05:47 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BORetail, "storeType":"BORetail"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:05:47 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:05:47 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-09 20:05:47 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:49 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:49 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:05:49 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:05:54 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:05:54 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:05:54 - [TEST_STEP][PASSED] - else: null

2019-05-09 20:05:54 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Order Items/li_order_item")): Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:05:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Items/li_order_item' is clicked on

2019-05-09 20:05:54 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - imgString1 = getValue("Style", row).toString(): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - imagePath = UtilityMethods.createScreenshotImagePath(storeType, imgString1): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - println(imagePath): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - takeScreenshot(imagePath): Taking screenshot successfully

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\productImages\\BORetail_5618 image.png]]

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/GetAttribute_getID"), findTestData("productData").getValue("Style", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/GetAttribute_getID' are matched.

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Order Items/GetAttribute_Price")): Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/GetAttribute_Price' is: 'Price : $119.00'

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:05:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:05:59 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - actualRange.add(getAttribute("value").toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:06:00 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_title"), findTestData("productData").getValue("Description", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_title' are matched.

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/product_fabric"), findTestData("productData").getValue("FinalContent", row)): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/product_fabric' are matched.

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - actualCasreIntrn = "<div>" + getText(findTestObject("Page_cabi Order Items/care_instruction")) + "</div>": Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/care_instruction' is: 'Turn garment inside out and place in a mesh bag. Machine wash separately in cold water on the delicate cycle. Only non-chlorine bleach if needed. Do not twist or wring. Lay flat to dry. Warm iron if needed. Can be dry cleaned.'

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - assert actualCasreIntrn.equals(findTestData("productData").getValue("CareInstr", row)): null

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:06:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-09 20:06:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:06:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:06:05 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 20:06:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is right clicked on

2019-05-09 20:06:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_online_outline_purchases")): Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 20:06:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_online_outline_purchases' is clicked on

2019-05-09 20:06:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Online Outlet Store/span_Continue to Order")): Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 20:06:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Online Outlet Store/span_Continue to Order' is clicked on

2019-05-09 20:06:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerify"), ["available":BOOnlineoutlet, "storeType":"BOOnlineoutlet"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:06:10 - [TEST_CASE][PASSED] - Test Cases/productVerify: Test Cases/productVerify

2019-05-09 20:06:10 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:06:10 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:06:12 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:06:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:06:12 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_cabi Order Items/input_New Arrivals - Blooming Blush_style'

2019-05-09 20:06:12 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:06:17 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - noResultMessages = findWebElements(findTestObject("Page_cabi Order Items/no_result_found"), 5): null

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - assert noResultMessages.size() > 0: null

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Order Items/no_result_found"), "No Results Found!"): Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:06:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Order Items/no_result_found' are matched.

2019-05-09 20:06:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerify' successfully

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("createAPhysicalShow_IMHostess"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 20:06:17 - [TEST_CASE][PASSED] - Test Cases/createAPhysicalShow_IMHostess: Test Cases/createAPhysicalShow_IMHostess

2019-05-09 20:06:17 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:06:17 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 20:06:18 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:06:20 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:06:20 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:06:21 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:06:21 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-09 20:06:21 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:06:29 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/backoffice/control/main' successfully

2019-05-09 20:06:29 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:06:29 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:06:29 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:06:34 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:06:34 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:06:34 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:06:34 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-09 20:06:34 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:06:34 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-09 20:06:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:06:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:06:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:06:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-09 20:06:49 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:06:52 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:06:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-09 20:06:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:06:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:06:55 - [TEST_STEP][PASSED] - rightClick(findTestObject("Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:06:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is right clicked on

2019-05-09 20:06:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Create_A_Show")): Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 20:06:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Create_A_Show' is clicked on

2019-05-09 20:06:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/select_i_am_hostess")): Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 20:06:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/select_i_am_hostess' is clicked on

2019-05-09 20:06:58 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2019-05-09 20:07:03 - [MESSAGE][PASSED] - Delayed 5 second(s)

2019-05-09 20:07:03 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Show - Set Hostess/input_next")): Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 20:07:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Show - Set Hostess/input_next' is clicked on

2019-05-09 20:07:06 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Show_date_time' is right clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - rightClick(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is right clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/a_16")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/a_16' is clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/b")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/b' is clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/div_Location for ShowSame as Hostess Home Address' is clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input__address_Same_as_hostess' is clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 20:07:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Same as show location' is clicked on

2019-05-09 20:07:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 20:07:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/label_Tax Rate Calculated' is clicked on

2019-05-09 20:07:13 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Create ShowTime_Place/input_Back_section")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 20:07:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_Back_section' is clicked on

2019-05-09 20:07:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create ShowTime_Place/input_ShowSummaryTab")): Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 20:07:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create ShowTime_Place/input_ShowSummaryTab' is clicked on

2019-05-09 20:07:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/createAPhysicalShow_IMHostess' successfully

2019-05-09 20:07:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:07:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:07:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/span_orders")): Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 20:07:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/span_orders' is clicked on

2019-05-09 20:07:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Orders/button_placeOrder")): Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 20:07:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Orders/button_placeOrder' is clicked on

2019-05-09 20:07:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:07:26 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:07:26 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Order Entry/span_orderItems")): Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 20:07:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Order Entry/span_orderItems' is clicked on

2019-05-09 20:07:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:07:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:07:28 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":BOShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:07:28 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:07:28 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:07:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:07:30 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:07:30 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:07:31 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:07:31 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:07:33 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:07:33 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:07:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:07:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:07:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:07:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:07:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:07:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:07:34 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:07:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:07:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:07:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:07:40 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:07:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:07:40 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:07:43 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:07:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:07:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("cabiCentralLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 20:07:43 - [TEST_CASE][PASSED] - Test Cases/cabiCentralLogin: Test Cases/cabiCentralLogin

2019-05-09 20:07:43 - [TEST_STEP][PASSED] - CCURL = findTestData("credData").getValue("CCURL", 1): null

2019-05-09 20:07:43 - [TEST_STEP][PASSED] - CCuser = findTestData("credData").getValue("CCuser", 1): null

2019-05-09 20:07:43 - [TEST_STEP][PASSED] - CCpass = findTestData("credData").getValue("CCpass", 1): null

2019-05-09 20:07:43 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-09 20:07:43 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2019-05-09 20:07:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-05-09 20:07:46 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-09 20:07:46 - [TEST_STEP][PASSED] - navigateToUrl(CCURL): Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 20:07:53 - [MESSAGE][PASSED] - Navigate to 'https://test14.cliotest.com/cabicentral/control/main' successfully

2019-05-09 20:07:53 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-09 20:07:54 - [MESSAGE][PASSED] - Current window maximized

2019-05-09 20:07:54 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 5): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:07:59 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-09 20:07:59 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:07:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Username_USERNAME"), CCuser): Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 20:08:00 - [MESSAGE][PASSED] - Text 'ehudson' is set on object 'Object Repository/Page_cabi/input_Username_USERNAME'

2019-05-09 20:08:00 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Password_PASSWORD"), CCpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 20:08:00 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Password_PASSWORD'

2019-05-09 20:08:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat")): Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:08:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Password_section-btn btn-stl-pk rFloat' is clicked on

2019-05-09 20:08:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/cabiCentralLogin' successfully

2019-05-09 20:08:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:13 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi cabiCentral Tasks/a_ORDERS")): Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 20:08:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi cabiCentral Tasks/a_ORDERS' is clicked on

2019-05-09 20:08:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:18 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "PERSONAL", true): All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:18 - [MESSAGE][PASSED] - All options with value 'PERSONAL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:18 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:08:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:08:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCPersonal, "storeType":"CCPersonal"], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:08:23 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:08:23 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:08:23 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:08:25 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:08:25 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:08:25 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:08:25 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:08:27 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:08:27 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:08:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:08:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:08:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:08:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:08:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:08:28 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:08:28 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:08:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:08:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:08:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:08:34 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:08:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:08:34 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:37 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:08:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:40 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "RETAIL", true): All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:40 - [MESSAGE][PASSED] - All options with value 'RETAIL' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:40 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:08:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:08:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCRetail], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:08:42 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:08:42 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:08:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:08:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:08:44 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:08:44 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:08:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:08:46 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:08:46 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:08:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:08:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:08:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:08:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:08:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:08:47 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:08:47 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:08:47 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:50 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:08:50 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:53 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:08:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:08:53 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:08:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:08:53 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:08:56 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:08:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:08:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Find Order/a_Create Order")): Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Find Order/a_Create Order' is clicked on

2019-05-09 20:08:58 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Page_cabi Create Order/select_order_type"), "SHOW", true): All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:59 - [MESSAGE][PASSED] - All options with value 'SHOW' are selected in object 'Object Repository/Page_cabi Create Order/select_order_type'  using regular expression

2019-05-09 20:08:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/input_select_order_type")): Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:09:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/input_select_order_type' is clicked on

2019-05-09 20:09:02 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productVerifyShort"), ["available":CCShow], STOP_ON_FAILURE): Call Test Case 'Test Cases/productVerifyShort' successfully

2019-05-09 20:09:02 - [TEST_CASE][PASSED] - Test Cases/productVerifyShort: Test Cases/productVerifyShort

2019-05-09 20:09:02 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Delayed 3 second(s)

2019-05-09 20:09:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:09:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:09:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:09:04 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Create Order/input_Manual Discount_stylelookup_0'

2019-05-09 20:09:04 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-09 20:09:06 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-09 20:09:06 - [TEST_STEP][PASSED] - prod_message = getText(findTestObject("Page_cabi Create Order/first_option")): Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:09:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/first_option' is: '5618 Breeze Dress'

2019-05-09 20:09:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-05-09 20:09:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-05-09 20:09:07 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Create Order/first_option")): Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:09:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Create Order/first_option' is clicked on

2019-05-09 20:09:07 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-09 20:09:07 - [TEST_STEP][PASSED] - else: Delayed 3 second(s)

2019-05-09 20:09:07 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:09:10 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - s1 = getValue("Style", row).toString(): null

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - s2 = " ": null

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - s3 = getValue("Description", row).toString(): null

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - expectedStyleDescription = $s1$s2$s3: null

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - assert prod_message.equalsIgnoreCase(expectedStyleDescription): null

2019-05-09 20:09:10 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:09:13 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - colorOptions = findWebElements(findTestObject("Page_cabi Order Items/GetAttribute_Color"), 5): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - println(colorOptions.size()): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - expectedColour = findTestData("productData").getValue("Color", row): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - println("expected colour is"): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - println(expectedColour): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - colourVerified = false: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement op : colorOptions): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - println(op.getText()): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - if (expectedColour.equalsIgnoreCase(op.getText())): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - colourVerified = true: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - break: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - assert colourVerified == true: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - getPrice = getText(findTestObject("Page_cabi Create Order/retail_price")): Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:09:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Create Order/retail_price' is: '$119.00'

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - Split_Data = UtilityMethods.SplitData(getPrice): null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - verifyMatch(Split_Data, findTestData("productData").getValue("Retail", row), true): Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:09:13 - [MESSAGE][PASSED] - Actual text '119' and expected text '119' are matched  using regular expression

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - sizeRange1 = ["XXS", "XS", "S", "M", "L", "XL"]: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - sizeRange2 = ["00", "0", "2", "4", "6", "8", "10", "12", "14", "16"]: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - sizeRange3 = ["Long", "Regular", "Short"]: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - sizeRange4 = ["5", "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "11"]: null

2019-05-09 20:09:13 - [TEST_STEP][PASSED] - sizeRangeSplit = UtilityMethods.SplitSizes(findTestData("productData").getValue("SzRange", row)): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - sizeType = getText(findTestObject("Object Repository/Page_cabi Order Items/Size")): Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:09:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Order Items/Size' is: 'Select'

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - sizeOptions = findWebElements(findTestObject("Object Repository/Page_cabi Order Items/Size"), 5): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange = new java.util.ArrayList(): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - expectedRange = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - if (sizeType.equalsIgnoreCase("Select")): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - for ([i = 1, i < sizeOptions.size(), (i++)]): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - actualRange.add(get(i).getText()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("XS") || toString().equalsIgnoreCase("XXS")): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - expectedRange = UtilityMethods.getExpectedRange(sizeRange1, sizeRangeSplit): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - println("XS"): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - println(expectedRange.toString()): null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedRange, actualRange) == true: null

2019-05-09 20:09:14 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-09 20:09:17 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-09 20:09:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productVerifyShort' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-05-09 19:50:13 - [TEST_SUITE][PASSED] - NewArrivalSuite: Test Cases/NewArrivals]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
