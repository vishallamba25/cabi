<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="NewArrivalSuite" time="315" tests="1" failures="0" errors="0">
   <testsuite name="NewArrivalSuite" tests="1" failures="0" errors="0" time="315" timestamp="2019-05-16 20:12:26" hostname="user - 10.0.102.159" id="Test Suites/NewArrivalSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190516_201223"/>
         <property name="logFiles" value="C:\\Users\\user\\Documents\\testautomation\\NewArrivals\\Reports\\NewArrivalSuite\\20190516_201223\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="user - 10.0.102.159"/>
         <property name="os" value="Windows 8.1 64bit"/>
         <property name="katalonVersion" value="6.1.1.1"/>
         <property name="browser" value="Chrome 74.0.3729.131"/>
         <property name="hostAddress" value="10.0.102.159"/>
         <property name="sessionId" value="85e66a53280d40f822a9cd3dc44e1779"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 8.1"/>
      </properties>
      <testcase name="Test Cases/NewArrivals" classname="Test Cases/NewArrivals" status="PASSED">
         <system-out><![CDATA[2019-05-16 20:12:26 - [TEST_CASE][PASSED] - Test Cases/NewArrivals: Test Cases/NewArrivals

2019-05-16 20:12:26 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: null

2019-05-16 20:12:26 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseId()): null

2019-05-16 20:12:26 - [TEST_STEP][PASSED] - println(testCaseContext.getTestCaseVariables()): null

2019-05-16 20:12:27 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2019-05-16 20:12:27 - [MESSAGE][INFO] - Starting 'Chrome (headless)' driver

2019-05-16 20:12:27 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-05-16 20:12:30 - [MESSAGE][PASSED] - Browser is opened with url: ''

2019-05-16 20:12:30 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2019-05-16 20:12:31 - [MESSAGE][PASSED] - Current window maximized

2019-05-16 20:12:31 - [TEST_STEP][PASSED] - for ([timeRow = 1, timeRow <= findTestData("timezoneData").getRowNumbers(), (timeRow++)]): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:12:32 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:12:32 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-16 20:12:32 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-16 20:12:32 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-16 20:12:33 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-16 20:12:34 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-05-16 20:12:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:12:34 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:12:34 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-16 20:12:34 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-16 20:12:34 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-16 20:12:34 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-16 20:12:34 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-16 20:12:34 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:12:38 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:12:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:12:38 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:12:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:12:38 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:12:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:12:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:12:41 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:12:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:12:42 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:12:43 - [MESSAGE][PASSED] - All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:12:43 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:12:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:12:43 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:12:44 - [MESSAGE][PASSED] - Text ' 04/17/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:12:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:12:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:12:44 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-16 20:12:54 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-16 20:12:54 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-05-16 20:12:54 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-05-16 20:12:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:12:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productWatchlist"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:12:54 - [TEST_CASE][PASSED] - Test Cases/productWatchlist: Test Cases/productWatchlist

2019-05-16 20:12:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:12:55 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:12:55 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:12:55 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:12:55 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:12:55 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:13:02 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:13:02 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:13:03 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:13:03 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:13:03 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:13:03 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:13:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:13:04 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:13:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:13:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:13:11 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:13:14 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:13:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:13:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:13:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:13:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Product Watch List")): Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:13:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:13:17 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:13:17 - [TEST_STEP][PASSED] - noResultFound = findWebElements(findTestObject("Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)"), 5): Unable to find the element located by 'By.xpath: //table[@ng-if='products']/thead/tr[@class='table-header-description']/th/span[contains(text(), ' (New Arrivals 2)')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:13:23 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //table[@ng-if='products']/thead/tr[@class='table-header-description']/th/span[contains(text(), ' (New Arrivals 2)')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:13:23 - [TEST_STEP][PASSED] - assert noResultFound.size() == 0: null

2019-05-16 20:13:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:13:23 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productEblast"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:13:23 - [TEST_CASE][PASSED] - Test Cases/productEblast: Test Cases/productEblast

2019-05-16 20:13:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:13:24 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:13:24 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:13:24 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:13:24 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:13:24 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:13:30 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:13:30 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): null

2019-05-16 20:13:30 - [TEST_STEP][PASSED] - if (logOut.size() == 0): null

2019-05-16 20:13:30 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:13:33 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:13:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:13:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Connections")): Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:13:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:13:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Contact Manager")): Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:13:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:13:38 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi/span_SEND eBLAST")): Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:13:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:13:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/a_Stylist Picks")): Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:13:46 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST")): Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:13:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:13:46 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:13:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:13:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:13:48 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi Eblast/eBlastStyleSearch"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:13:48 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:13:48 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:13:50 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - style_notfound = findWebElements(findTestObject("Page_cabi Eblast/styleNotFound"), 5): null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - println(style_notfound.size()): null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - assert style_notfound.size() > 0: null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Eblast/styleNotFound"), "No matching product"): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:13:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:13:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:13:50 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-16 20:13:50 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-05-16 20:13:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:13:51 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-16 20:13:51 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-16 20:13:51 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-16 20:13:51 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-16 20:13:51 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-16 20:13:51 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:13:53 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:13:53 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:13:53 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:13:53 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:13:53 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:13:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:13:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:13:54 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:13:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:13:55 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:13:56 - [MESSAGE][PASSED] - All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:13:56 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:13:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:13:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text '4/25/19 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:13:56 - [MESSAGE][PASSED] - Text '4/25/19 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:13:56 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:13:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:13:57 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-16 20:14:07 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-16 20:14:07 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-05-16 20:14:07 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-05-16 20:14:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productWatchlist"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:14:07 - [TEST_CASE][PASSED] - Test Cases/productWatchlist: Test Cases/productWatchlist

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:14:07 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:14:07 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:14:10 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:14:10 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:14:11 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:14:11 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:14:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:14:11 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:14:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:14:11 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:14:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:14:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:14:17 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:14:20 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:14:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:14:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:14:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:14:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Product Watch List")): Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:14:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:14:21 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:14:21 - [TEST_STEP][PASSED] - noResultFound = findWebElements(findTestObject("Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)"), 5): Unable to find the element located by 'By.xpath: //table[@ng-if='products']/thead/tr[@class='table-header-description']/th/span[contains(text(), ' (New Arrivals 2)')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:14:27 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //table[@ng-if='products']/thead/tr[@class='table-header-description']/th/span[contains(text(), ' (New Arrivals 2)')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - assert noResultFound.size() == 0: null

2019-05-16 20:14:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productEblast"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:14:27 - [TEST_CASE][PASSED] - Test Cases/productEblast: Test Cases/productEblast

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:14:27 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:14:27 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:14:32 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:14:32 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): null

2019-05-16 20:14:32 - [TEST_STEP][PASSED] - if (logOut.size() == 0): null

2019-05-16 20:14:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:14:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:14:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:14:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Connections")): Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:14:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:14:36 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Contact Manager")): Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:14:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:14:37 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi/span_SEND eBLAST")): Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:14:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:14:38 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/a_Stylist Picks")): Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:14:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:14:47 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST")): Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:14:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:14:47 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:14:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:14:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:14:49 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi Eblast/eBlastStyleSearch"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:14:49 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:14:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:14:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - style_notfound = findWebElements(findTestObject("Page_cabi Eblast/styleNotFound"), 5): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - println(style_notfound.size()): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - assert style_notfound.size() > 0: null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Eblast/styleNotFound"), "No matching product"): Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:14:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Eblast/styleNotFound' are matched.

2019-05-16 20:14:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:14:51 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-05-16 20:14:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:14:51 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:14:51 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-16 20:14:52 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-16 20:14:52 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-16 20:14:52 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-16 20:14:52 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-16 20:14:52 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:14:53 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:14:53 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:14:53 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:14:53 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:14:53 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:14:53 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:14:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:14:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:14:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:14:55 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:14:57 - [MESSAGE][PASSED] - All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:14:57 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:14:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:14:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:14:57 - [MESSAGE][PASSED] - Text ' 05/03/2019 12:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:14:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:14:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:14:58 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-16 20:15:08 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-16 20:15:08 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-05-16 20:15:08 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-05-16 20:15:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productWatchlist"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:15:08 - [TEST_CASE][PASSED] - Test Cases/productWatchlist: Test Cases/productWatchlist

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:15:08 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:15:08 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:15:10 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:15:10 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:15:11 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:15:11 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:15:11 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:15:11 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:15:11 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:15:11 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:15:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:15:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:15:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:15:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:15:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:15:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:15:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:15:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Product Watch List")): Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:15:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:15:20 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:15:20 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:15:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)")): Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:15:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Product Watch list/span_(New Arrivals 2)"), "(New Arrivals 2)"): Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:15:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualProductList = findWebElements(findTestObject("Object Repository/Page_cabi Product Watch list/div_product_list"), 5): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(actualProductList.size()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList = new java.util.ArrayList(): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - expectedList = new java.util.ArrayList(): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement product : actualProductList): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:24 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData1").getRowNumbers(), (row++)]): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:25 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedList, actualList) == true: null

2019-05-16 20:15:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productEblast"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:15:26 - [TEST_CASE][PASSED] - Test Cases/productEblast: Test Cases/productEblast

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:15:26 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:15:26 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:15:31 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:15:31 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): null

2019-05-16 20:15:31 - [TEST_STEP][PASSED] - if (logOut.size() == 0): null

2019-05-16 20:15:31 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:15:34 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:15:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:15:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Connections")): Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:15:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:15:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Contact Manager")): Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:15:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:15:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi/span_SEND eBLAST")): Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:15:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:15:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/a_Stylist Picks")): Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:15:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:15:45 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST")): Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:15:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:15:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-16 20:15:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:15:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:15:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi Eblast/eBlastStyleSearch"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:15:47 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:15:47 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - space = " ": null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - openbrace = "(": null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - closebrace = ")": null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - style_id = getText(findTestObject("Page_cabi Eblast/style_id")): Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - style_name = getText(findTestObject("Page_cabi Eblast/style_name")): Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - style_color = getText(findTestObject("Page_cabi Eblast/style_color")): Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - style_web = $style_id$space$style_name$space$style_color: null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - styleid_name = findTestData("productData").getValue("Description", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - styleid_color = findTestData("productData").getValue("Color", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - style_data = $styleid_data$space$styleid_name$space$openbrace$styleid_color$closebrace: null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - println(style_web): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - println(style_data): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - assert style_data.equalsIgnoreCase(style_web): null

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:15:49 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-05-16 20:15:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:15:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:15:50 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-16 20:15:50 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-16 20:15:50 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-16 20:15:50 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-16 20:15:50 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-16 20:15:50 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:15:51 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:15:51 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:15:51 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:15:51 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:15:51 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:15:51 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:15:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:15:53 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:15:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:15:54 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:15:55 - [MESSAGE][PASSED] - All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:15:55 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:15:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:15:55 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:15:55 - [MESSAGE][PASSED] - Text ' 05/08/2019 7:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:15:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:15:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:15:56 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-16 20:16:06 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-16 20:16:06 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-05-16 20:16:06 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-05-16 20:16:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productWatchlist"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:16:06 - [TEST_CASE][PASSED] - Test Cases/productWatchlist: Test Cases/productWatchlist

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:16:06 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:16:06 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:16:08 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:16:08 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:16:09 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:16:09 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:16:09 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:16:09 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:16:09 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:16:09 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:16:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:16:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:16:13 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:16:16 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:16:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:16:16 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:16:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:16:17 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Product Watch List")): Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:16:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:16:18 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:16:18 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:16:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)")): Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:16:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Product Watch list/span_(New Arrivals 2)"), "(New Arrivals 2)"): Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:16:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualProductList = findWebElements(findTestObject("Object Repository/Page_cabi Product Watch list/div_product_list"), 5): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(actualProductList.size()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList = new java.util.ArrayList(): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedList = new java.util.ArrayList(): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement product : actualProductList): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData1").getRowNumbers(), (row++)]): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:21 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedList, actualList) == true: null

2019-05-16 20:16:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productEblast"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:16:22 - [TEST_CASE][PASSED] - Test Cases/productEblast: Test Cases/productEblast

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:16:22 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:16:22 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:16:23 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:16:23 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:16:26 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:16:26 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): null

2019-05-16 20:16:26 - [TEST_STEP][PASSED] - if (logOut.size() == 0): null

2019-05-16 20:16:26 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:16:29 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:16:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:16:29 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Connections")): Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:16:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:16:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Contact Manager")): Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:16:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:16:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi/span_SEND eBLAST")): Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:16:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:16:32 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/a_Stylist Picks")): Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:16:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:16:40 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST")): Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:16:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:16:40 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-16 20:16:40 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:16:42 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:16:42 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi Eblast/eBlastStyleSearch"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:16:42 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:16:42 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:16:44 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - space = " ": null

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - openbrace = "(": null

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - closebrace = ")": null

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - style_id = getText(findTestObject("Page_cabi Eblast/style_id")): Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:16:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - style_name = getText(findTestObject("Page_cabi Eblast/style_name")): Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:16:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:16:44 - [TEST_STEP][PASSED] - style_color = getText(findTestObject("Page_cabi Eblast/style_color")): Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:16:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - style_web = $style_id$space$style_name$space$style_color: null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - styleid_name = findTestData("productData").getValue("Description", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - styleid_color = findTestData("productData").getValue("Color", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - style_data = $styleid_data$space$styleid_name$space$openbrace$styleid_color$closebrace: null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - println(style_web): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - println(style_data): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - assert style_data.equalsIgnoreCase(style_web): null

2019-05-16 20:16:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("populateTimeGlobalVars"), ["row":timeRow], STOP_ON_FAILURE): Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:16:45 - [TEST_CASE][PASSED] - Test Cases/populateTimeGlobalVars: Test Cases/populateTimeGlobalVars

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - dataFile = "timezoneData": null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - serverTarget = UtilityMethods.getTestData(dataFile, "serverTarget", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - orderType = UtilityMethods.getTestData(dataFile, "orderType", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - timeZone = UtilityMethods.getTestData(dataFile, "timeZone", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOPersonal = UtilityMethods.getTestData(dataFile, "BOPersonal", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOAddonPersonal = UtilityMethods.getTestData(dataFile, "BOAddonPersonal", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOAddonRetail = UtilityMethods.getTestData(dataFile, "BOAddonRetail", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BORetail = UtilityMethods.getTestData(dataFile, "BORetail", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOShow = UtilityMethods.getTestData(dataFile, "BOShow", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOOnlineoutlet = UtilityMethods.getTestData(dataFile, "BOOnlineoutlet", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOEmployee = UtilityMethods.getTestData(dataFile, "BOEmployee", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - CCPersonal = UtilityMethods.getTestData(dataFile, "CCPersonal", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - CCRetail = UtilityMethods.getTestData(dataFile, "CCRetail", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - CCShow = UtilityMethods.getTestData(dataFile, "CCShow", row): null

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - BOEblast = UtilityMethods.getTestData(dataFile, "BOEblast", row): null

2019-05-16 20:16:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/populateTimeGlobalVars' successfully

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("newArrivalsSetTimezone"), ["ofbizURL":ofbizURL, "ofbizuser":ofbizuser, "ofbizpass":ofbizpass, "orderType":orderType, "timeZone":timeZone, "serverTarget":serverTarget], STOP_ON_FAILURE): Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:16:45 - [TEST_CASE][PASSED] - Test Cases/newArrivalsSetTimezone: Test Cases/newArrivalsSetTimezone

2019-05-16 20:16:45 - [TEST_STEP][NOT_RUN] - openBrowser(""): NOT_RUN: openBrowser("")

2019-05-16 20:16:45 - [MESSAGE][NOT_RUN] - NOT_RUN: openBrowser("")

2019-05-16 20:16:45 - [TEST_STEP][NOT_RUN] - maximizeWindow(): NOT_RUN: maximizeWindow()

2019-05-16 20:16:45 - [MESSAGE][NOT_RUN] - NOT_RUN: maximizeWindow()

2019-05-16 20:16:45 - [TEST_STEP][PASSED] - navigateToUrl(ofbizURL): Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:16:47 - [MESSAGE][PASSED] - Navigate to 'https://pushofbiz.cliotest.com/login.php' successfully

2019-05-16 20:16:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Username_username"), ofbizuser): Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:16:47 - [MESSAGE][PASSED] - Text 'sshinde' is set on object 'Object Repository/Page_/input_Username_username'

2019-05-16 20:16:47 - [TEST_STEP][PASSED] - setText(findTestObject("Page_/input_Password_password"), ofbizpass): Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:16:47 - [MESSAGE][PASSED] - Text 'C@bi$ush5' is set on object 'Object Repository/Page_/input_Password_password'

2019-05-16 20:16:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_/input_Password_Submit")): Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:16:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input_Password_Submit' is clicked on

2019-05-16 20:16:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/a_Clock set")): Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:16:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/a_Clock set' is clicked on

2019-05-16 20:16:49 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Object Repository/Page_/serverTarget"), serverTarget, true): All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:16:50 - [MESSAGE][PASSED] - All options with label 'test17' are selected in object 'Object Repository/Page_/serverTarget'  using regular expression

2019-05-16 20:16:50 - [TEST_STEP][PASSED] - click(findTestObject("Page_/thisDateAndTime")): Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:16:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/thisDateAndTime' is clicked on

2019-05-16 20:16:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/setTargetTime"), timeZone): Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:16:51 - [MESSAGE][PASSED] - Text ' 05/22/2019 00:00' is set on object 'Object Repository/Page_/setTargetTime'

2019-05-16 20:16:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/input")): Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:16:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/input' is clicked on

2019-05-16 20:16:51 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2019-05-16 20:17:01 - [MESSAGE][PASSED] - Delayed 10 second(s)

2019-05-16 20:17:01 - [TEST_STEP][NOT_RUN] - closeBrowser(): NOT_RUN: closeBrowser()

2019-05-16 20:17:01 - [MESSAGE][NOT_RUN] - NOT_RUN: closeBrowser()

2019-05-16 20:17:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/newArrivalsSetTimezone' successfully

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productWatchlist"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:17:01 - [TEST_CASE][PASSED] - Test Cases/productWatchlist: Test Cases/productWatchlist

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:17:01 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:17:01 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:17:04 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:17:04 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:17:05 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //a[contains(text(),'Log Out')]'. Please recheck the objects properties to make sure the desired element is located. 

2019-05-16 20:17:05 - [TEST_STEP][PASSED] - if (logOut.size() == 0): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:17:05 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi/input_Welcome to_USERNAME"), BOuser): Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:17:05 - [MESSAGE][PASSED] - Text '400000002' is set on object 'Object Repository/Page_cabi/input_Welcome to_USERNAME'

2019-05-16 20:17:05 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_cabi/input_Welcome to_PASSWORD"), BOpass): Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:17:05 - [MESSAGE][PASSED] - Text 'blackdress19' is set on object 'Object Repository/Page_cabi/input_Welcome to_PASSWORD'

2019-05-16 20:17:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi/input_Welcome to_consultantLogin")): Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:17:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/input_Welcome to_consultantLogin' is clicked on

2019-05-16 20:17:09 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:17:12 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:17:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:17:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Shows  Orders")): Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:17:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Shows  Orders' is clicked on

2019-05-16 20:17:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Home/a_Product Watch List")): Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:17:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Product Watch List' is clicked on

2019-05-16 20:17:14 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:17:14 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:17:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)")): Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:17:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' is clicked on

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Page_cabi Product Watch list/span_(New Arrivals 2)"), "(New Arrivals 2)"): Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:17:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Page_cabi Product Watch list/span_(New Arrivals 2)' are matched.

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualProductList = findWebElements(findTestObject("Object Repository/Page_cabi Product Watch list/div_product_list"), 5): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(actualProductList.size()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList = new java.util.ArrayList(): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - expectedList = new java.util.ArrayList(): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement product : actualProductList): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - actualList.add(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(product.getText()): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData1").getRowNumbers(), (row++)]): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:17 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productStyle = findTestData("productData1").getValue("Style", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productDescription = findTestData("productData1").getValue("Description", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - productColor = findTestData("productData1").getValue("Color", row): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedString = UtilityMethods.createSkuForPWL(productStyle, productDescription, productColor): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - println(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - expectedList.add(expectedString): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - assert UtilityMethods.listEquals(expectedList, actualList) == true: null

2019-05-16 20:17:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productWatchlist' successfully

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("productEblast"), ["available":BOEblast], STOP_ON_FAILURE): Call Test Case 'Test Cases/productEblast' successfully

2019-05-16 20:17:18 - [TEST_CASE][PASSED] - Test Cases/productEblast: Test Cases/productEblast

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("backOfficeLogin"), ["BOURL":"", "BOuser":"", "BOpass":""], STOP_ON_FAILURE): Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:17:18 - [TEST_CASE][PASSED] - Test Cases/backOfficeLogin: Test Cases/backOfficeLogin

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - BOURL = findTestData("credData").getValue("BOURL", 1): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - BOuser = findTestData("credData").getValue("BOuser", 1): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - BOpass = findTestData("credData").getValue("BOpass", 1): null

2019-05-16 20:17:18 - [TEST_STEP][PASSED] - navigateToUrl(BOURL): Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:17:23 - [MESSAGE][PASSED] - Navigate to 'https://test17.cliotest.com/backoffice/control/main' successfully

2019-05-16 20:17:23 - [TEST_STEP][PASSED] - logOut = findWebElements(findTestObject("Object Repository/Page_cabi Home/log_out"), 1): null

2019-05-16 20:17:23 - [TEST_STEP][PASSED] - if (logOut.size() == 0): null

2019-05-16 20:17:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2019-05-16 20:17:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2019-05-16 20:17:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/backOfficeLogin' successfully

2019-05-16 20:17:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Connections")): Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:17:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Connections' is clicked on

2019-05-16 20:17:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi Home/a_Contact Manager")): Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:17:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Home/a_Contact Manager' is clicked on

2019-05-16 20:17:27 - [TEST_STEP][PASSED] - click(findTestObject("Page_cabi/span_SEND eBLAST")): Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:17:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi/span_SEND eBLAST' is clicked on

2019-05-16 20:17:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/a_Stylist Picks")): Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:17:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/a_Stylist Picks' is clicked on

2019-05-16 20:17:36 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST")): Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:17:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_cabi Eblast/button_ADD PRODUCTS TO EBLAST' is clicked on

2019-05-16 20:17:36 - [TEST_STEP][PASSED] - for ([row = 1, row <= findTestData("productData").getRowNumbers(), (row++)]): null

2019-05-16 20:17:36 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:17:38 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:17:38 - [TEST_STEP][PASSED] - setText(findTestObject("Page_cabi Eblast/eBlastStyleSearch"), findTestData("productData").getValue("Style", row)): Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:17:39 - [MESSAGE][PASSED] - Text '5618' is set on object 'Object Repository/Page_cabi Eblast/eBlastStyleSearch'

2019-05-16 20:17:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2019-05-16 20:17:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - if (toString().equalsIgnoreCase("no")): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - else: null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - space = " ": null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - openbrace = "(": null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - closebrace = ")": null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - style_id = getText(findTestObject("Page_cabi Eblast/style_id")): Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:17:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_id' is: '5618'

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - style_name = getText(findTestObject("Page_cabi Eblast/style_name")): Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:17:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_name' is: 'Breeze Dress'

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - style_color = getText(findTestObject("Page_cabi Eblast/style_color")): Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:17:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_cabi Eblast/style_color' is: '(Heather Gray)'

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - style_web = $style_id$space$style_name$space$style_color: null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - styleid_data = findTestData("productData").getValue("Style", row): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - styleid_name = findTestData("productData").getValue("Description", row): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - styleid_color = findTestData("productData").getValue("Color", row): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - style_data = $styleid_data$space$styleid_name$space$openbrace$styleid_color$closebrace: null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - println(style_web): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - println(style_data): null

2019-05-16 20:17:41 - [TEST_STEP][PASSED] - assert style_data.equalsIgnoreCase(style_web): null

2019-05-16 20:17:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/productEblast' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-05-16 20:12:26 - [TEST_SUITE][PASSED] - NewArrivalSuite: Test Cases/NewArrivals]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
